{"version":3,"file":"libjass.js","sources":["?","index.ts","parser/index.ts","parser/misc.ts","parser/parse.ts","parser/stream-parsers.ts","parser/streams.ts","parts/drawing.ts","parts/index.ts","renderers/clocks/auto.ts","renderers/clocks/base.ts","renderers/clocks/manual.ts","renderers/clocks/video.ts","renderers/default.ts","renderers/index.ts","renderers/null.ts","renderers/settings.ts","renderers/web/animation-collection.ts","renderers/web/dom-parser.ts","renderers/web/drawing-styles.ts","renderers/web/keyframe.ts","renderers/web/renderer.ts","renderers/web/span-styles.ts","settings.ts","types/ass.ts","types/dialogue.ts","types/misc.ts","types/script-properties.ts","types/style.ts","utility/extends.ts","utility/map.ts","utility/mixin.ts","utility/promise.ts","utility/set.ts","webworker/channel.ts","webworker/commands.ts","webworker/index.ts","webworker/misc.ts"],"names":["root","factory","global","this","exports","module","define","amd","modules","installedModules","Object","create","require","moduleId","id","loaded","settings","settings_1","debugMode","verboseMode","set","set_1","Set","map","map_1","Map","promise","promise_1","Promise","DeferredPromise","webworker","parts","parser","renderers","ass_1","ASS","dialogue_1","Dialogue","script_properties_1","ScriptProperties","style_1","Style","misc_1","BorderStyle","Format","WrappingStyle","defineProperties","get","setDebugMode","setVerboseMode","setImplementation","parse_1","parse","streams_1","BrowserReadableStream","StringStream","XhrStream","stream_parsers_1","StreamParser","SrtStreamParser","line","parseLineIntoProperty","formatSpecifier","parseLineIntoTypedTemplate","rules","input","rule","ParserRun","ParserRun.constructor","ParserRun.result","ParserRun.parse_dialogueParts","ParserRun.parse_enclosedTags","ParserRun.parse_newline","ParserRun.parse_hardspace","ParserRun.parse_text","ParserRun.parse_comment","ParserRun.parse_tag_a","ParserRun.parse_tag_alpha","ParserRun.parse_tag_an","ParserRun.parse_tag_b","ParserRun.parse_tag_be","ParserRun.parse_tag_blur","ParserRun.parse_tag_bord","ParserRun.parse_tag_c","ParserRun.parse_tag_clip","ParserRun.parse_tag_fad","ParserRun.parse_tag_fade","ParserRun.parse_tag_fax","ParserRun.parse_tag_fay","ParserRun.parse_tag_fn","ParserRun.parse_tag_fr","ParserRun.parse_tag_frx","ParserRun.parse_tag_fry","ParserRun.parse_tag_frz","ParserRun.parse_tag_fs","ParserRun.parse_tag_fsplus","ParserRun.parse_tag_fsminus","ParserRun.parse_tag_fscx","ParserRun.parse_tag_fscy","ParserRun.parse_tag_fsp","ParserRun.parse_tag_i","ParserRun.parse_tag_iclip","ParserRun.parse_tag_k","ParserRun.parse_tag_K","ParserRun.parse_tag_kf","ParserRun.parse_tag_ko","ParserRun.parse_tag_move","ParserRun.parse_tag_org","ParserRun.parse_tag_p","ParserRun.parse_tag_pbo","ParserRun.parse_tag_pos","ParserRun.parse_tag_q","ParserRun.parse_tag_r","ParserRun.parse_tag_s","ParserRun.parse_tag_shad","ParserRun.parse_tag_t","ParserRun.parse_tag_u","ParserRun.parse_tag_xbord","ParserRun.parse_tag_xshad","ParserRun.parse_tag_ybord","ParserRun.parse_tag_yshad","ParserRun.parse_tag_1a","ParserRun.parse_tag_1c","ParserRun.parse_tag_2a","ParserRun.parse_tag_2c","ParserRun.parse_tag_3a","ParserRun.parse_tag_3c","ParserRun.parse_tag_4a","ParserRun.parse_tag_4c","ParserRun.parse_drawingInstructions","ParserRun.parse_drawingInstructionMove","ParserRun.parse_drawingInstructionLine","ParserRun.parse_drawingInstructionCubicBezierCurve","ParserRun.parse_decimalInt32","ParserRun.parse_hexInt32","ParserRun.parse_decimalOrHexInt32","ParserRun.parse_decimal","ParserRun.parse_unsignedDecimal","ParserRun.parse_enableDisable","ParserRun.parse_color","ParserRun.parse_alpha","ParserRun.parse_colorWithAlpha","ParserRun.read","ParserRun._peek","ParserRun._haveMore","ParserRun._parse_tag_clip_or_iclip","makeTagParserFunction","tagName","tagConstructor","valueParser","required","self","current","ParseNode","parent","read","pop","valueNode","call","value","Alpha","prototype","parse_alpha","Blur","parse_decimal","GaussianBlur","Border","PrimaryColor","parse_color","SkewX","SkewY","RotateZ","RotateX","RotateY","FontSize","LetterSpacing","Italic","parse_enableDisable","DrawingMode","DrawingBaselineOffset","StrikeThrough","Shadow","Underline","BorderX","ShadowX","BorderY","ShadowY","PrimaryAlpha","SecondaryAlpha","SecondaryColor","OutlineAlpha","OutlineColor","ShadowAlpha","ShadowColor","_i","_a","keys","length","key","indexOf","substr","ParseNode.constructor","ParseNode.start","ParseNode.end","ParseNode.parent","ParseNode.children","ParseNode.value","ParseNode.pop","ParseNode._setEnd","commands_1","registerWorkerCommand","WorkerCommands","Parse","parameters","resolve","StreamParser.constructor","StreamParser.minimalASS","StreamParser.ass","StreamParser._onNextLine","SrtStreamParser.constructor","SrtStreamParser.ass","SrtStreamParser._onNextLine","StringStream.constructor","StringStream.nextLine","XhrStream.constructor","XhrStream.nextLine","XhrStream._onXhrProgress","XhrStream._onXhrLoadEnd","XhrStream._tryResolveNextLine","BrowserReadableStream.constructor","BrowserReadableStream.nextLine","BrowserReadableStream._tryResolveNextLine","MoveInstruction","MoveInstruction.constructor","MoveInstruction.x","MoveInstruction.y","LineInstruction","LineInstruction.constructor","LineInstruction.x","LineInstruction.y","CubicBezierCurveInstruction","CubicBezierCurveInstruction.constructor","CubicBezierCurveInstruction.x1","CubicBezierCurveInstruction.y1","CubicBezierCurveInstruction.x2","CubicBezierCurveInstruction.y2","CubicBezierCurveInstruction.x3","CubicBezierCurveInstruction.y3","drawing","Color","Color.constructor","Color.red","Color.green","Color.blue","Color.alpha","Color.withAlpha","Color.toString","Comment","Comment.constructor","Comment.value","Text","Text.constructor","Text.value","Text.toString","NewLine","Italic.constructor","Italic.value","Bold","Bold.constructor","Bold.value","Underline.constructor","Underline.value","StrikeThrough.constructor","StrikeThrough.value","Border.constructor","Border.value","BorderX.constructor","BorderX.value","BorderY.constructor","BorderY.value","Shadow.constructor","Shadow.value","ShadowX.constructor","ShadowX.value","ShadowY.constructor","ShadowY.value","Blur.constructor","Blur.value","GaussianBlur.constructor","GaussianBlur.value","FontName","FontName.constructor","FontName.value","FontSize.constructor","FontSize.value","FontSizePlus","FontSizePlus.constructor","FontSizePlus.value","FontSizeMinus","FontSizeMinus.constructor","FontSizeMinus.value","FontScaleX","FontScaleX.constructor","FontScaleX.value","FontScaleY","FontScaleY.constructor","FontScaleY.value","LetterSpacing.constructor","LetterSpacing.value","RotateX.constructor","RotateX.value","RotateY.constructor","RotateY.value","RotateZ.constructor","RotateZ.value","SkewX.constructor","SkewX.value","SkewY.constructor","SkewY.value","PrimaryColor.constructor","PrimaryColor.value","SecondaryColor.constructor","SecondaryColor.value","OutlineColor.constructor","OutlineColor.value","ShadowColor.constructor","ShadowColor.value","Alpha.constructor","Alpha.value","PrimaryAlpha.constructor","PrimaryAlpha.value","SecondaryAlpha.constructor","SecondaryAlpha.value","OutlineAlpha.constructor","OutlineAlpha.value","ShadowAlpha.constructor","ShadowAlpha.value","Alignment","Alignment.constructor","Alignment.value","ColorKaraoke","ColorKaraoke.constructor","ColorKaraoke.duration","SweepingColorKaraoke","SweepingColorKaraoke.constructor","SweepingColorKaraoke.duration","OutlineKaraoke","OutlineKaraoke.constructor","OutlineKaraoke.duration","WrappingStyle.constructor","WrappingStyle.value","Reset","Reset.constructor","Reset.value","Position","Position.constructor","Position.x","Position.y","Move","Move.constructor","Move.x1","Move.y1","Move.x2","Move.y2","Move.t1","Move.t2","RotationOrigin","RotationOrigin.constructor","RotationOrigin.x","RotationOrigin.y","Fade","Fade.constructor","Fade.start","Fade.end","ComplexFade","ComplexFade.constructor","ComplexFade.a1","ComplexFade.a2","ComplexFade.a3","ComplexFade.t1","ComplexFade.t2","ComplexFade.t3","ComplexFade.t4","Transform","Transform.constructor","Transform.start","Transform.end","Transform.accel","Transform.tags","RectangularClip","RectangularClip.constructor","RectangularClip.x1","RectangularClip.y1","RectangularClip.x2","RectangularClip.y2","RectangularClip.inside","VectorClip","VectorClip.constructor","VectorClip.scale","VectorClip.instructions","VectorClip.inside","DrawingMode.constructor","DrawingMode.scale","DrawingBaselineOffset.constructor","DrawingBaselineOffset.value","DrawingInstructions","DrawingInstructions.constructor","DrawingInstructions.instructions","addToString","ctor","ctorName","hasOwnProperty","propertyNames","getOwnPropertyNames","filter","property","toString","_this","name","join","Function","registerClassPrototype","_b","_c","manual_1","AutoClock","AutoClock.constructor","AutoClock.play","AutoClock.pause","AutoClock.seeking","AutoClock.currentTime","AutoClock.enabled","AutoClock.paused","AutoClock.rate","AutoClock.setRate","AutoClock.enable","AutoClock.disable","AutoClock.toggle","AutoClock.setEnabled","AutoClock.addEventListener","AutoClock._onTimerTick","AutoClock._startTicking","AutoClock._stopTicking","EventSource","EventSource.addEventListener","EventSource._dispatchEvent","ClockEvent","mixin_1","base_1","ManualClock","ManualClock.constructor","ManualClock.play","ManualClock.tick","ManualClock.seek","ManualClock.pause","ManualClock.stop","ManualClock.currentTime","ManualClock.enabled","ManualClock.paused","ManualClock.rate","ManualClock.setRate","ManualClock.enable","ManualClock.disable","ManualClock.toggle","ManualClock.setEnabled","mixin","auto_1","VideoClock","VideoClock.constructor","VideoClock.currentTime","VideoClock.enabled","VideoClock.paused","VideoClock.rate","VideoClock.enable","VideoClock.disable","VideoClock.toggle","VideoClock.setEnabled","VideoClock.addEventListener","__extends","video_1","renderer_1","DefaultRenderer","_super","DefaultRenderer.constructor","DefaultRenderer.resizeVideo","DefaultRenderer._ready","DefaultRenderer._onFullScreenChange","WebRenderer","default_1","null_1","NullRenderer","RendererSettings","settings_2","NullRenderer.constructor","NullRenderer.id","NullRenderer.ass","NullRenderer.clock","NullRenderer.settings","NullRenderer.enable","NullRenderer.disable","NullRenderer.toggle","NullRenderer.setEnabled","NullRenderer.enabled","NullRenderer._onClockPlay","NullRenderer._onClockTick","NullRenderer._onClockPause","NullRenderer._onClockStop","NullRenderer._onClockRateChange","RendererSettings.makeFontMapFromStyleElement","RendererSettings.from","RendererSettings._stripQuotes","AnimationCollection","AnimationCollection.constructor","AnimationCollection.cssText","AnimationCollection.animationStyle","AnimationCollection.animationDelays","AnimationCollection.add","domParser","DOMParser","dom_parser_1","DrawingStyles","DrawingStyles.constructor","DrawingStyles.scale","DrawingStyles.baselineOffset","DrawingStyles.toSVG","Keyframe","Keyframe.constructor","Keyframe.time","Keyframe.properties","animation_collection_1","drawing_styles_1","keyframe_1","span_styles_1","WebRenderer.constructor","WebRenderer.libjassSubsWrapper","WebRenderer.resize","WebRenderer.preRender","WebRenderer.draw","WebRenderer._onClockPlay","WebRenderer._onClockTick","WebRenderer._onClockPause","WebRenderer._onClockStop","WebRenderer._onClockRateChange","WebRenderer._ready","WebRenderer._removeSub","WebRenderer._removeAllSubs","SpanStyles","SpanStyles.constructor","SpanStyles.reset","SpanStyles.setStylesOnSpan","SpanStyles.makeNewLine","SpanStyles.italic","SpanStyles.bold","SpanStyles.underline","SpanStyles.strikeThrough","SpanStyles.outlineWidth","SpanStyles.outlineHeight","SpanStyles.shadowDepthX","SpanStyles.shadowDepthY","SpanStyles.blur","SpanStyles.gaussianBlur","SpanStyles.fontName","SpanStyles.fontSize","SpanStyles.fontScaleX","SpanStyles.fontScaleY","SpanStyles.letterSpacing","SpanStyles.rotationX","SpanStyles.rotationY","SpanStyles.rotationZ","SpanStyles.skewX","SpanStyles.skewY","SpanStyles.primaryColor","SpanStyles.secondaryColor","SpanStyles.outlineColor","SpanStyles.shadowColor","SpanStyles.primaryAlpha","SpanStyles.secondaryAlpha","SpanStyles.outlineAlpha","SpanStyles.shadowAlpha","SpanStyles._getFontSize","misc_2","ASS.constructor","ASS.properties","ASS.styles","ASS.dialogues","ASS.stylesFormatSpecifier","ASS.dialoguesFormatSpecifier","ASS.addStyle","ASS.addEvent","ASS.fromString","ASS.fromStream","ASS.fromUrl","ASS.fromReadableStream","Dialogue.constructor","Dialogue.id","Dialogue.start","Dialogue.end","Dialogue.style","Dialogue.alignment","Dialogue.layer","Dialogue.parts","Dialogue.toString","Dialogue._parsePartsString","Dialogue._toTime","valueOrDefault","template","converter","validator","defaultValue","ScriptProperties.resolutionX","ScriptProperties.resolutionY","ScriptProperties.wrappingStyle","ScriptProperties.scaleBorderAndShadow","Style.constructor","Style.name","Style.italic","Style.bold","Style.underline","Style.strikeThrough","Style.fontName","Style.fontSize","Style.fontScaleX","Style.fontScaleY","Style.letterSpacing","Style.rotationZ","Style.primaryColor","Style.secondaryColor","Style.outlineColor","Style.shadowColor","Style.outlineThickness","Style.borderStyle","Style.shadowDepth","Style.alignment","Style.marginLeft","Style.marginRight","Style.marginVertical","derived","base","___extends","___extends.___","SimpleMap","SimpleMap.constructor","SimpleMap.get","SimpleMap.has","SimpleMap.set","SimpleMap.delete","SimpleMap.clear","SimpleMap.forEach","SimpleMap.size","SimpleMap._keyToProperty","undefined","forEach","size","ex","clazz","mixins","SimplePromise","SimplePromise.constructor","SimplePromise.then","SimplePromise.catch","SimplePromise.isFulfilled","SimplePromise.isRejected","SimplePromise.isPending","SimplePromise.value","SimplePromise.reason","SimplePromise.resolve","SimplePromise.all","SimplePromise._resolve","SimplePromise._fulfill","SimplePromise._reject","SimplePromise._getThenMethod","SimplePromise._propagateResolution","MutationObserver","WebkitMutationObserver","process","nextTick","callback","pending","currentlyPending","div","document","createElement","observer","processing","splice","classList","toggle","observe","attributes","push","setTimeout","SimplePromiseState","DeferredPromise.constructor","DeferredPromise.promise","DeferredPromise.resolve","DeferredPromise.reject","SimpleSet","SimpleSet.constructor","SimpleSet.add","SimpleSet.clear","SimpleSet.has","SimpleSet.forEach","SimpleSet.size","SimpleSet._toProperty","WorkerChannelImpl","WorkerChannelImpl.constructor","WorkerChannelImpl.request","WorkerChannelImpl.cancelRequest","WorkerChannelImpl._respond","WorkerChannelImpl._onMessage","Ping","channel_1","supported","Worker","_scriptNode","currentScript","createWorker","scriptPath","WorkerGlobalScope","workerCommands","classPrototypes","command","handler","getWorkerCommandHandler","obj","serialize","str","deserialize"],"mappings":"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","sourcesContent":[null,"/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as settings from \"./settings\";\nexport { debugMode, verboseMode } from \"./settings\";\n\nimport * as set from \"./utility/set\";\nexport { Set } from \"./utility/set\";\n\nimport * as map from \"./utility/map\";\nexport { Map } from \"./utility/map\";\n\nimport * as promise from \"./utility/promise\";\nexport { Promise, DeferredPromise } from \"./utility/promise\";\n\nimport * as webworker from \"./webworker/index\";\nexport { webworker };\n\nimport * as parts from \"./parts/index\";\nexport { parts };\n\nimport * as parser from \"./parser/index\";\nexport { parser };\n\nimport * as renderers from \"./renderers/index\";\nexport { renderers };\n\nexport { ASS } from \"./types/ass\";\nexport { Dialogue } from \"./types/dialogue\";\nexport { ScriptProperties } from \"./types/script-properties\";\nexport { Style } from \"./types/style\";\n\nexport { BorderStyle, Format, WrappingStyle } from \"./types/misc\";\n\ndeclare const exports: any;\n\nObject.defineProperties(exports, {\n\tdebugMode: {\n\t\tget: () => settings.debugMode,\n\t\tset: settings.setDebugMode,\n\t},\n\n\tverboseMode: {\n\t\tget: () => settings.verboseMode,\n\t\tset: settings.setVerboseMode,\n\t},\n\tSet: {\n\t\tget: () => set.Set,\n\t\tset: set.setImplementation,\n\t},\n\tMap: {\n\t\tget: () => map.Map,\n\t\tset: map.setImplementation,\n\t},\n\tPromise: {\n\t\tget: () => promise.Promise,\n\t\tset: promise.setImplementation,\n\t},\n});\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { parse } from \"./parse\";\nexport { BrowserReadableStream, Stream, StringStream, XhrStream } from \"./streams\";\nexport { StreamParser, SrtStreamParser } from \"./stream-parsers\";\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Property, TypedTemplate } from \"../types/misc\";\n\nimport { Map } from \"../utility/map\";\n\n/**\n * Parses a line into a {@link ./types/misc.Property}.\n *\n * @param {string} line\n * @return {!Property}\n */\nexport function parseLineIntoProperty(line: string): Property {\n\tconst colonPos = line.indexOf(\":\");\n\tif (colonPos === -1) {\n\t\treturn null;\n\t}\n\n\tconst name = line.substr(0, colonPos);\n\tconst value = line.substr(colonPos + 1).replace(/^\\s+/, \"\");\n\n\treturn { name, value };\n}\n\n/**\n * Parses a line into a {@link ./types/misc.TypedTemplate} according to the given format specifier.\n *\n * @param {string} line\n * @param {!Array.<string>} formatSpecifier\n * @return {!TypedTemplate}\n */\nexport function parseLineIntoTypedTemplate(line: string, formatSpecifier: string[]): TypedTemplate {\n\tconst property = parseLineIntoProperty(line);\n\tif (property === null) {\n\t\treturn null;\n\t}\n\n\tconst value = property.value.split(\",\");\n\n\tif (value.length > formatSpecifier.length) {\n\t\tvalue[formatSpecifier.length - 1] = value.slice(formatSpecifier.length - 1).join(\",\");\n\t}\n\n\tconst template = new Map<string, string>();\n\tformatSpecifier.forEach((formatKey, index) => {\n\t\ttemplate.set(formatKey, value[index]);\n\t});\n\n\treturn { type: property.name, template };\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as parts from \"../parts/index\";\n\nimport { debugMode } from \"../settings\";\n\nimport { Map } from \"../utility/map\";\n\nconst rules = new Map<string, (parent: ParseNode) => ParseNode>();\n\n/**\n * Parses a given string with the specified rule.\n *\n * @param {string} input The string to be parsed.\n * @param {string} rule The rule to parse the string with\n * @return {*} The value returned depends on the rule used.\n */\nexport function parse(input: string, rule: string): any {\n\tconst run = new ParserRun(input, rule);\n\n\tif (run.result === null || run.result.end !== input.length) {\n\t\tif (debugMode) {\n\t\t\tconsole.error(\"Parse failed. %s %s %o\", rule, input, run.result);\n\t\t}\n\n\t\tthrow new Error(\"Parse failed.\");\n\t}\n\n\treturn run.result.value;\n}\n\n/**\n * This class represents a single run of the parser.\n *\n * @param {string} input\n * @param {string} rule\n */\nclass ParserRun {\n\tprivate _parseTree: ParseNode;\n\tprivate _result: ParseNode;\n\n\tconstructor(private _input: string, rule: string) {\n\t\tthis._parseTree = new ParseNode(null);\n\n\t\tthis._result = rules.get(rule).call(this, this._parseTree);\n\t}\n\n\t/**\n\t * @type {ParseNode}\n\t */\n\tget result(): ParseNode {\n\t\treturn this._result;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_dialogueParts(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tcurrent.value = [];\n\n\t\twhile (this._haveMore()) {\n\t\t\tconst enclosedTagsNode = this.parse_enclosedTags(current);\n\n\t\t\tif (enclosedTagsNode !== null) {\n\t\t\t\tcurrent.value.push.apply(current.value, enclosedTagsNode.value);\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tconst whiteSpaceOrTextNode = this.parse_newline(current) || this.parse_hardspace(current) || this.parse_text(current);\n\n\t\t\t\tif (whiteSpaceOrTextNode === null) {\n\t\t\t\t\tparent.pop();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif (whiteSpaceOrTextNode.value instanceof parts.Text && current.value[current.value.length - 1] instanceof parts.Text) {\n\t\t\t\t\t// Merge consecutive text parts into one part\n\t\t\t\t\tconst previousTextPart = <parts.Text>current.value[current.value.length - 1];\n\t\t\t\t\tcurrent.value[current.value.length - 1] = new parts.Text(previousTextPart.value + (<parts.Text>whiteSpaceOrTextNode.value).value);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcurrent.value.push(whiteSpaceOrTextNode.value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet inDrawingMode = false;\n\n\t\tcurrent.value.forEach((part: parts.Part, i: number) => {\n\t\t\tif (part instanceof parts.DrawingMode) {\n\t\t\t\tinDrawingMode = part.scale !== 0;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Text && inDrawingMode) {\n\t\t\t\tcurrent.value[i] = new parts.DrawingInstructions(<parts.drawing.Instruction[]>parse(part.value, \"drawingInstructions\"));\n\t\t\t}\n\t\t});\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_enclosedTags(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tcurrent.value = [];\n\n\t\tif (this.read(current, \"{\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (let next = this._peek(); this._haveMore() && next !== \"}\"; next = this._peek()) {\n\t\t\tlet childNode: ParseNode = null;\n\n\t\t\tif (this.read(current, \"\\\\\") !== null) {\n\t\t\t\tchildNode =\n\t\t\t\t\tthis.parse_tag_alpha(current) ||\n\t\t\t\t\tthis.parse_tag_iclip(current) ||\n\t\t\t\t\tthis.parse_tag_xbord(current) ||\n\t\t\t\t\tthis.parse_tag_ybord(current) ||\n\t\t\t\t\tthis.parse_tag_xshad(current) ||\n\t\t\t\t\tthis.parse_tag_yshad(current) ||\n\n\t\t\t\t\tthis.parse_tag_blur(current) ||\n\t\t\t\t\tthis.parse_tag_bord(current) ||\n\t\t\t\t\tthis.parse_tag_clip(current) ||\n\t\t\t\t\tthis.parse_tag_fade(current) ||\n\t\t\t\t\tthis.parse_tag_fscx(current) ||\n\t\t\t\t\tthis.parse_tag_fscy(current) ||\n\t\t\t\t\tthis.parse_tag_move(current) ||\n\t\t\t\t\tthis.parse_tag_shad(current) ||\n\n\t\t\t\t\tthis.parse_tag_fad(current) ||\n\t\t\t\t\tthis.parse_tag_fax(current) ||\n\t\t\t\t\tthis.parse_tag_fay(current) ||\n\t\t\t\t\tthis.parse_tag_frx(current) ||\n\t\t\t\t\tthis.parse_tag_fry(current) ||\n\t\t\t\t\tthis.parse_tag_frz(current) ||\n\t\t\t\t\tthis.parse_tag_fsp(current) ||\n\t\t\t\t\tthis.parse_tag_fsplus(current) ||\n\t\t\t\t\tthis.parse_tag_fsminus(current) ||\n\t\t\t\t\tthis.parse_tag_org(current) ||\n\t\t\t\t\tthis.parse_tag_pbo(current) ||\n\t\t\t\t\tthis.parse_tag_pos(current) ||\n\n\t\t\t\t\tthis.parse_tag_an(current) ||\n\t\t\t\t\tthis.parse_tag_be(current) ||\n\t\t\t\t\tthis.parse_tag_fn(current) ||\n\t\t\t\t\tthis.parse_tag_fr(current) ||\n\t\t\t\t\tthis.parse_tag_fs(current) ||\n\t\t\t\t\tthis.parse_tag_kf(current) ||\n\t\t\t\t\tthis.parse_tag_ko(current) ||\n\t\t\t\t\tthis.parse_tag_1a(current) ||\n\t\t\t\t\tthis.parse_tag_1c(current) ||\n\t\t\t\t\tthis.parse_tag_2a(current) ||\n\t\t\t\t\tthis.parse_tag_2c(current) ||\n\t\t\t\t\tthis.parse_tag_3a(current) ||\n\t\t\t\t\tthis.parse_tag_3c(current) ||\n\t\t\t\t\tthis.parse_tag_4a(current) ||\n\t\t\t\t\tthis.parse_tag_4c(current) ||\n\n\t\t\t\t\tthis.parse_tag_a(current) ||\n\t\t\t\t\tthis.parse_tag_b(current) ||\n\t\t\t\t\tthis.parse_tag_c(current) ||\n\t\t\t\t\tthis.parse_tag_i(current) ||\n\t\t\t\t\tthis.parse_tag_k(current) ||\n\t\t\t\t\tthis.parse_tag_K(current) ||\n\t\t\t\t\tthis.parse_tag_p(current) ||\n\t\t\t\t\tthis.parse_tag_q(current) ||\n\t\t\t\t\tthis.parse_tag_r(current) ||\n\t\t\t\t\tthis.parse_tag_s(current) ||\n\t\t\t\t\tthis.parse_tag_t(current) ||\n\t\t\t\t\tthis.parse_tag_u(current);\n\n\t\t\t\tif (childNode === null) {\n\t\t\t\t\tcurrent.pop(); // Unread backslash\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (childNode === null) {\n\t\t\t\tchildNode = this.parse_comment(current);\n\t\t\t}\n\n\t\t\tif (childNode !== null) {\n\t\t\t\tif (childNode.value instanceof parts.Comment && current.value[current.value.length - 1] instanceof parts.Comment) {\n\t\t\t\t\t// Merge consecutive comment parts into one part\n\t\t\t\t\tcurrent.value[current.value.length - 1] =\n\t\t\t\t\t\tnew parts.Comment(\n\t\t\t\t\t\t\t(<parts.Comment>current.value[current.value.length - 1]).value +\n\t\t\t\t\t\t\t(<parts.Comment>childNode.value).value\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcurrent.value.push(childNode.value);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tif (this.read(current, \"}\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_newline(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"\\\\N\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.NewLine();\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_hardspace(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"\\\\h\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.Text(\"\\u00A0\");\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_text(parent: ParseNode): ParseNode {\n\t\tconst value = this._peek();\n\n\t\tconst current = new ParseNode(parent);\n\t\tconst valueNode = new ParseNode(current, value);\n\n\t\tcurrent.value = new parts.Text(valueNode.value);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_comment(parent: ParseNode): ParseNode {\n\t\tconst value = this._peek();\n\n\t\tconst current = new ParseNode(parent);\n\t\tconst valueNode = new ParseNode(current, value);\n\n\t\tcurrent.value = new parts.Comment(valueNode.value);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_a(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"a\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tlet next = this._peek();\n\n\t\tswitch (next) {\n\t\t\tcase \"1\":\n\t\t\t\tconst next2 = this._peek(2);\n\n\t\t\t\tswitch (next2) {\n\t\t\t\t\tcase \"10\":\n\t\t\t\t\tcase \"11\":\n\t\t\t\t\t\tnext = next2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"2\":\n\t\t\tcase \"3\":\n\t\t\tcase \"5\":\n\t\t\tcase \"6\":\n\t\t\tcase \"7\":\n\t\t\tcase \"9\":\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = new ParseNode(current, next);\n\n\t\tlet value: number = null;\n\t\tswitch (valueNode.value) {\n\t\t\tcase \"1\":\n\t\t\t\tvalue = 1;\n\t\t\t\tbreak;\n\n\t\t\tcase \"2\":\n\t\t\t\tvalue = 2;\n\t\t\t\tbreak;\n\n\t\t\tcase \"3\":\n\t\t\t\tvalue = 3;\n\t\t\t\tbreak;\n\n\t\t\tcase \"5\":\n\t\t\t\tvalue = 7;\n\t\t\t\tbreak;\n\n\t\t\tcase \"6\":\n\t\t\t\tvalue = 8;\n\t\t\t\tbreak;\n\n\t\t\tcase \"7\":\n\t\t\t\tvalue = 9;\n\t\t\t\tbreak;\n\n\t\t\tcase \"9\":\n\t\t\t\tvalue = 4;\n\t\t\t\tbreak;\n\n\t\t\tcase \"10\":\n\t\t\t\tvalue = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase \"11\":\n\t\t\t\tvalue = 6;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurrent.value = new parts.Alignment(value);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_alpha(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_an(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"an\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst next = this._peek();\n\n\t\tif (next < \"1\" || next > \"9\") {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = new ParseNode(current, next);\n\n\t\tcurrent.value = new parts.Alignment(parseInt(valueNode.value));\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_b(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"b\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tlet valueNode: ParseNode = null;\n\n\t\tlet next = this._peek();\n\n\t\tif (next >= \"1\" && next <= \"9\") {\n\t\t\tnext = this._peek(3);\n\t\t\tif (next.substr(1) === \"00\") {\n\t\t\t\tvalueNode = new ParseNode(current, next);\n\t\t\t\tvalueNode.value = parseInt(valueNode.value);\n\t\t\t}\n\t\t}\n\n\t\tif (valueNode === null) {\n\t\t\tvalueNode = this.parse_enableDisable(current);\n\t\t}\n\n\t\tif (valueNode !== null) {\n\t\t\tcurrent.value = new parts.Bold(valueNode.value);\n\t\t}\n\t\telse {\n\t\t\tcurrent.value = new parts.Bold(null);\n\t\t}\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_be(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_blur(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_bord(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_c(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_clip(parent: ParseNode): ParseNode {\n\t\treturn this._parse_tag_clip_or_iclip(\"clip\", parent);\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fad(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"fad\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \"(\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst startNode = this.parse_decimal(current);\n\t\tif (startNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst endNode = this.parse_decimal(current);\n\t\tif (endNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \")\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.Fade(startNode.value / 1000, endNode.value / 1000);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fade(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"fade\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \"(\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst a1Node = this.parse_decimal(current);\n\t\tif (a1Node === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst a2Node = this.parse_decimal(current);\n\t\tif (a2Node === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst a3Node = this.parse_decimal(current);\n\t\tif (a3Node === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst t1Node = this.parse_decimal(current);\n\t\tif (t1Node === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst t2Node = this.parse_decimal(current);\n\t\tif (t2Node === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst t3Node = this.parse_decimal(current);\n\t\tif (t3Node === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst t4Node = this.parse_decimal(current);\n\t\tif (t4Node === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \")\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value =\n\t\t\tnew parts.ComplexFade(\n\t\t\t\t1 - a1Node.value / 255, 1 - a2Node.value / 255, 1 - a3Node.value / 255,\n\t\t\t\tt1Node.value / 1000, t2Node.value / 1000, t3Node.value / 1000, t4Node.value / 1000\n\t\t\t);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fax(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fay(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fn(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"fn\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = new ParseNode(current, \"\");\n\n\t\tfor (let next = this._peek(); this._haveMore() && next !== \"\\\\\" && next !== \"}\"; next = this._peek()) {\n\t\t\tvalueNode.value += next;\n\t\t}\n\n\t\tif (valueNode.value.length > 0) {\n\t\t\tcurrent.value = new parts.FontName(valueNode.value);\n\t\t}\n\t\telse {\n\t\t\tcurrent.value = new parts.FontName(null);\n\t\t}\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fr(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_frx(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fry(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_frz(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fs(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fsplus(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"fs+\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = this.parse_decimal(current);\n\n\t\tif (valueNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.FontSizePlus(valueNode.value);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fsminus(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"fs-\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = this.parse_decimal(current);\n\n\t\tif (valueNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.FontSizeMinus(valueNode.value);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fscx(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"fscx\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = this.parse_decimal(current);\n\n\t\tif (valueNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.FontScaleX(valueNode.value / 100);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fscy(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"fscy\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = this.parse_decimal(current);\n\n\t\tif (valueNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.FontScaleY(valueNode.value / 100);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fsp(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_i(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_iclip(parent: ParseNode): ParseNode {\n\t\treturn this._parse_tag_clip_or_iclip(\"iclip\", parent);\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_k(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"k\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = this.parse_decimal(current);\n\n\t\tif (valueNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.ColorKaraoke(valueNode.value / 100);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_K(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"K\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = this.parse_decimal(current);\n\n\t\tif (valueNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.SweepingColorKaraoke(valueNode.value / 100);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_kf(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"kf\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = this.parse_decimal(current);\n\n\t\tif (valueNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.SweepingColorKaraoke(valueNode.value / 100);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_ko(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"ko\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = this.parse_decimal(current);\n\n\t\tif (valueNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.OutlineKaraoke(valueNode.value / 100);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_move(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"move\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \"(\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst x1Node = this.parse_decimal(current);\n\t\tif (x1Node === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst y1Node = this.parse_decimal(current);\n\t\tif (y1Node === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst x2Node = this.parse_decimal(current);\n\t\tif (x2Node === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst y2Node = this.parse_decimal(current);\n\t\tif (y2Node === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tlet t1Node: ParseNode = null;\n\t\tlet t2Node: ParseNode = null;\n\n\t\tif (this.read(current, \",\") !== null) {\n\t\t\tt1Node = this.parse_decimal(current);\n\t\t\tif (t1Node === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tt2Node = this.parse_decimal(current);\n\t\t\tif (t2Node === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tif (this.read(current, \")\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.Move(\n\t\t\tx1Node.value, y1Node.value, x2Node.value, y2Node.value,\n\t\t\t(t1Node !== null) ? (t1Node.value / 1000) : null, (t2Node !== null) ? (t2Node.value / 1000) : null\n\t\t);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_org(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"org\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \"(\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst xNode = this.parse_decimal(current);\n\t\tif (xNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst yNode = this.parse_decimal(current);\n\t\tif (yNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \")\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.RotationOrigin(xNode.value, yNode.value);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_p(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_pbo(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_pos(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"pos\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \"(\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst xNode = this.parse_decimal(current);\n\t\tif (xNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst yNode = this.parse_decimal(current);\n\t\tif (yNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \")\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.Position(xNode.value, yNode.value);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_q(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"q\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst next = this._peek();\n\n\t\tif (next < \"0\" || next > \"3\") {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = new ParseNode(current, next);\n\n\t\tcurrent.value = new parts.WrappingStyle(parseInt(valueNode.value));\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_r(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"r\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = new ParseNode(current, \"\");\n\n\t\tfor (let next = this._peek(); this._haveMore() && next !== \"\\\\\" && next !== \"}\"; next = this._peek()) {\n\t\t\tvalueNode.value += next;\n\t\t}\n\n\t\tif (valueNode.value.length > 0) {\n\t\t\tcurrent.value = new parts.Reset(valueNode.value);\n\t\t}\n\t\telse {\n\t\t\tcurrent.value = new parts.Reset(null);\n\t\t}\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_s(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_shad(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_t(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"t\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \"(\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tlet startNode: ParseNode = null;\n\t\tlet endNode: ParseNode = null;\n\t\tlet accelNode: ParseNode = null;\n\n\t\tconst firstNode = this.parse_decimal(current);\n\t\tif (firstNode !== null) {\n\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst secondNode = this.parse_decimal(current);\n\t\t\tif (secondNode !== null) {\n\t\t\t\tstartNode = firstNode;\n\t\t\t\tendNode = secondNode;\n\n\t\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\t\tparent.pop();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst thirdNode = this.parse_decimal(current);\n\t\t\t\tif (thirdNode !== null) {\n\t\t\t\t\taccelNode = thirdNode;\n\n\t\t\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\t\t\tparent.pop();\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\taccelNode = firstNode;\n\n\t\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\t\tparent.pop();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst transformTags: parts.Part[] = [];\n\n\t\tfor (let next = this._peek(); this._haveMore() && next !== \")\" && next !== \"}\"; next = this._peek()) {\n\t\t\tlet childNode: ParseNode = null;\n\n\t\t\tif (this.read(current, \"\\\\\") !== null) {\n\t\t\t\tchildNode =\n\t\t\t\t\tthis.parse_tag_alpha(current) ||\n\t\t\t\t\tthis.parse_tag_iclip(current) ||\n\t\t\t\t\tthis.parse_tag_xbord(current) ||\n\t\t\t\t\tthis.parse_tag_ybord(current) ||\n\t\t\t\t\tthis.parse_tag_xshad(current) ||\n\t\t\t\t\tthis.parse_tag_yshad(current) ||\n\n\t\t\t\t\tthis.parse_tag_blur(current) ||\n\t\t\t\t\tthis.parse_tag_bord(current) ||\n\t\t\t\t\tthis.parse_tag_clip(current) ||\n\t\t\t\t\tthis.parse_tag_fscx(current) ||\n\t\t\t\t\tthis.parse_tag_fscy(current) ||\n\t\t\t\t\tthis.parse_tag_shad(current) ||\n\n\t\t\t\t\tthis.parse_tag_fax(current) ||\n\t\t\t\t\tthis.parse_tag_fay(current) ||\n\t\t\t\t\tthis.parse_tag_frx(current) ||\n\t\t\t\t\tthis.parse_tag_fry(current) ||\n\t\t\t\t\tthis.parse_tag_frz(current) ||\n\t\t\t\t\tthis.parse_tag_fsp(current) ||\n\t\t\t\t\tthis.parse_tag_fsplus(current) ||\n\t\t\t\t\tthis.parse_tag_fsminus(current) ||\n\n\t\t\t\t\tthis.parse_tag_be(current) ||\n\t\t\t\t\tthis.parse_tag_fr(current) ||\n\t\t\t\t\tthis.parse_tag_fs(current) ||\n\t\t\t\t\tthis.parse_tag_1a(current) ||\n\t\t\t\t\tthis.parse_tag_1c(current) ||\n\t\t\t\t\tthis.parse_tag_2a(current) ||\n\t\t\t\t\tthis.parse_tag_2c(current) ||\n\t\t\t\t\tthis.parse_tag_3a(current) ||\n\t\t\t\t\tthis.parse_tag_3c(current) ||\n\t\t\t\t\tthis.parse_tag_4a(current) ||\n\t\t\t\t\tthis.parse_tag_4c(current) ||\n\n\t\t\t\t\tthis.parse_tag_c(current);\n\n\t\t\t\tif (childNode === null) {\n\t\t\t\t\tcurrent.pop(); // Unread backslash\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (childNode === null) {\n\t\t\t\tchildNode = this.parse_comment(current);\n\t\t\t}\n\n\t\t\tif (childNode !== null) {\n\t\t\t\tif (childNode.value instanceof parts.Comment && transformTags[transformTags.length - 1] instanceof parts.Comment) {\n\t\t\t\t\t// Merge consecutive comment parts into one part\n\t\t\t\t\ttransformTags[transformTags.length - 1] =\n\t\t\t\t\t\tnew parts.Comment(\n\t\t\t\t\t\t\t(<parts.Comment>transformTags[transformTags.length - 1]).value +\n\t\t\t\t\t\t\t(<parts.Comment>childNode.value).value\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttransformTags.push(childNode.value);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tthis.read(current, \")\");\n\n\t\tcurrent.value =\n\t\t\tnew parts.Transform(\n\t\t\t\t(startNode !== null) ? (startNode.value / 1000) : null,\n\t\t\t\t(endNode !== null) ? (endNode.value / 1000) : null,\n\t\t\t\t(accelNode !== null) ? (accelNode.value / 1000) : null,\n\t\t\t\ttransformTags\n\t\t\t);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_u(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_xbord(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_xshad(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_ybord(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_yshad(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_1a(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_1c(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_2a(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_2c(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_3a(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_3c(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_4a(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_4c(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_drawingInstructions(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tlet lastType: string = null;\n\n\t\tcurrent.value = [];\n\n\t\twhile (this._haveMore()) {\n\t\t\twhile (this.read(current, \" \") !== null) { }\n\t\t\tif (!this._haveMore()) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tlet currentType: string = null;\n\n\t\t\tconst typePart = this.parse_text(current);\n\t\t\tif (typePart === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tcurrentType = typePart.value.value;\n\t\t\tswitch (currentType) {\n\t\t\t\tcase \"m\":\n\t\t\t\tcase \"l\":\n\t\t\t\tcase \"b\":\n\t\t\t\t\tlastType = currentType;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tif (lastType === null) {\n\t\t\t\t\t\tparent.pop();\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentType = lastType;\n\t\t\t\t\tcurrent.pop();\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tswitch (currentType) {\n\t\t\t\tcase \"m\":\n\t\t\t\t\tconst movePart = this.parse_drawingInstructionMove(current);\n\t\t\t\t\tif (movePart === null) {\n\t\t\t\t\t\tparent.pop();\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent.value.push(movePart.value);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"l\":\n\t\t\t\t\tconst linePart = this.parse_drawingInstructionLine(current);\n\t\t\t\t\tif (linePart === null) {\n\t\t\t\t\t\tparent.pop();\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent.value.push(linePart.value);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"b\":\n\t\t\t\t\tconst cubicBezierCurvePart = this.parse_drawingInstructionCubicBezierCurve(current);\n\t\t\t\t\tif (cubicBezierCurvePart === null) {\n\t\t\t\t\t\tparent.pop();\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent.value.push(cubicBezierCurvePart.value);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\twhile (this.read(current, \" \") !== null) { }\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_drawingInstructionMove(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\twhile (this.read(current, \" \") !== null) { }\n\n\t\tconst xPart = this.parse_decimal(current);\n\t\tif (xPart === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\twhile (this.read(current, \" \") !== null) { }\n\n\t\tconst yPart = this.parse_decimal(current);\n\t\tif (yPart === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.drawing.MoveInstruction(xPart.value, yPart.value);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_drawingInstructionLine(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\twhile (this.read(current, \" \") !== null) { }\n\n\t\tconst xPart = this.parse_decimal(current);\n\t\tif (xPart === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\twhile (this.read(current, \" \") !== null) { }\n\n\t\tconst yPart = this.parse_decimal(current);\n\t\tif (yPart === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.drawing.LineInstruction(xPart.value, yPart.value);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_drawingInstructionCubicBezierCurve(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\twhile (this.read(current, \" \") !== null) { }\n\n\t\tconst x1Part = this.parse_decimal(current);\n\t\tif (x1Part === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\twhile (this.read(current, \" \") !== null) { }\n\n\t\tconst y1Part = this.parse_decimal(current);\n\t\tif (y1Part === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\twhile (this.read(current, \" \") !== null) { }\n\n\t\tconst x2Part = this.parse_decimal(current);\n\t\tif (x2Part === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\twhile (this.read(current, \" \") !== null) { }\n\n\t\tconst y2Part = this.parse_decimal(current);\n\t\tif (y2Part === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\twhile (this.read(current, \" \") !== null) { }\n\n\t\tconst x3Part = this.parse_decimal(current);\n\t\tif (x3Part === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\twhile (this.read(current, \" \") !== null) { }\n\n\t\tconst y3Part = this.parse_decimal(current);\n\t\tif (y3Part === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.drawing.CubicBezierCurveInstruction(x1Part.value, y1Part.value, x2Part.value, y2Part.value, x3Part.value, y3Part.value);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_decimalInt32(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tconst isNegative = this.read(current, \"-\") !== null;\n\n\t\tconst numberNode = new ParseNode(current, \"\");\n\t\tfor (let next = this._peek(); this._haveMore() && next >= \"0\" && next <= \"9\"; next = this._peek()) {\n\t\t\tnumberNode.value += next;\n\t\t}\n\n\t\tif (numberNode.value.length === 0) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = parseInt(numberNode.value);\n\t\tif (value >= 0xFFFFFFFF) {\n\t\t\tvalue = 0xFFFFFFFF;\n\t\t}\n\t\telse if (isNegative) {\n\t\t\tvalue = -value;\n\t\t}\n\n\t\tcurrent.value = value;\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_hexInt32(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tconst isNegative = this.read(current, \"-\") !== null;\n\n\t\tconst numberNode = new ParseNode(current, \"\");\n\t\tfor (\n\t\t\tlet next = this._peek();\n\t\t\tthis._haveMore() && (\n\t\t\t\t(next >= \"0\" && next <= \"9\") ||\n\t\t\t\t(next >= \"a\" && next <= \"f\") ||\n\t\t\t\t(next >= \"A\" && next <= \"F\")\n\t\t\t);\n\t\t\tnext = this._peek()) {\n\n\t\t\tnumberNode.value += next;\n\t\t}\n\n\t\tif (numberNode.value.length === 0) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = parseInt(numberNode.value, 16);\n\t\tif (value >= 0xFFFFFFFF) {\n\t\t\tvalue = 0xFFFFFFFF;\n\t\t}\n\t\telse if (isNegative) {\n\t\t\tvalue = -value;\n\t\t}\n\n\t\tcurrent.value = value;\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_decimalOrHexInt32(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tconst valueNode =\n\t\t\t(this.read(current, \"&H\") !== null || this.read(current, \"&h\") !== null) ?\n\t\t\t\t this.parse_hexInt32(current) :\n\t\t\t\t this.parse_decimalInt32(current);\n\n\t\tif (valueNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = valueNode.value;\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_decimal(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tconst negative = (this.read(current, \"-\") !== null);\n\n\t\tconst numericalPart = this.parse_unsignedDecimal(current);\n\n\t\tif (numericalPart === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = numericalPart.value;\n\n\t\tif (negative) {\n\t\t\tcurrent.value = -current.value;\n\t\t}\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_unsignedDecimal(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tconst characteristicNode = new ParseNode(current, \"\");\n\n\t\tlet mantissaNode: ParseNode = null;\n\n\t\tfor (let next = this._peek(); this._haveMore() && next >= \"0\" && next <= \"9\"; next = this._peek()) {\n\t\t\tcharacteristicNode.value += next;\n\t\t}\n\n\t\tif (characteristicNode.value.length === 0) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \".\") !== null) {\n\t\t\tmantissaNode = new ParseNode(current, \"\");\n\n\t\t\tfor (let next = this._peek(); this._haveMore() && next >= \"0\" && next <= \"9\"; next = this._peek()) {\n\t\t\t\tmantissaNode.value += next;\n\t\t\t}\n\n\t\t\tif (mantissaNode.value.length === 0) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tcurrent.value = parseFloat(characteristicNode.value + ((mantissaNode !== null) ? (\".\" + mantissaNode.value) : \"\"));\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_enableDisable(parent: ParseNode): ParseNode {\n\t\tconst next = this._peek();\n\n\t\tif (next === \"0\" || next === \"1\") {\n\t\t\tconst result = new ParseNode(parent, next);\n\t\t\tresult.value = (result.value === \"1\");\n\n\t\t\treturn result;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_color(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\twhile (this.read(current, \"&\") !== null || this.read(current, \"H\") !== null) { }\n\n\t\tconst valueNode = this.parse_hexInt32(current);\n\t\tif (valueNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst value = valueNode.value;\n\n\t\tcurrent.value = new parts.Color(\n\t\t\tvalue & 0xFF,\n\t\t\t(value >> 8) & 0xFF,\n\t\t\t(value >> 16) & 0xFF\n\t\t);\n\n\t\twhile (this.read(current, \"&\") !== null || this.read(current, \"H\") !== null) { }\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_alpha(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\twhile (this.read(current, \"&\") !== null || this.read(current, \"H\") !== null) { }\n\n\t\tconst valueNode = this.parse_hexInt32(current);\n\t\tif (valueNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst value = valueNode.value;\n\n\t\tcurrent.value = 1 - (value & 0xFF) / 0xFF;\n\n\t\twhile (this.read(current, \"&\") !== null || this.read(current, \"H\") !== null) { }\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_colorWithAlpha(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tconst valueNode = this.parse_decimalOrHexInt32(current);\n\t\tif (valueNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst value = valueNode.value;\n\n\t\tcurrent.value = new parts.Color(\n\t\t\tvalue & 0xFF,\n\t\t\t(value >> 8) & 0xFF,\n\t\t\t(value >> 16) & 0xFF,\n\t\t\t1 - ((value >> 24) & 0xFF) / 0xFF\n\t\t);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @param {string} next\n\t * @return {ParseNode}\n\t */\n\tread(parent: ParseNode, next: string): ParseNode {\n\t\tif (this._peek(next.length) !== next) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new ParseNode(parent, next);\n\t}\n\n\t/**\n\t * @param {number=1} count\n\t * @return {string}\n\t */\n\tprivate _peek(count: number = 1): string {\n\t\t// Fastpath for count === 1. http://jsperf.com/substr-vs-indexer\n\t\tif (count === 1) { return this._input[this._parseTree.end]; }\n\n\t\treturn this._input.substr(this._parseTree.end, count);\n\t}\n\n\t/**\n\t * @return {boolean}\n\t */\n\tprivate _haveMore(): boolean {\n\t\treturn this._parseTree.end < this._input.length;\n\t}\n\n\t/**\n\t * @param {string} tagName One of \"clip\" and \"iclip\"\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tprivate _parse_tag_clip_or_iclip(tagName: string, parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, tagName) === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \"(\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tlet x1Node: ParseNode = null;\n\t\tlet x2Node: ParseNode = null;\n\t\tlet y1Node: ParseNode = null;\n\t\tlet y2Node: ParseNode = null;\n\t\tlet scaleNode: ParseNode = null;\n\t\tlet commandsNode: ParseNode = null;\n\n\t\tconst firstNode = this.parse_decimal(current);\n\n\t\tif (firstNode !== null) {\n\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst secondNode = this.parse_decimal(current);\n\n\t\t\tif (secondNode !== null) {\n\t\t\t\tx1Node = firstNode;\n\t\t\t\ty1Node = secondNode;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tscaleNode = firstNode;\n\t\t\t}\n\t\t}\n\n\t\tif (x1Node !== null && y1Node !== null) {\n\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tx2Node = this.parse_decimal(current);\n\n\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\ty2Node = this.parse_decimal(current);\n\n\t\t\tcurrent.value = new parts.RectangularClip(x1Node.value, y1Node.value, x2Node.value, y2Node.value, tagName === \"clip\");\n\t\t}\n\t\telse {\n\t\t\tcommandsNode = new ParseNode(current, \"\");\n\n\t\t\tfor (let next = this._peek(); this._haveMore() && next !== \")\" && next !== \"}\"; next = this._peek()) {\n\t\t\t\tcommandsNode.value += next;\n\t\t\t}\n\n\t\t\tcurrent.value = new parts.VectorClip((scaleNode !== null) ? scaleNode.value : 1, <parts.drawing.Instruction[]>parse(commandsNode.value, \"drawingInstructions\"), tagName === \"clip\");\n\t\t}\n\n\t\tif (this.read(current, \")\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\treturn current;\n\t}\n}\n\n/**\n * Constructs a simple tag parser function and sets it on the prototype of the {@link ./parser/parse.ParserRun} class.\n *\n * @param {string} tagName The name of the tag to generate the parser function for\n * @param {function(new: !libjass.parts.Part, *)} tagConstructor The type of tag to be returned by the generated parser function\n * @param {function(!ParseNode): ParseNode} valueParser The parser for the tag's value\n * @param {boolean} required Whether the tag's value is required or optional\n */\nfunction makeTagParserFunction(\n\ttagName: string,\n\ttagConstructor: { new (value: any): parts.Part },\n\tvalueParser: (current: ParseNode) => ParseNode,\n\trequired: boolean\n): void {\n\t(<any>ParserRun.prototype)[`parse_tag_${ tagName }`] = function (parent: ParseNode): ParseNode {\n\t\tconst self = <ParserRun>this;\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (self.read(current, tagName) === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = valueParser.call(self, current);\n\n\t\tif (valueNode !== null) {\n\t\t\tcurrent.value = new tagConstructor(valueNode.value);\n\t\t}\n\t\telse if (!required) {\n\t\t\tcurrent.value = new tagConstructor(null);\n\t\t}\n\t\telse {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\treturn current;\n\t};\n}\n\nmakeTagParserFunction(\"alpha\", parts.Alpha, ParserRun.prototype.parse_alpha, false);\nmakeTagParserFunction(\"be\", parts.Blur, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"blur\", parts.GaussianBlur, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"bord\", parts.Border, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"c\", parts.PrimaryColor, ParserRun.prototype.parse_color, false);\nmakeTagParserFunction(\"fax\", parts.SkewX, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"fay\", parts.SkewY, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"fr\", parts.RotateZ, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"frx\", parts.RotateX, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"fry\", parts.RotateY, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"frz\", parts.RotateZ, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"fs\", parts.FontSize, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"fsp\", parts.LetterSpacing, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"i\", parts.Italic, ParserRun.prototype.parse_enableDisable, false);\nmakeTagParserFunction(\"p\", parts.DrawingMode, ParserRun.prototype.parse_decimal, true);\nmakeTagParserFunction(\"pbo\", parts.DrawingBaselineOffset, ParserRun.prototype.parse_decimal, true);\nmakeTagParserFunction(\"s\", parts.StrikeThrough, ParserRun.prototype.parse_enableDisable, false);\nmakeTagParserFunction(\"shad\", parts.Shadow, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"u\", parts.Underline, ParserRun.prototype.parse_enableDisable, false);\nmakeTagParserFunction(\"xbord\", parts.BorderX, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"xshad\", parts.ShadowX, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"ybord\", parts.BorderY, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"yshad\", parts.ShadowY, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"1a\", parts.PrimaryAlpha, ParserRun.prototype.parse_alpha, false);\nmakeTagParserFunction(\"1c\", parts.PrimaryColor, ParserRun.prototype.parse_color, false);\nmakeTagParserFunction(\"2a\", parts.SecondaryAlpha, ParserRun.prototype.parse_alpha, false);\nmakeTagParserFunction(\"2c\", parts.SecondaryColor, ParserRun.prototype.parse_color, false);\nmakeTagParserFunction(\"3a\", parts.OutlineAlpha, ParserRun.prototype.parse_alpha, false);\nmakeTagParserFunction(\"3c\", parts.OutlineColor, ParserRun.prototype.parse_color, false);\nmakeTagParserFunction(\"4a\", parts.ShadowAlpha, ParserRun.prototype.parse_alpha, false);\nmakeTagParserFunction(\"4c\", parts.ShadowColor, ParserRun.prototype.parse_color, false);\n\nfor (let key of Object.keys(ParserRun.prototype)) {\n\tif (key.indexOf(\"parse_\") === 0 && typeof (<any>ParserRun.prototype)[key] === \"function\") {\n\t\trules.set(key.substr(\"parse_\".length), (<any>ParserRun.prototype)[key]);\n\t}\n}\n\n/**\n * This class represents a single parse node. It has a start and end position, and an optional value object.\n *\n * @param {ParseNode} parent The parent of this parse node.\n * @param {*=null} value If provided, it is assigned as the value of the node.\n */\nclass ParseNode {\n\tprivate _children: ParseNode[] = [];\n\n\tprivate _start: number;\n\tprivate _end: number;\n\tprivate _value: any;\n\n\tconstructor(private _parent: ParseNode, value: any = null) {\n\t\tif (_parent !== null) {\n\t\t\t_parent.children.push(this);\n\t\t}\n\n\t\tthis._start = ((_parent !== null) ? _parent.end : 0);\n\t\tthis._end = this._start;\n\n\t\tthis.value = value;\n\t}\n\n\t/**\n\t * The start position of this parse node.\n\t *\n\t * @type {number}\n\t */\n\tget start(): number {\n\t\treturn this._start;\n\t}\n\n\t/**\n\t * The end position of this parse node.\n\t *\n\t * @type {number}\n\t */\n\tget end(): number {\n\t\treturn this._end;\n\t}\n\n\t/**\n\t * @type {ParseNode}\n\t */\n\tget parent(): ParseNode {\n\t\treturn this._parent;\n\t}\n\n\t/**\n\t * @type {!Array.<!ParseNode>}\n\t */\n\tget children(): ParseNode[] {\n\t\treturn this._children;\n\t}\n\n\t/**\n\t * An optional object associated with this parse node.\n\t *\n\t * @type {*}\n\t */\n\tget value(): any {\n\t\treturn this._value;\n\t}\n\n\t/**\n\t * An optional object associated with this parse node.\n\t *\n\t * If the value is a string, then the end property is updated to be the length of the string.\n\t *\n\t * @type {*}\n\t */\n\tset value(newValue: any) {\n\t\tthis._value = newValue;\n\n\t\tif (this._value !== null && this._value.constructor === String && this._children.length === 0) {\n\t\t\tthis._setEnd(this._start + this._value.length);\n\t\t}\n\t}\n\n\t/**\n\t * Removes the last child of this node and updates the end position to be end position of the new last child.\n\t */\n\tpop(): void {\n\t\tthis._children.splice(this._children.length - 1, 1);\n\n\t\tif (this._children.length > 0) {\n\t\t\tthis._setEnd(this._children[this._children.length - 1].end);\n\t\t}\n\t\telse {\n\t\t\tthis._setEnd(this.start);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the end property of this node and its parent recursively to the root node.\n\t *\n\t * @param {number} newEnd\n\t */\n\tprivate _setEnd(newEnd: number): void {\n\t\tthis._end = newEnd;\n\n\t\tif (this._parent !== null && this._parent.end !== this._end) {\n\t\t\tthis._parent._setEnd(this._end);\n\t\t}\n\t}\n}\n\nimport { Promise } from \"../utility/promise\";\n\nimport { WorkerCommands } from \"../webworker/commands\";\nimport { registerWorkerCommand } from \"../webworker/misc\";\n\nregisterWorkerCommand(WorkerCommands.Parse, parameters => new Promise(resolve => {\n\tresolve(parse(parameters.input, parameters.rule));\n}));\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ASS } from \"../types/ass\";\nimport { Style } from \"../types/style\";\nimport { Dialogue } from \"../types/dialogue\";\nimport { Property, TypedTemplate } from \"../types/misc\";\n\nimport { Map } from \"../utility/map\";\n\nimport { Promise, DeferredPromise } from \"../utility/promise\";\n\nimport { parseLineIntoProperty } from \"./misc\";\nimport { Stream } from \"./streams\";\n\n/**\n * A parser that parses an {@link libjass.ASS} object from a {@link libjass.parser.Stream}.\n *\n * @param {!libjass.parser.Stream} stream The {@link libjass.parser.Stream} to parse\n */\nexport class StreamParser {\n\tprivate _ass: ASS = new ASS();\n\tprivate _minimalDeferred: DeferredPromise<ASS> = new DeferredPromise<ASS>();\n\tprivate _deferred: DeferredPromise<ASS> = new DeferredPromise<ASS>();\n\n\tprivate _shouldSwallowBom: boolean = true;\n\tprivate _currentSectionName: string = null;\n\n\tconstructor(private _stream: Stream) {\n\t\tthis._stream.nextLine().then(line => this._onNextLine(line));\n\t}\n\n\t/**\n\t * @type {!Promise.<!libjass.ASS>} A promise that will be resolved when the script properties of the ASS script have been parsed from the stream. Styles and events have not necessarily been\n\t * parsed at the point this promise becomes resolved.\n\t */\n\tget minimalASS(): Promise<ASS> {\n\t\treturn this._minimalDeferred.promise;\n\t}\n\n\t/**\n\t * @type {!Promise.<!libjass.ASS>} A promise that will be resolved when the entire stream has been parsed.\n\t */\n\tget ass(): Promise<ASS> {\n\t\treturn this._deferred.promise;\n\t}\n\n\t/**\n\t * @param {string} line\n\t */\n\tprivate _onNextLine(line: string): void {\n\t\tif (line === null) {\n\t\t\tthis._minimalDeferred.resolve(this._ass);\n\t\t\tthis._deferred.resolve(this._ass);\n\t\t\treturn;\n\t\t}\n\n\t\tif (line[line.length - 1] === \"\\r\") {\n\t\t\tline = line.substr(0, line.length - 1);\n\t\t}\n\n\t\tif (line.charCodeAt(0) === 0xfeff && this._shouldSwallowBom) {\n\t\t\tline = line.substr(1);\n\t\t}\n\n\t\tthis._shouldSwallowBom = false;\n\n\t\tif (line === \"\" || line[0] === \";\") {\n\t\t\t// Ignore empty lines and comments\n\t\t}\n\n\t\telse if (line[0] === \"[\" && line[line.length - 1] === \"]\") {\n\t\t\t// Start of new section\n\n\t\t\tif (this._currentSectionName === \"Script Info\") {\n\t\t\t\t// Exiting script info section\n\t\t\t\tthis._minimalDeferred.resolve(this._ass);\n\t\t\t}\n\n\t\t\tthis._currentSectionName = line.substring(1, line.length - 1);\n\t\t}\n\n\t\telse {\n\t\t\tswitch (this._currentSectionName) {\n\t\t\t\tcase \"Script Info\":\n\t\t\t\t\tconst property = parseLineIntoProperty(line);\n\t\t\t\t\tif (property !== null) {\n\t\t\t\t\t\tswitch (property.name) {\n\t\t\t\t\t\t\tcase \"PlayResX\":\n\t\t\t\t\t\t\t\tthis._ass.properties.resolutionX = parseInt(property.value);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"PlayResY\":\n\t\t\t\t\t\t\t\tthis._ass.properties.resolutionY = parseInt(property.value);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"WrapStyle\":\n\t\t\t\t\t\t\t\tthis._ass.properties.wrappingStyle = parseInt(property.value);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"ScaledBorderAndShadow\":\n\t\t\t\t\t\t\t\tthis._ass.properties.scaleBorderAndShadow = (property.value === \"yes\");\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"V4+ Styles\":\n\t\t\t\t\tif (this._ass.stylesFormatSpecifier === null) {\n\t\t\t\t\t\tconst property = parseLineIntoProperty(line);\n\t\t\t\t\t\tif (property !== null && property.name === \"Format\") {\n\t\t\t\t\t\t\tthis._ass.stylesFormatSpecifier = property.value.split(\",\").map(str => str.trim());\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Ignore any non-format lines\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._ass.addStyle(line);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"Events\":\n\t\t\t\t\tif (this._ass.dialoguesFormatSpecifier === null) {\n\t\t\t\t\t\tconst property = parseLineIntoProperty(line);\n\t\t\t\t\t\tif (property !== null && property.name === \"Format\") {\n\t\t\t\t\t\t\tthis._ass.dialoguesFormatSpecifier = property.value.split(\",\").map(str => str.trim());\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Ignore any non-format lines\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._ass.addEvent(line);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t// Ignore other sections\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._stream.nextLine().then(line => this._onNextLine(line));\n\t}\n}\n\n/**\n * A parser that parses an {@link libjass.ASS} object from a {@link libjass.parser.Stream} of an SRT script.\n *\n * @param {!libjass.parser.Stream} stream The {@link libjass.parser.Stream} to parse\n */\nexport class SrtStreamParser {\n\tprivate _ass: ASS = new ASS();\n\tprivate _deferred: DeferredPromise<ASS> = new DeferredPromise<ASS>();\n\n\tprivate _currentDialogueNumber: string = null;\n\tprivate _currentDialogueStart: string = null;\n\tprivate _currentDialogueEnd: string = null;\n\tprivate _currentDialogueText: string = null;\n\n\tconstructor(private _stream: Stream) {\n\t\tthis._stream.nextLine().then(line => this._onNextLine(line));\n\n\t\tthis._ass.properties.resolutionX = 1280;\n\t\tthis._ass.properties.resolutionY = 720;\n\t\tthis._ass.properties.wrappingStyle = 1;\n\t\tthis._ass.properties.scaleBorderAndShadow = true;\n\n\t\tconst newStyle = new Style(new Map([[\"Name\", \"Default\"]]));\n\t\tthis._ass.styles.set(newStyle.name, newStyle);\n\t}\n\n\t/**\n\t * @type {!Promise.<!libjass.ASS>} A promise that will be resolved when the entire stream has been parsed.\n\t */\n\tget ass(): Promise<ASS> {\n\t\treturn this._deferred.promise;\n\t}\n\n\t/**\n\t * @param {string} line\n\t */\n\tprivate _onNextLine(line: string): void {\n\t\tif (line === null) {\n\t\t\tif (this._currentDialogueNumber !== null && this._currentDialogueStart !== null && this._currentDialogueEnd !== null && this._currentDialogueText !== null) {\n\t\t\t\tthis._ass.dialogues.push(new Dialogue(new Map([\n\t\t\t\t\t[\"Style\", \"Default\"],\n\t\t\t\t\t[\"Start\", this._currentDialogueStart],\n\t\t\t\t\t[\"End\", this._currentDialogueEnd],\n\t\t\t\t\t[\"Text\", this._currentDialogueText],\n\t\t\t\t]), this._ass));\n\t\t\t}\n\n\t\t\tthis._deferred.resolve(this._ass);\n\t\t\treturn;\n\t\t}\n\n\t\tif (line[line.length - 1] === \"\\r\") {\n\t\t\tline = line.substr(0, line.length - 1);\n\t\t}\n\n\t\tif (line === \"\") {\n\t\t\tif (this._currentDialogueNumber !== null && this._currentDialogueStart !== null && this._currentDialogueEnd !== null && this._currentDialogueText !== null) {\n\t\t\t\tthis._ass.dialogues.push(new Dialogue(new Map([\n\t\t\t\t\t[\"Style\", \"Default\"],\n\t\t\t\t\t[\"Start\", this._currentDialogueStart],\n\t\t\t\t\t[\"End\", this._currentDialogueEnd],\n\t\t\t\t\t[\"Text\", this._currentDialogueText],\n\t\t\t\t]), this._ass));\n\t\t\t}\n\n\t\t\tthis._currentDialogueNumber = this._currentDialogueStart = this._currentDialogueEnd = this._currentDialogueText = null;\n\t\t}\n\t\telse {\n\t\t\tif (this._currentDialogueNumber === null) {\n\t\t\t\tif (/^\\d+$/.test(line)) {\n\t\t\t\t\tthis._currentDialogueNumber = line;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this._currentDialogueStart === null && this._currentDialogueEnd === null) {\n\t\t\t\tconst match = /^(\\d\\d:\\d\\d:\\d\\d,\\d\\d\\d) --> (\\d\\d:\\d\\d:\\d\\d,\\d\\d\\d)/.exec(line);\n\t\t\t\tif (match !== null) {\n\t\t\t\t\tthis._currentDialogueStart = match[1].replace(\",\", \".\");\n\t\t\t\t\tthis._currentDialogueEnd = match[2].replace(\",\", \".\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tline = line\n\t\t\t\t\t.replace(/<b>/g, \"{\\\\b1}\").replace(/\\{b\\}/g, \"{\\\\b1}\")\n\t\t\t\t\t.replace(/<\\/b>/g, \"{\\\\b0}\").replace(/\\{\\/b\\}/g, \"{\\\\b0}\")\n\t\t\t\t\t.replace(/<i>/g, \"{\\\\i1}\").replace(/\\{i\\}/g, \"{\\\\i1}\")\n\t\t\t\t\t.replace(/<\\/i>/g, \"{\\\\i0}\").replace(/\\{\\/i\\}/g, \"{\\\\i0}\")\n\t\t\t\t\t.replace(/<u>/g, \"{\\\\u1}\").replace(/\\{u\\}/g, \"{\\\\u1}\")\n\t\t\t\t\t.replace(/<\\/u>/g, \"{\\\\u0}\").replace(/\\{\\/u\\}/g, \"{\\\\u0}\")\n\t\t\t\t\t.replace(\n\t\t\t\t\t\t/<font color=\"#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})\">/g,\n\t\t\t\t\t\t(/* ujs:unreferenced */ substring: string, red: string, green: string, blue: string) => `{\\c&H${ blue }${ green }${ red }&}`\n\t\t\t\t\t).replace(/<\\/font>/g, \"{\\\\c}\");\n\n\t\t\t\tif (this._currentDialogueText !== null) {\n\t\t\t\t\tthis._currentDialogueText += \"\\\\N\" + line;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._currentDialogueText = line;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._stream.nextLine().then(line => this._onNextLine(line));\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Promise, DeferredPromise } from \"../utility/promise\";\n\nexport interface ReadableStream {\n\t/**\n\t * @return {!ReadableStreamReader}\n\t */\n\tgetReader(): ReadableStreamReader;\n}\n\ninterface ReadableStreamReader {\n\t/**\n\t * @return {!Promise.<{ value?: Uint8Array, done: boolean }>}\n\t */\n\tread(): Promise<{ value: Uint8Array; done: boolean; }>;\n}\n\nexport interface TextDecoder {\n\t/**\n\t * @param {!ArrayBuffer|!ArrayBufferView} input\n\t * @param {{ stream: boolean }} options\n\t * @return {string}\n\t */\n\tdecode(input: ArrayBuffer | ArrayBufferView, options: { stream: boolean }): string;\n}\nexport interface TextDecoderConstructor {\n\tnew (encoding: string, options: { ignoreBOM: boolean }): TextDecoder;\n\n\t/**\n\t * @type {!TextDecoder}\n\t */\n\tprototype: TextDecoder;\n}\n\ndeclare const global: {\n\t/**\n\t * @type {!TextDecoderConstructor}\n\t */\n\tTextDecoder?: TextDecoderConstructor;\n};\n\n/**\n * An interface for a stream.\n */\nexport interface Stream {\n\t/**\n\t * @return {!Promise.<?string>} A promise that will be resolved with the next line, or null if the stream is exhausted.\n\t */\n\tnextLine(): Promise<string>;\n}\n\n/**\n * A {@link libjass.parser.Stream} that reads from a string in memory.\n *\n * @param {string} str The string\n */\nexport class StringStream implements Stream {\n\tprivate _readTill: number = 0;\n\n\tconstructor(private _str: string) { }\n\n\t/**\n\t * @return {!Promise.<?string>} A promise that will be resolved with the next line, or null if the string has been completely read.\n\t */\n\tnextLine(): Promise<string> {\n\t\tlet result: Promise<string> = null;\n\n\t\tif (this._readTill < this._str.length) {\n\t\t\tconst nextNewLinePos = this._str.indexOf(\"\\n\", this._readTill);\n\t\t\tif (nextNewLinePos !== -1) {\n\t\t\t\tresult = Promise.resolve(this._str.substring(this._readTill, nextNewLinePos));\n\t\t\t\tthis._readTill = nextNewLinePos + 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult = Promise.resolve(this._str.substr(this._readTill));\n\t\t\t\tthis._readTill = this._str.length;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tresult = Promise.resolve<string>(null);\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\n/**\n * A {@link libjass.parser.Stream} that reads from an XMLHttpRequest object.\n *\n * @param {!XMLHttpRequest} xhr The XMLHttpRequest object. Make sure to not call .open() on this object before passing it in here,\n * since event handlers cannot be registered after open() has been called.\n */\nexport class XhrStream implements Stream {\n\tprivate _readTill: number = 0;\n\tprivate _pendingDeferred: DeferredPromise<string> = null;\n\n\tconstructor(private _xhr: XMLHttpRequest) {\n\t\t_xhr.addEventListener(\"progress\", event => this._onXhrProgress(event), false);\n\t\t_xhr.addEventListener(\"loadend\", event => this._onXhrLoadEnd(event), false);\n\t}\n\n\t/**\n\t * @return {!Promise.<?string>} A promise that will be resolved with the next line, or null if the stream is exhausted.\n\t */\n\tnextLine(): Promise<string> {\n\t\tif (this._pendingDeferred !== null) {\n\t\t\tthrow new Error(\"XhrStream only supports one pending unfulfilled read at a time.\");\n\t\t}\n\n\t\tconst deferred = this._pendingDeferred = new DeferredPromise<string>();\n\n\t\tthis._tryResolveNextLine();\n\n\t\treturn deferred.promise;\n\t}\n\n\t/**\n\t * @param {!ProgressEvent} event\n\t */\n\tprivate _onXhrProgress(event: ProgressEvent): void {\n\t\tif (this._pendingDeferred === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tryResolveNextLine();\n\t}\n\n\t/**\n\t * @param {!ProgressEvent} event\n\t */\n\tprivate _onXhrLoadEnd(event: ProgressEvent): void {\n\t\tif (this._pendingDeferred === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tryResolveNextLine();\n\t}\n\n\t/**\n\t */\n\tprivate _tryResolveNextLine(): void {\n\t\tconst response = this._xhr.responseText;\n\n\t\tconst nextNewLinePos = response.indexOf(\"\\n\", this._readTill);\n\t\tif (nextNewLinePos !== -1) {\n\t\t\tthis._pendingDeferred.resolve(response.substring(this._readTill, nextNewLinePos));\n\t\t\tthis._readTill = nextNewLinePos + 1;\n\t\t\tthis._pendingDeferred = null;\n\t\t}\n\n\t\telse if (this._xhr.readyState === XMLHttpRequest.DONE) {\n\t\t\t// No more data. This is the last line.\n\t\t\tif (this._readTill < response.length) {\n\t\t\t\tthis._pendingDeferred.resolve(response.substr(this._readTill));\n\t\t\t\tthis._readTill = response.length;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._pendingDeferred.resolve(null);\n\t\t\t}\n\n\t\t\tthis._pendingDeferred = null;\n\t\t}\n\t}\n}\n\n/**\n * A {@link libjass.parser.Stream} that reads from a ReadableStream object.\n *\n * @param {!ReadableStream} stream\n * @param {string} encoding\n */\nexport class BrowserReadableStream implements Stream {\n\tprivate _reader: ReadableStreamReader;\n\tprivate _decoder: TextDecoder;\n\tprivate _buffer: string = \"\";\n\tprivate _pendingDeferred: DeferredPromise<string> = null;\n\n\tconstructor(stream: ReadableStream, encoding: string) {\n\t\tthis._reader = stream.getReader();\n\t\tthis._decoder = new global.TextDecoder(encoding, { ignoreBOM: true });\n\t}\n\n\t/**\n\t * @return {!Promise.<?string>} A promise that will be resolved with the next line, or null if the stream is exhausted.\n\t */\n\tnextLine(): Promise<string> {\n\t\tif (this._pendingDeferred !== null) {\n\t\t\tthrow new Error(\"BrowserReadableStream only supports one pending unfulfilled read at a time.\");\n\t\t}\n\n\t\tconst deferred = this._pendingDeferred = new DeferredPromise<string>();\n\n\t\tthis._tryResolveNextLine();\n\n\t\treturn deferred.promise;\n\t}\n\n\t/**\n\t */\n\tprivate _tryResolveNextLine(): void {\n\t\tconst nextNewLinePos = this._buffer.indexOf(\"\\n\");\n\t\tif (nextNewLinePos !== -1) {\n\t\t\tthis._pendingDeferred.resolve(this._buffer.substr(0, nextNewLinePos));\n\t\t\tthis._buffer = this._buffer.substr(nextNewLinePos + 1);\n\t\t\tthis._pendingDeferred = null;\n\t\t}\n\n\t\telse {\n\t\t\tthis._reader.read().then(next => {\n\t\t\t\tconst { value, done } = next;\n\n\t\t\t\tif (!done) {\n\t\t\t\t\tthis._buffer += this._decoder.decode(value, { stream: true });\n\t\t\t\t\tthis._tryResolveNextLine();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// No more data.\n\t\t\t\t\tif (this._buffer.length === 0) {\n\t\t\t\t\t\tthis._pendingDeferred.resolve(null);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._pendingDeferred.resolve(this._buffer);\n\t\t\t\t\t\tthis._buffer = \"\";\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pendingDeferred = null;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The base interface of the drawing instructions.\n */\nexport interface Instruction { }\n\n/**\n * An instruction to move to a particular position.\n *\n * @param {number} x\n * @param {number} y\n */\nexport class MoveInstruction implements Instruction {\n\tconstructor(private _x: number, private _y: number) { }\n\n\t/**\n\t * The X position of this move instruction.\n\t *\n\t * @type {number}\n\t */\n\tget x(): number {\n\t\treturn this._x;\n\t}\n\n\t/**\n\t * The Y position of this move instruction.\n\t *\n\t * @type {number}\n\t */\n\tget y(): number {\n\t\treturn this._y;\n\t}\n}\n\n/**\n * An instruction to draw a line to a particular position.\n *\n * @param {number} x\n * @param {number} y\n */\nexport class LineInstruction implements Instruction {\n\tconstructor(private _x: number, private _y: number) { }\n\n\t/**\n\t * The X position of this line instruction.\n\t *\n\t * @type {number}\n\t */\n\tget x(): number {\n\t\treturn this._x;\n\t}\n\n\t/**\n\t * The Y position of this line instruction.\n\t *\n\t * @type {number}\n\t */\n\tget y(): number {\n\t\treturn this._y;\n\t}\n}\n\n/**\n * An instruction to draw a cubic bezier curve to a particular position, with two given control points.\n *\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n */\nexport class CubicBezierCurveInstruction implements Instruction {\n\tconstructor(private _x1: number, private _y1: number, private _x2: number, private _y2: number, private _x3: number, private _y3: number) { }\n\n\t/**\n\t * The X position of the first control point of this cubic bezier curve instruction.\n\t *\n\t * @type {number}\n\t */\n\tget x1(): number {\n\t\treturn this._x1;\n\t}\n\n\t/**\n\t * The Y position of the first control point of this cubic bezier curve instruction.\n\t *\n\t * @type {number}\n\t */\n\tget y1(): number {\n\t\treturn this._y1;\n\t}\n\n\t/**\n\t * The X position of the second control point of this cubic bezier curve instruction.\n\t *\n\t * @type {number}\n\t */\n\tget x2(): number {\n\t\treturn this._x2;\n\t}\n\n\t/**\n\t * The Y position of the second control point of this cubic bezier curve instruction.\n\t *\n\t * @type {number}\n\t */\n\tget y2(): number {\n\t\treturn this._y2;\n\t}\n\n\t/**\n\t * The ending X position of this cubic bezier curve instruction.\n\t *\n\t * @type {number}\n\t */\n\tget x3(): number {\n\t\treturn this._x3;\n\t}\n\n\t/**\n\t * The ending Y position of this cubic bezier curve instruction.\n\t *\n\t * @type {number}\n\t */\n\tget y3(): number {\n\t\treturn this._y3;\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WrappingStyle as WrappingStyleType } from \"../types/misc\";\n\nimport * as drawing from \"./drawing\";\nexport { drawing };\n\n/**\n * Represents a CSS color with red, green, blue and alpha components.\n *\n * Instances of this class are immutable.\n *\n * @param {number} red\n * @param {number} green\n * @param {number} blue\n * @param {number=1} alpha\n */\nexport class Color {\n\tconstructor(private _red: number, private _green: number, private _blue: number, private _alpha: number = 1) { }\n\n\t/**\n\t * The red component of this color as a number between 0 and 255.\n\t *\n\t * @type {number}\n\t */\n\tget red(): number {\n\t\treturn this._red;\n\t}\n\n\t/**\n\t * The green component of this color as a number between 0 and 255.\n\t *\n\t * @type {number}\n\t */\n\tget green(): number {\n\t\treturn this._green;\n\t}\n\n\t/**\n\t * The blue component of this color as a number between 0 and 255.\n\t *\n\t * @type {number}\n\t */\n\tget blue(): number {\n\t\treturn this._blue;\n\t}\n\n\t/**\n\t * The alpha component of this color as a number between 0 and 1, where 0 means transparent and 1 means opaque.\n\t *\n\t * @type {number}\n\t */\n\tget alpha(): number {\n\t\treturn this._alpha;\n\t}\n\n\t/**\n\t * @param {?number} value The new alpha. If null, the existing alpha is used.\n\t * @return {!libjass.parts.Color} Returns a new Color instance with the same color but the provided alpha.\n\t */\n\twithAlpha(value: number): Color {\n\t\tif (value !== null) {\n\t\t\treturn new Color(this._red, this._green, this._blue, value);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {string} The CSS representation \"rgba(...)\" of this color.\n\t */\n\ttoString(): string {\n\t\treturn `rgba(${ this._red }, ${ this._green }, ${ this._blue }, ${ this._alpha.toFixed(3) })`;\n\t}\n}\n\n/**\n * The base interface of the ASS tag classes.\n */\nexport interface Part { }\n\n/**\n * A comment, i.e., any text enclosed in {} that is not understood as an ASS tag.\n *\n * @param {string} value The text of this comment\n */\nexport class Comment {\n\tconstructor(private _value: string) { }\n\n\t/**\n\t * The value of this comment.\n\t *\n\t * @type {string}\n\t */\n\tget value(): string {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A block of text, i.e., any text not enclosed in {}. Also includes \\h.\n *\n * @param {string} value The content of this block of text\n */\nexport class Text {\n\tconstructor(private _value: string) { }\n\n\t/**\n\t * The value of this text part.\n\t *\n\t * @type {string}\n\t */\n\tget value(): string {\n\t\treturn this._value;\n\t}\n\n\t/**\n\t * @return {string}\n\t */\n\ttoString(): string {\n\t\treturn `Text { value: ${ this._value.replace(/\\u00A0/g, \"\\\\h\") } }`;\n\t}\n}\n\n/**\n * A newline character \\N.\n */\nexport class NewLine {\n}\n\n/**\n * An italic tag {\\i}\n *\n * @param {?boolean} value {\\i1} -> true, {\\i0} -> false, {\\i} -> null\n */\nexport class Italic {\n\tconstructor(private _value: boolean) { }\n\n\t/**\n\t * The value of this italic tag.\n\t *\n\t * @type {?boolean}\n\t */\n\tget value(): boolean {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A bold tag {\\b}\n *\n * @param {*} value {\\b1} -> true, {\\b0} -> false, {\\b###} -> weight of the bold (number), {\\b} -> null\n */\nexport class Bold {\n\tconstructor(private _value: Object) { }\n\n\t/**\n\t * The value of this bold tag.\n\t *\n\t * @type {?boolean|?number}\n\t */\n\tget value(): Object {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * An underline tag {\\u}\n *\n * @param {?boolean} value {\\u1} -> true, {\\u0} -> false, {\\u} -> null\n */\nexport class Underline {\n\tconstructor(private _value: boolean) { }\n\n\t/**\n\t * The value of this underline tag.\n\t *\n\t * @type {?boolean}\n\t */\n\tget value(): boolean {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A strike-through tag {\\s}\n *\n * @param {?boolean} value {\\s1} -> true, {\\s0} -> false, {\\s} -> null\n */\nexport class StrikeThrough {\n\tconstructor(private _value: boolean) { }\n\n\t/**\n\t * The value of this strike-through tag.\n\t *\n\t * @type {?boolean}\n\t */\n\tget value(): boolean {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A border tag {\\bord}\n *\n * @param {?number} value {\\bord###} -> width (number), {\\bord} -> null\n */\nexport class Border {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this border tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A horizontal border tag {\\xbord}\n *\n * @param {?number} value {\\xbord###} -> width (number), {\\xbord} -> null\n */\nexport class BorderX {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this horizontal border tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A vertical border tag {\\ybord}\n *\n * @param {?number} value {\\ybord###} -> height (number), {\\ybord} -> null\n */\nexport class BorderY {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this vertical border tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A shadow tag {\\shad}\n *\n * @param {?number} value {\\shad###} -> depth (number), {\\shad} -> null\n */\nexport class Shadow {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this shadow tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A horizontal shadow tag {\\xshad}\n *\n * @param {?number} value {\\xshad###} -> depth (number), {\\xshad} -> null\n */\nexport class ShadowX {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this horizontal shadow tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A vertical shadow tag {\\yshad}\n *\n * @param {?number} value {\\yshad###} -> depth (number), {\\yshad} -> null\n */\nexport class ShadowY {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this vertical shadow tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A blur tag {\\be}\n *\n * @param {?number} value {\\be###} -> strength (number), {\\be} -> null\n */\nexport class Blur {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this blur tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A Gaussian blur tag {\\blur}\n *\n * @param {?number} value {\\blur###} -> strength (number), {\\blur} -> null\n */\nexport class GaussianBlur {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this Gaussian blur tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A font name tag {\\fn}\n *\n * @param {?string} value {\\fn###} -> name (string), {\\fn} -> null\n */\nexport class FontName {\n\tconstructor(private _value: string) { }\n\n\t/**\n\t * The value of this font name tag.\n\t *\n\t * @type {?string}\n\t */\n\tget value(): string {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A font size tag {\\fs}\n *\n * @param {?number} value {\\fs###} -> size (number), {\\fs} -> null\n */\nexport class FontSize {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this font size tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A font size increase tag {\\fs+}\n *\n * @param {?number} value {\\fs+###} -> difference (number)\n */\nexport class FontSizePlus {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this font size increase tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A font size decrease tag {\\fs-}\n *\n * @param {?number} value {\\fs-###} -> difference (number)\n */\nexport class FontSizeMinus {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this font size decrease tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A horizontal font scaling tag {\\fscx}\n *\n * @param {?number} value {\\fscx###} -> scale (number), {\\fscx} -> null\n */\nexport class FontScaleX {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this horizontal font scaling tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A vertical font scaling tag {\\fscy}\n *\n * @param {?number} value {\\fscy###} -> scale (number), {\\fscy} -> null\n */\nexport class FontScaleY {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this vertical font scaling tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A letter-spacing tag {\\fsp}\n *\n * @param {?number} value {\\fsp###} -> spacing (number), {\\fsp} -> null\n */\nexport class LetterSpacing {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this letter-spacing tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * An X-axis rotation tag {\\frx}\n *\n * @param {?number} value {\\frx###} -> angle (number), {\\frx} -> null\n */\nexport class RotateX {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this X-axis rotation tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A Y-axis rotation tag {\\fry}\n *\n * @param {?number} value {\\fry###} -> angle (number), {\\fry} -> null\n */\nexport class RotateY {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this Y-axis rotation tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A Z-axis rotation tag {\\fr} or {\\frz}\n *\n * @param {?number} value {\\frz###} -> angle (number), {\\frz} -> null\n */\nexport class RotateZ {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this Z-axis rotation tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * An X-axis shearing tag {\\fax}\n *\n * @param {?number} value {\\fax###} -> angle (number), {\\fax} -> null\n */\nexport class SkewX {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this X-axis shearing tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value() {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A Y-axis shearing tag {\\fay}\n *\n * @param {?number} value {\\fay###} -> angle (number), {\\fay} -> null\n */\nexport class SkewY {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this Y-axis shearing tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A primary color tag {\\c} or {\\1c}\n *\n * @param {libjass.parts.Color} value {\\1c###} -> color (Color), {\\1c} -> null\n */\nexport class PrimaryColor {\n\tconstructor(private _value: Color) { }\n\n\t/**\n\t * The value of this primary color tag.\n\t *\n\t * @type {libjass.parts.Color}\n\t */\n\tget value(): Color {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A secondary color tag {\\2c}\n *\n * @param {libjass.parts.Color} value {\\2c###} -> color (Color), {\\2c} -> null\n */\nexport class SecondaryColor {\n\tconstructor(private _value: Color) { }\n\n\t/**\n\t * The value of this secondary color tag.\n\t *\n\t * @type {libjass.parts.Color}\n\t */\n\tget value(): Color {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * An outline color tag {\\3c}\n *\n * @param {libjass.parts.Color} value {\\3c###} -> color (Color), {\\3c} -> null\n */\nexport class OutlineColor {\n\tconstructor(private _value: Color) { }\n\n\t/**\n\t * The value of this outline color tag.\n\t *\n\t * @type {libjass.parts.Color}\n\t */\n\tget value(): Color {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A shadow color tag {\\4c}\n *\n * @param {libjass.parts.Color} value {\\4c###} -> color (Color), {\\4c} -> null\n */\nexport class ShadowColor {\n\tconstructor(private _value: Color) { }\n\n\t/**\n\t * The value of this shadow color tag.\n\t *\n\t * @type {libjass.parts.Color}\n\t */\n\tget value(): Color {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * An alpha tag {\\alpha}\n *\n * @param {?number} value {\\alpha###} -> alpha (number), {\\alpha} -> null\n */\nexport class Alpha {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this alpha tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A primary alpha tag {\\1a}\n *\n * @param {?number} value {\\1a###} -> alpha (number), {\\1a} -> null\n */\nexport class PrimaryAlpha {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this primary alpha tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A secondary alpha tag {\\2a}\n *\n * @param {?number} value {\\2a###} -> alpha (number), {\\2a} -> null\n */\nexport class SecondaryAlpha {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this secondary alpha tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * An outline alpha tag {\\3a}\n *\n * @param {?number} value {\\3a###} -> alpha (number), {\\3a} -> null\n */\nexport class OutlineAlpha {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this outline alpha tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A shadow alpha tag {\\4a}\n *\n * @param {?number} value {\\4a###} -> alpha (number), {\\4a} -> null\n */\nexport class ShadowAlpha {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this shadow alpha tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * An alignment tag {\\an} or {\\a}\n *\n * @param {number} value {\\an###} -> alignment (number)\n */\nexport class Alignment {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this alignment tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A color karaoke tag {\\k}\n *\n * @param {number} duration {\\k###} -> duration (number)\n */\nexport class ColorKaraoke {\n\tconstructor(private _duration: number) { }\n\n\t/**\n\t * The duration of this color karaoke tag.\n\t *\n\t * @type {number}\n\t */\n\tget duration(): number {\n\t\treturn this._duration;\n\t}\n}\n\n/**\n * A sweeping color karaoke tag {\\K} or {\\kf}\n *\n * @param {number} duration {\\kf###} -> duration (number)\n */\nexport class SweepingColorKaraoke {\n\tconstructor(private _duration: number) { }\n\n\t/**\n\t * The duration of this sweeping color karaoke tag.\n\t *\n\t * @type {number}\n\t */\n\tget duration(): number {\n\t\treturn this._duration;\n\t}\n}\n\n/**\n * An outline karaoke tag {\\ko}\n *\n * @param {number} duration {\\ko###} -> duration (number)\n */\nexport class OutlineKaraoke {\n\tconstructor(private _duration: number) { }\n\n\t/**\n\t * The duration of this outline karaoke tag.\n\t *\n\t * @type {number}\n\t */\n\tget duration(): number {\n\t\treturn this._duration;\n\t}\n}\n\n/**\n * A wrapping style tag {\\q}\n *\n * @param {number} value {\\q###} -> style (number)\n */\nexport class WrappingStyle {\n\tconstructor(private _value: WrappingStyleType) { }\n\n\t/**\n\t * The value of this wrapping style tag.\n\t *\n\t * @type {number}\n\t */\n\tget value(): WrappingStyleType {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A style reset tag {\\r}\n *\n * @param {?string} value {\\r###} -> style name (string), {\\r} -> null\n */\nexport class Reset {\n\tconstructor(private _value: string) { }\n\n\t/**\n\t * The value of this style reset tag.\n\t *\n\t * @type {?string}\n\t */\n\tget value(): string {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A position tag {\\pos}\n *\n * @param {number} x\n * @param {number} y\n */\nexport class Position {\n\tconstructor(private _x: number, private _y: number) { }\n\n\t/**\n\t * The x value of this position tag.\n\t *\n\t * @type {number}\n\t */\n\tget x(): number {\n\t\treturn this._x;\n\t}\n\n\t/**\n\t * The y value of this position tag.\n\t *\n\t * @type {number}\n\t */\n\tget y(): number {\n\t\treturn this._y;\n\t}\n}\n\n/**\n * A movement tag {\\move}\n *\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} t1\n * @param {number} t2\n */\nexport class Move {\n\tconstructor(private _x1: number, private _y1: number, private _x2: number, private _y2: number, private _t1: number, private _t2: number) { }\n\n\t/**\n\t * The starting x value of this move tag.\n\t *\n\t * @type {number}\n\t */\n\tget x1(): number {\n\t\treturn this._x1;\n\t}\n\n\t/**\n\t * The starting y value of this move tag.\n\t *\n\t * @type {number}\n\t */\n\tget y1(): number {\n\t\treturn this._y1;\n\t}\n\n\t/**\n\t * The ending x value of this move tag.\n\t *\n\t * @type {number}\n\t */\n\tget x2(): number {\n\t\treturn this._x2;\n\t}\n\n\t/**\n\t * The ending y value of this move tag.\n\t *\n\t * @type {number}\n\t */\n\tget y2(): number {\n\t\treturn this._y2;\n\t}\n\n\t/**\n\t * The start time of this move tag.\n\t *\n\t * @type {number}\n\t */\n\tget t1(): number {\n\t\treturn this._t1;\n\t}\n\n\t/**\n\t * The end time value of this move tag.\n\t *\n\t * @type {number}\n\t */\n\tget t2(): number {\n\t\treturn this._t2;\n\t}\n}\n\n/**\n * A rotation origin tag {\\org}\n *\n * @param {number} x\n * @param {number} y\n */\nexport class RotationOrigin {\n\tconstructor(private _x: number, private _y: number) { }\n\n\t/**\n\t * The x value of this rotation origin tag.\n\t *\n\t * @type {number}\n\t */\n\tget x(): number {\n\t\treturn this._x;\n\t}\n\n\t/**\n\t * The y value of this rotation origin tag.\n\t *\n\t * @type {number}\n\t */\n\tget y(): number {\n\t\treturn this._y;\n\t}\n}\n\n/**\n * A simple fade tag {\\fad}\n *\n * @param {number} start\n * @param {number} end\n */\nexport class Fade {\n\tconstructor(private _start: number, private _end: number) { }\n\n\t/**\n\t * The start time of this fade tag.\n\t *\n\t * @type {number}\n\t */\n\tget start(): number {\n\t\treturn this._start;\n\t}\n\n\t/**\n\t * The end time of this fade tag.\n\t *\n\t * @type {number}\n\t */\n\tget end(): number {\n\t\treturn this._end;\n\t}\n}\n\n/**\n * A complex fade tag {\\fade}\n *\n * @param {number} a1\n * @param {number} a2\n * @param {number} a3\n * @param {number} t1\n * @param {number} t2\n * @param {number} t3\n * @param {number} t4\n */\nexport class ComplexFade {\n\tconstructor(\n\t\tprivate _a1: number, private _a2: number, private _a3: number,\n\t\tprivate _t1: number, private _t2: number, private _t3: number, private _t4: number\n\t) { }\n\n\t/**\n\t * The alpha value of this complex fade tag at time t2.\n\t *\n\t * @type {number}\n\t */\n\tget a1(): number {\n\t\treturn this._a1;\n\t}\n\n\t/**\n\t * The alpha value of this complex fade tag at time t3.\n\t *\n\t * @type {number}\n\t */\n\tget a2(): number {\n\t\treturn this._a2;\n\t}\n\n\t/**\n\t * The alpha value of this complex fade tag at time t4.\n\t *\n\t * @type {number}\n\t */\n\tget a3(): number {\n\t\treturn this._a3;\n\t}\n\n\t/**\n\t * The starting time of this complex fade tag.\n\t *\n\t * @type {number}\n\t */\n\tget t1(): number {\n\t\treturn this._t1;\n\t}\n\n\t/**\n\t * The first intermediate time of this complex fade tag.\n\t *\n\t * @type {number}\n\t */\n\tget t2(): number {\n\t\treturn this._t2;\n\t}\n\n\t/**\n\t * The second intermediate time of this complex fade tag.\n\t *\n\t * @type {number}\n\t */\n\tget t3(): number {\n\t\treturn this._t3;\n\t}\n\n\t/**\n\t * The ending time of this complex fade tag.\n\t *\n\t * @type {number}\n\t */\n\tget t4(): number {\n\t\treturn this._t4;\n\t}\n}\n\n/**\n * A transform tag {\\t}\n *\n * @param {number} start\n * @param {number} end\n * @param {number} accel\n * @param {!Array.<!libjass.parts.Tag>} tags\n */\nexport class Transform {\n\tconstructor(private _start: number, private _end: number, private _accel: number, private _tags: Part[]) { }\n\n\t/**\n\t * The starting time of this transform tag.\n\t *\n\t * @type {number}\n\t */\n\tget start(): number {\n\t\treturn this._start;\n\t}\n\n\t/**\n\t * The ending time of this transform tag.\n\t *\n\t * @type {number}\n\t */\n\tget end(): number {\n\t\treturn this._end;\n\t}\n\n\t/**\n\t * The acceleration of this transform tag.\n\t *\n\t * @type {number}\n\t */\n\tget accel(): number {\n\t\treturn this._accel;\n\t}\n\n\t/**\n\t * The tags animated by this transform tag.\n\t *\n\t * @type {!Array.<!libjass.parts.Tag>}\n\t */\n\tget tags(): Part[] {\n\t\treturn this._tags;\n\t}\n}\n\n/**\n * A rectangular clip tag {\\clip} or {\\iclip}\n *\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {boolean} inside\n */\nexport class RectangularClip {\n\tconstructor(private _x1: number, private _y1: number, private _x2: number, private _y2: number, private _inside: boolean) { }\n\n\t/**\n\t * The X coordinate of the starting position of this rectangular clip tag.\n\t *\n\t * @type {number}\n\t */\n\tget x1(): number {\n\t\treturn this._x1;\n\t}\n\n\t/**\n\t * The Y coordinate of the starting position of this rectangular clip tag.\n\t *\n\t * @type {number}\n\t */\n\tget y1(): number {\n\t\treturn this._y1;\n\t}\n\n\t/**\n\t * The X coordinate of the ending position of this rectangular clip tag.\n\t *\n\t * @type {number}\n\t */\n\tget x2(): number {\n\t\treturn this._x2;\n\t}\n\n\t/**\n\t * The Y coordinate of the ending position of this rectangular clip tag.\n\t *\n\t * @type {number}\n\t */\n\tget y2(): number {\n\t\treturn this._y2;\n\t}\n\n\t/**\n\t * Whether this rectangular clip tag clips the region it encloses or the region it excludes.\n\t *\n\t * @type {boolean}\n\t */\n\tget inside(): boolean {\n\t\treturn this._inside;\n\t}\n}\n\n/**\n * A vector clip tag {\\clip} or {\\iclip}\n *\n * @param {number} scale\n * @param {!Array.<!libjass.parts.drawing.Instruction>} instructions\n * @param {boolean} inside\n */\nexport class VectorClip {\n\tconstructor(private _scale: number, private _instructions: drawing.Instruction[], private _inside: boolean) { }\n\n\t/**\n\t * The scale of this vector clip tag.\n\t *\n\t * @type {number}\n\t */\n\tget scale(): number {\n\t\treturn this._scale;\n\t}\n\n\t/**\n\t * The clip commands of this vector clip tag.\n\t *\n\t * @type {string}\n\t */\n\tget instructions(): drawing.Instruction[] {\n\t\treturn this._instructions;\n\t}\n\n\t/**\n\t * Whether this vector clip tag clips the region it encloses or the region it excludes.\n\t *\n\t * @type {boolean}\n\t */\n\tget inside(): boolean {\n\t\treturn this._inside;\n\t}\n}\n\n/**\n * A drawing mode tag {\\p}\n *\n * @param {number} scale\n */\nexport class DrawingMode {\n\tconstructor(private _scale: number) { }\n\n\t/**\n\t * The scale of this drawing mode tag.\n\t *\n\t * @type {number}\n\t */\n\tget scale(): number {\n\t\treturn this._scale;\n\t}\n}\n\n/**\n * A drawing mode baseline offset tag {\\pbo}\n *\n * @param {number} value\n */\nexport class DrawingBaselineOffset {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this drawing mode baseline offset tag.\n\t *\n\t * @type {number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A pseudo-part representing text interpreted as drawing instructions\n *\n * @param {!Array.<!libjass.parts.drawing.Instruction>} instructions\n */\nexport class DrawingInstructions {\n\tconstructor(private _instructions: drawing.Instruction[]) { }\n\n\t/**\n\t * The instructions contained in this drawing instructions part.\n\t *\n\t * @type {!Array.<!libjass.parts.drawing.Instruction>}\n\t */\n\tget instructions(): drawing.Instruction[] {\n\t\treturn this._instructions;\n\t}\n}\n\nconst addToString = function (ctor: Function, ctorName: string) {\n\tif (!ctor.prototype.hasOwnProperty(\"toString\")) {\n\t\tconst propertyNames = Object.getOwnPropertyNames(ctor.prototype).filter(property => property !== \"constructor\");\n\n\t\tctor.prototype.toString = function () {\n\t\t\treturn (\n\t\t\t\tctorName + \" { \" +\n\t\t\t\tpropertyNames.map(name => `${ name }: ${ (<any>this)[name] }`).join(\", \") +\n\t\t\t\t((propertyNames.length > 0) ? \" \" : \"\") +\n\t\t\t\t\"}\"\n\t\t\t);\n\t\t}\n\t}\n};\n\nimport { registerClassPrototype } from \"../webworker/misc\";\n\ndeclare const exports: any;\n\nfor (let key of Object.keys(exports)) {\n\tconst value: any = exports[key];\n\tif (value instanceof Function) {\n\t\taddToString(value, key);\n\t\tregisterClassPrototype(value.prototype);\n\t}\n}\n\nfor (let key of Object.keys(drawing)) {\n\tconst value: any = (<any>drawing)[key];\n\tif (value instanceof Function) {\n\t\taddToString(value, `Drawing${ key }`);\n\t\tregisterClassPrototype(value.prototype);\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugMode } from \"../../settings\";\n\nimport { Clock, ClockEvent } from \"./base\";\nimport { ManualClock } from \"./manual\";\n\n/**\n * An implementation of libjass.renderers.Clock that automatically ticks and generates {@link libjass.renderers.ClockEvent}s according to the state of an external driver.\n *\n * For example, if you're using libjass to render subtitles on a canvas with your own video controls, these video controls will function as the driver to this AutoClock.\n * It would call {@link libjass.renderers.AutoClock.play}, {@link libjass.renderers.AutoClock.play}, etc. when the user pressed the corresponding video controls.\n *\n * The difference from ManualClock is that AutoClock does not require the driver to call something like {@link libjass.renderers.ManualClock.tick}. Instead it keeps its\n * own time with a high-resolution requestAnimationFrame-based timer.\n *\n * If using libjass with a <video> element, consider using {@link libjass.renderers.VideoClock} that uses the video element as a driver.\n *\n * @param {function():number} getCurrentTime A callback that will be invoked to get the current time of the external driver.\n * @param {number} currentTimeUpdateMaxDelay If two calls to getCurrentTime are more than currentTimeUpdateMaxDelay milliseconds apart, then the external driver will be\n * considered to have paused.\n */\nexport class AutoClock implements Clock {\n\tprivate _manualClock: ManualClock = new ManualClock();\n\n\tprivate _nextAnimationFrameRequestId: number = null;\n\n\tprivate _lastKnownExternalTime: number = null;\n\tprivate _lastKnownExternalTimeObtainedAt: number = null;\n\n\tconstructor(private _getCurrentTime: () => number, private _currentTimeUpdateMaxDelay: number) { }\n\n\t/**\n\t * Tells the clock to start generating ticks.\n\t */\n\tplay(): void {\n\t\tif (!this._manualClock.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._startTicking();\n\n\t\tthis._manualClock.play();\n\t}\n\n\t/**\n\t * Tells the clock to pause.\n\t */\n\tpause(): void {\n\t\tif (!this._manualClock.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._nextAnimationFrameRequestId === null) {\n\t\t\tif (debugMode) {\n\t\t\t\tconsole.warn(\"AutoClock.pause: Abnormal state detected. AutoClock._nextAnimationFrameRequestId should not have been null.\");\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis._stopTicking();\n\n\t\tthis._manualClock.pause();\n\t}\n\n\t/**\n\t * Tells the clock that the external driver is seeking.\n\t */\n\tseeking(): void {\n\t\tthis._manualClock.seek(this._getCurrentTime());\n\t}\n\n\t// Clock members\n\n\t/**\n\t * @type {number}\n\t */\n\tget currentTime(): number {\n\t\treturn this._manualClock.currentTime;\n\t}\n\n\t/**\n\t * @type {boolean}\n\t */\n\tget enabled(): boolean {\n\t\treturn this._manualClock.enabled;\n\t}\n\n\t/**\n\t * @type {boolean}\n\t */\n\tget paused(): boolean {\n\t\treturn this._manualClock.paused;\n\t}\n\n\t/**\n\t * Gets the rate of the clock - how fast the clock ticks compared to real time.\n\t *\n\t * @type {number}\n\t */\n\tget rate(): number {\n\t\treturn this._manualClock.rate;\n\t}\n\n\t/**\n\t * Sets the rate of the clock - how fast the clock ticks compared to real time.\n\t *\n\t * @param {number} rate The new rate of the clock.\n\t */\n\tsetRate(rate: number): void {\n\t\tthis._manualClock.setRate(rate);\n\t}\n\n\t/**\n\t * Enable the clock.\n\t *\n\t * @return {boolean} True if the clock is now enabled, false if it was already enabled.\n\t */\n\tenable(): boolean {\n\t\tif (!this._manualClock.enable()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._startTicking();\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Disable the clock.\n\t *\n\t * @return {boolean} True if the clock is now disabled, false if it was already disabled.\n\t */\n\tdisable(): boolean {\n\t\tif (!this._manualClock.disable()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._stopTicking();\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Toggle the clock.\n\t */\n\ttoggle(): void {\n\t\tthis._manualClock.toggle();\n\t}\n\n\t/**\n\t * Enable or disable the clock.\n\t *\n\t * @param {boolean} enabled If true, the clock is enabled, otherwise it's disabled.\n\t * @return {boolean} True if the clock is now in the given state, false if it was already in that state.\n\t */\n\tsetEnabled(enabled: boolean): boolean {\n\t\treturn this._manualClock.setEnabled(enabled);\n\t}\n\n\t/**\n\t * @param {number} type\n\t * @param {!Function} listener\n\t */\n\taddEventListener(type: ClockEvent, listener: Function): void {\n\t\tthis._manualClock.addEventListener(type, listener);\n\t};\n\n\t/**\n\t * @param {number} timeStamp\n\t */\n\tprivate _onTimerTick(timeStamp: number): void {\n\t\tif (!this._manualClock.enabled) {\n\t\t\tif (debugMode) {\n\t\t\t\tconsole.warn(\"AutoClock._onTimerTick: Called when disabled.\");\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentTime = this._manualClock.currentTime;\n\t\tconst currentExternalTime = this._getCurrentTime();\n\n\t\tif (!this._manualClock.paused) {\n\t\t\tif (this._lastKnownExternalTime !== null && currentExternalTime === this._lastKnownExternalTime) {\n\t\t\t\tif (timeStamp - this._lastKnownExternalTimeObtainedAt > this._currentTimeUpdateMaxDelay) {\n\t\t\t\t\tthis._lastKnownExternalTimeObtainedAt = null;\n\t\t\t\t\tthis._manualClock.pause();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._manualClock.tick((timeStamp - this._lastKnownExternalTimeObtainedAt) / 1000 * this._manualClock.rate + this._lastKnownExternalTime);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._lastKnownExternalTime = currentExternalTime;\n\t\t\t\tthis._lastKnownExternalTimeObtainedAt = timeStamp;\n\t\t\t\tthis._manualClock.tick(currentExternalTime);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (currentTime !== currentExternalTime) {\n\t\t\t\tthis._lastKnownExternalTime = currentExternalTime;\n\t\t\t\tthis._lastKnownExternalTimeObtainedAt = timeStamp;\n\t\t\t\tthis._manualClock.tick(currentExternalTime);\n\t\t\t}\n\t\t}\n\n\t\tthis._nextAnimationFrameRequestId = requestAnimationFrame(timeStamp => this._onTimerTick(timeStamp));\n\t}\n\n\tprivate _startTicking(): void {\n\t\tif (this._nextAnimationFrameRequestId === null) {\n\t\t\tthis._nextAnimationFrameRequestId = requestAnimationFrame(timeStamp => this._onTimerTick(timeStamp));\n\t\t}\n\t}\n\n\tprivate _stopTicking(): void {\n\t\tif (this._nextAnimationFrameRequestId !== null) {\n\t\t\tcancelAnimationFrame(this._nextAnimationFrameRequestId);\n\t\t\tthis._nextAnimationFrameRequestId = null;\n\t\t}\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Map } from \"../../utility/map\";\n\n/**\n * A mixin class that represents an event source.\n */\nexport class EventSource<T> {\n\t/**\n\t * A map from event type to an array of all the listeners registered for that event type.\n\t *\n\t * @type {!Map.<T, !Array.<Function>>}\n\t */\n\t_eventListeners: Map<T, Function[]>;\n\n\t/**\n\t * Add a listener for the given event.\n\t *\n\t * @param {!T} type The type of event to attach the listener for\n\t * @param {!Function} listener The listener\n\t */\n\taddEventListener(type: T, listener: Function): void {\n\t\tlet listeners = this._eventListeners.get(type);\n\n\t\tif (listeners === undefined) {\n\t\t\tthis._eventListeners.set(type, listeners = []);\n\t\t}\n\n\t\tlisteners.push(listener);\n\t}\n\n\t/**\n\t * Calls all listeners registered for the given event type.\n\t *\n\t * @param {!T} type The type of event to dispatch\n\t * @param {!Array.<*>} args Arguments for the listeners of the event\n\t */\n\t_dispatchEvent(type: T, args: Object[]): void {\n\t\tconst listeners = this._eventListeners.get(type);\n\t\tif (listeners !== undefined) {\n\t\t\tfor (let listener of listeners) {\n\t\t\t\tlistener.apply(this, args);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The type of clock event.\n */\nexport enum ClockEvent {\n\tPlay,\n\tTick,\n\tPause,\n\tStop,\n\tRateChange,\n}\n\n/**\n * The clock interface. A clock is used by a renderer as a source of {@link libjass.renderers.ClockEvent}s.\n */\nexport interface Clock {\n\t/**\n\t * @type {number}\n\t */\n\tcurrentTime: number;\n\n\t/**\n\t * @type {boolean}\n\t */\n\tenabled: boolean;\n\n\t/**\n\t * @type {boolean}\n\t */\n\tpaused: boolean;\n\n\t/**\n\t * Gets the rate of the clock - how fast the clock ticks compared to real time.\n\t *\n\t * @type {number}\n\t */\n\trate: number;\n\n\t/**\n\t * Enable the clock.\n\t *\n\t * @return {boolean} True if the clock is now enabled, false if it was already enabled.\n\t */\n\tenable(): boolean;\n\n\t/**\n\t * Disable the clock.\n\t *\n\t * @return {boolean} True if the clock is now disabled, false if it was already disabled.\n\t */\n\tdisable(): boolean;\n\n\t/**\n\t * Toggle the clock.\n\t */\n\ttoggle(): void;\n\n\t/**\n\t * Enable or disable the clock.\n\t *\n\t * @param {boolean} enabled If true, the clock is enabled, otherwise it's disabled.\n\t * @return {boolean} True if the clock is now in the given state, false if it was already in that state.\n\t */\n\tsetEnabled(enabled: boolean): boolean;\n\n\t// EventSource members\n\n\t/**\n\t * @param {number} type\n\t * @param {!Function} listener\n\t */\n\taddEventListener(type: ClockEvent, listener: Function): void;\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { mixin } from \"../../utility/mixin\";\nimport { Map } from \"../../utility/map\";\n\nimport { Clock, ClockEvent, EventSource } from \"./base\";\n\n/**\n * An implementation of {@link libjass.renderers.Clock} that allows user script to manually trigger {@link libjass.renderers.ClockEvent}s.\n */\nexport class ManualClock implements Clock, EventSource<ClockEvent> {\n\tprivate _currentTime: number = -1;\n\tprivate _rate: number = 1;\n\n\tprivate _enabled: boolean = true;\n\tprivate _paused: boolean = true;\n\n\t/**\n\t * Trigger a {@link libjass.renderers.ClockEvent.Play}\n\t */\n\tplay(): void {\n\t\tif (!this._enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._paused) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._paused = false;\n\n\t\tthis._dispatchEvent(ClockEvent.Play, []);\n\t}\n\n\t/**\n\t * Trigger a {@link libjass.renderers.ClockEvent.Tick} with the given time.\n\t *\n\t * @param {number} currentTime\n\t */\n\ttick(currentTime: number): void {\n\t\tif (!this._enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._currentTime !== currentTime) {\n\t\t\tthis.play();\n\t\t}\n\n\t\tthis._currentTime = currentTime;\n\t\tthis._dispatchEvent(ClockEvent.Tick, []);\n\t}\n\n\t/**\n\t * Seek to the given time. Unlike {@link libjass.renderers.ManualClock.tick} this is used to represent a discontinuous jump, such as the user seeking\n\t * via the video element's position bar.\n\t *\n\t * @param {number} time\n\t */\n\tseek(time: number): void {\n\t\tif (!this._enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pause();\n\n\t\tif (this._currentTime === time) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.stop();\n\n\t\tthis.tick(time);\n\n\t\tthis.pause();\n\t}\n\n\t/**\n\t * Trigger a {@link libjass.renderers.ClockEvent.Pause}\n\t */\n\tpause(): void {\n\t\tif (!this._enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._paused) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._paused = true;\n\n\t\tthis._dispatchEvent(ClockEvent.Pause, []);\n\t}\n\n\t/**\n\t * Trigger a {@link libjass.renderers.ClockEvent.Stop}\n\t */\n\tstop(): void {\n\t\tthis._dispatchEvent(ClockEvent.Stop, []);\n\t}\n\n\t// Clock members\n\n\t/**\n\t * @type {number}\n\t */\n\tget currentTime(): number {\n\t\treturn this._currentTime;\n\t}\n\n\t/**\n\t * @type {boolean}\n\t */\n\tget enabled(): boolean {\n\t\treturn this._enabled;\n\t}\n\n\t/**\n\t * @type {boolean}\n\t */\n\tget paused(): boolean {\n\t\treturn this._paused;\n\t}\n\n\t/**\n\t * Gets the rate of the clock - how fast the clock ticks compared to real time.\n\t *\n\t * @type {number}\n\t */\n\tget rate(): number {\n\t\treturn this._rate;\n\t}\n\n\t/**\n\t * Sets the rate of the clock - how fast the clock ticks compared to real time.\n\t *\n\t * @param {number} rate The new rate of the clock.\n\t */\n\tsetRate(rate: number): void {\n\t\tif (this._rate === rate) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._rate = rate;\n\n\t\tthis._dispatchEvent(ClockEvent.RateChange, []);\n\t}\n\n\t/**\n\t * Enable the clock.\n\t *\n\t * @return {boolean} True if the clock is now enabled, false if it was already enabled.\n\t */\n\tenable(): boolean {\n\t\tif (this._enabled) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._enabled = true;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Disable the clock.\n\t *\n\t * @return {boolean} True if the clock is now disabled, false if it was already disabled.\n\t */\n\tdisable(): boolean {\n\t\tif (!this._enabled) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._enabled = false;\n\n\t\tthis.pause();\n\n\t\tthis.stop();\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Toggle the clock.\n\t */\n\ttoggle(): void {\n\t\tif (this._enabled) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse {\n\t\t\tthis.enable();\n\t\t}\n\t}\n\n\t/**\n\t * Enable or disable the clock.\n\t *\n\t * @param {boolean} enabled If true, the clock is enabled, otherwise it's disabled.\n\t * @return {boolean} True if the clock is now in the given state, false if it was already in that state.\n\t */\n\tsetEnabled(enabled: boolean): boolean {\n\t\tif (enabled) {\n\t\t\treturn this.enable();\n\t\t}\n\t\telse {\n\t\t\treturn this.disable();\n\t\t}\n\t}\n\n\t// EventSource members\n\n\t/**\n\t * @type {!Map.<T, !Array.<Function>>}\n\t */\n\t_eventListeners: Map<ClockEvent, Function[]> = new Map<ClockEvent, Function[]>();\n\n\t/**\n\t * @type {function(number, !Function)}\n\t */\n\taddEventListener: (type: ClockEvent, listener: Function) => void;\n\n\t/**\n\t * @type {function(number, Array.<*>)}\n\t */\n\t_dispatchEvent: (type: ClockEvent, args: Object[]) => void;\n}\nmixin(ManualClock, [EventSource]);\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AutoClock } from \"./auto\";\nimport { Clock, ClockEvent } from \"./base\";\n\n/**\n * An implementation of libjass.renderers.Clock that generates {@link libjass.renderers.ClockEvent}s according to the state of a <video> element.\n *\n * @param {!HTMLVideoElement} video\n */\nexport class VideoClock implements Clock {\n\tprivate _autoClock: AutoClock;\n\n\tconstructor(video: HTMLVideoElement) {\n\t\tthis._autoClock = new AutoClock(() => video.currentTime, 100);\n\t\tvideo.addEventListener(\"playing\", () => this._autoClock.play(), false);\n\t\tvideo.addEventListener(\"pause\", () => this._autoClock.pause(), false);\n\t\tvideo.addEventListener(\"seeking\", () => this._autoClock.seeking(), false);\n\t\tvideo.addEventListener(\"ratechange\", () => this._autoClock.setRate(video.playbackRate), false);\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget currentTime(): number {\n\t\treturn this._autoClock.currentTime;\n\t}\n\n\t/**\n\t * @type {boolean}\n\t */\n\tget enabled(): boolean {\n\t\treturn this._autoClock.enabled;\n\t}\n\n\t/**\n\t * @type {boolean}\n\t */\n\tget paused(): boolean {\n\t\treturn this._autoClock.paused;\n\t}\n\n\t/**\n\t * Gets the rate of the clock - how fast the clock ticks compared to real time.\n\t *\n\t * @type {number}\n\t */\n\tget rate(): number {\n\t\treturn this._autoClock.rate;\n\t}\n\n\t/**\n\t * Enable the clock.\n\t *\n\t * @return {boolean} True if the clock is now enabled, false if it was already enabled.\n\t */\n\tenable(): boolean {\n\t\treturn this._autoClock.enable();\n\t}\n\n\t/**\n\t * Disable the clock.\n\t *\n\t * @return {boolean} True if the clock is now disabled, false if it was already disabled.\n\t */\n\tdisable(): boolean {\n\t\treturn this._autoClock.disable();\n\t}\n\n\t/**\n\t * Toggle the clock.\n\t */\n\ttoggle(): void {\n\t\tthis._autoClock.toggle();\n\t}\n\n\t/**\n\t * Enable or disable the clock.\n\t *\n\t * @param {boolean} enabled If true, the clock is enabled, otherwise it's disabled.\n\t * @return {boolean} True if the clock is now in the given state, false if it was already in that state.\n\t */\n\tsetEnabled(enabled: boolean): boolean {\n\t\treturn this._autoClock.setEnabled(enabled);\n\t}\n\n\t/**\n\t * @param {number} type\n\t * @param {!Function} listener\n\t */\n\taddEventListener(type: ClockEvent, listener: Function): void {\n\t\tthis._autoClock.addEventListener(type, listener);\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VideoClock } from \"./clocks/video\";\nimport { RendererSettings } from \"./settings\";\nimport { WebRenderer } from \"./web/renderer\";\n\nimport { ASS } from \"../types/ass\";\n\n///<reference path=\"./default-references.d.ts\" />\n\n/**\n * A default renderer implementation.\n *\n * @param {!HTMLVideoElement} video\n * @param {!libjass.ASS} ass\n * @param {libjass.renderers.RendererSettings} settings\n */\nexport class DefaultRenderer extends WebRenderer {\n\tprivate _videoIsFullScreen: boolean = false;\n\n\tconstructor(private _video: HTMLVideoElement, ass: ASS, settings?: RendererSettings) {\n\t\tsuper(ass, new VideoClock(_video), document.createElement(\"div\"), settings);\n\n\t\tthis._video.parentElement.replaceChild(this.libjassSubsWrapper, this._video);\n\t\tthis.libjassSubsWrapper.insertBefore(this._video, this.libjassSubsWrapper.firstElementChild);\n\t}\n\n\t/**\n\t * @deprecated\n\t *\n\t * @param {number} width\n\t * @param {number} height\n\t */\n\tresizeVideo(width: number, height: number): void {\n\t\tconsole.warn(\"`DefaultRenderer.resizeVideo(width, height)` has been deprecated. Use `DefaultRenderer.resize(width, height)` instead.\");\n\t\tthis.resize(width, height);\n\t}\n\n\tprotected _ready(): void {\n\t\tdocument.addEventListener(\"mozfullscreenchange\", event => this._onFullScreenChange(document.mozFullScreenElement), false);\n\t\tdocument.addEventListener(\"webkitfullscreenchange\", event => this._onFullScreenChange(document.webkitFullscreenElement), false);\n\t\tdocument.addEventListener(\"fullscreenchange\", event => this._onFullScreenChange(document.fullscreenElement), false);\n\n\t\tthis.resize(this._video.offsetWidth, this._video.offsetHeight);\n\n\t\tsuper._ready();\n\t}\n\n\t/**\n\t * @param {!Element} fullScreenElement\n\t */\n\tprivate _onFullScreenChange(fullScreenElement: Element): void {\n\t\tif (fullScreenElement === undefined) {\n\t\t\tfullScreenElement = document.msFullscreenElement;\n\t\t}\n\n\t\tif (fullScreenElement === this._video) {\n\t\t\tthis.libjassSubsWrapper.classList.add(\"libjass-full-screen\");\n\n\t\t\tthis.resize(screen.width, screen.height);\n\n\t\t\tthis._videoIsFullScreen = true;\n\n\t\t\tthis._dispatchEvent(\"fullScreenChange\", [this._videoIsFullScreen]);\n\t\t}\n\t\telse if (fullScreenElement === null && this._videoIsFullScreen) {\n\t\t\tthis.libjassSubsWrapper.classList.remove(\"libjass-full-screen\");\n\n\t\t\tthis._videoIsFullScreen = false;\n\n\t\t\tthis._dispatchEvent(\"fullScreenChange\", [this._videoIsFullScreen]);\n\t\t}\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { Clock, ClockEvent, EventSource } from \"./clocks/base\";\nexport { AutoClock } from \"./clocks/auto\";\nexport { ManualClock } from \"./clocks/manual\";\nexport { VideoClock } from \"./clocks/video\";\n\nexport { DefaultRenderer } from \"./default\";\nexport { NullRenderer } from \"./null\";\nexport { WebRenderer } from \"./web/renderer\";\nexport { RendererSettings } from \"./settings\";\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Clock, ClockEvent } from \"./clocks/base\";\n\nimport { RendererSettings } from \"./settings\";\n\nimport { verboseMode } from \"../settings\";\n\nimport { ASS } from \"../types/ass\";\nimport { Dialogue } from \"../types/dialogue\";\n\n/**\n * A renderer implementation that doesn't output anything.\n *\n * @param {!libjass.ASS} ass\n * @param {!libjass.renderers.Clock} clock\n * @param {libjass.renderers.RendererSettings} settings\n */\nexport class NullRenderer {\n\tprivate static _lastRendererId = -1;\n\n\tprivate _id: number;\n\n\tprivate _settings: RendererSettings;\n\n\tconstructor(private _ass: ASS, private _clock: Clock, settings?: RendererSettings) {\n\t\tthis._id = ++NullRenderer._lastRendererId;\n\n\t\tthis._settings = RendererSettings.from(settings);\n\n\t\tthis._clock.addEventListener(ClockEvent.Play, () => this._onClockPlay());\n\t\tthis._clock.addEventListener(ClockEvent.Tick, () => this._onClockTick());\n\t\tthis._clock.addEventListener(ClockEvent.Pause, () => this._onClockPause());\n\t\tthis._clock.addEventListener(ClockEvent.Stop, () => this._onClockStop());\n\t\tthis._clock.addEventListener(ClockEvent.RateChange, () => this._onClockRateChange());\n\t}\n\n\t/**\n\t * The unique ID of this renderer. Auto-generated.\n\t *\n\t * @type {number}\n\t */\n\tget id(): number {\n\t\treturn this._id;\n\t}\n\n\t/**\n\t * @type {!libjass.ASS}\n\t */\n\tget ass(): ASS {\n\t\treturn this._ass;\n\t}\n\n\t/**\n\t * @type {!libjass.renderers.Clock}\n\t */\n\tget clock(): Clock {\n\t\treturn this._clock;\n\t}\n\n\t/**\n\t * @type {!libjass.renderers.RendererSettings}\n\t */\n\tget settings(): RendererSettings {\n\t\treturn this._settings;\n\t}\n\n\t/**\n\t * Pre-render a dialogue. This is a no-op for this type.\n\t *\n\t * @param {!libjass.Dialogue} dialogue\n\t */\n\tpreRender(dialogue: Dialogue): void { }\n\n\t/**\n\t * Draw a dialogue. This is a no-op for this type.\n\t *\n\t * @param {!libjass.Dialogue} dialogue\n\t */\n\tdraw(dialogue: Dialogue): void { }\n\n\t/**\n\t * Enable the renderer.\n\t *\n\t * @return {boolean} True if the renderer is now enabled, false if it was already enabled.\n\t */\n\tenable(): boolean {\n\t\treturn this._clock.enable();\n\t}\n\n\t/**\n\t * Disable the renderer.\n\t *\n\t * @return {boolean} True if the renderer is now disabled, false if it was already disabled.\n\t */\n\tdisable(): boolean {\n\t\treturn this._clock.disable();\n\t}\n\n\t/**\n\t * Toggle the renderer.\n\t */\n\ttoggle(): void {\n\t\tthis._clock.toggle();\n\t}\n\n\t/**\n\t * Enable or disable the renderer.\n\t *\n\t * @param {boolean} enabled If true, the renderer is enabled, otherwise it's disabled.\n\t * @return {boolean} True if the renderer is now in the given state, false if it was already in that state.\n\t */\n\tsetEnabled(enabled: boolean): boolean {\n\t\treturn this._clock.setEnabled(enabled);\n\t}\n\n\t/**\n\t * @type {boolean}\n\t */\n\tget enabled(): boolean {\n\t\treturn this._clock.enabled;\n\t}\n\n\t/**\n\t * Runs when the clock is enabled, or starts playing, or is resumed from pause.\n\t */\n\tprotected _onClockPlay(): void {\n\t\tif (verboseMode) {\n\t\t\tconsole.log(\"NullRenderer._onClockPlay\");\n\t\t}\n\t}\n\n\t/**\n\t * Runs when the clock's current time changed. This might be a result of either regular playback or seeking.\n\t */\n\tprotected _onClockTick(): void {\n\t\tconst currentTime = this._clock.currentTime;\n\n\t\tif (verboseMode) {\n\t\t\tconsole.log(`NullRenderer._onClockTick: currentTime = ${ currentTime }`);\n\t\t}\n\n\t\tfor (let dialogue of this._ass.dialogues) {\n\t\t\tif (dialogue.end > currentTime) {\n\t\t\t\tif (dialogue.start <= currentTime) {\n\t\t\t\t\t// This dialogue is visible right now. Draw it.\n\t\t\t\t\tthis.draw(dialogue);\n\t\t\t\t}\n\t\t\t\telse if (dialogue.start <= (currentTime + this._settings.preRenderTime)) {\n\t\t\t\t\t// This dialogue will be visible soon. Pre-render it.\n\t\t\t\t\tthis.preRender(dialogue);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Runs when the clock is paused.\n\t */\n\tprotected _onClockPause(): void {\n\t\tif (verboseMode) {\n\t\t\tconsole.log(\"NullRenderer._onClockPause\");\n\t\t}\n\t}\n\n\t/**\n\t * Runs when the clock is disabled.\n\t */\n\tprotected _onClockStop(): void {\n\t\tif (verboseMode) {\n\t\t\tconsole.log(\"NullRenderer._onClockStop\");\n\t\t}\n\t}\n\n\t/**\n\t * Runs when the clock changes its rate.\n\t */\n\tprotected _onClockRateChange(): void {\n\t\tif (verboseMode) {\n\t\t\tconsole.log(\"NullRenderer._onClockRateChange\");\n\t\t}\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Map } from \"../utility/map\";\n\n/**\n * Settings for the renderer.\n */\nexport class RendererSettings {\n\t/**\n\t * A map of font name to one or more URLs of that font. If provided, the fonts in this map are pre-loaded by the WebRenderer when it's created.\n\t *\n\t * If you have a <style> or <link> element on the page containing @font-face rules, you can use the {@link libjass.renderers.RendererSettings.makeFontMapFromStyleElement}\n\t * convenience method to create a font map.\n\t *\n\t * @type {!Map.<string, !Array.<string>>}\n\t */\n\tfontMap: Map<string, string[]>;\n\n\t/**\n\t * Subtitles will be pre-rendered for this amount of time (seconds).\n\t *\n\t * Defaults to 5.\n\t *\n\t * @type {number}\n\t */\n\tpreRenderTime: number;\n\n\t/**\n\t * Subtitle outlines will be rendered in full detail. When false, the value of blur is used to draw less outlines for better performance and (hopefully) similar output.\n\t *\n\t * Defaults to false.\n\t *\n\t * @type {boolean}\n\t */\n\tpreciseOutlines: boolean;\n\n\t/**\n\t * Outlines and blur are implemented using SVG filters by default. When false, they will be rendered using alternative means.\n\t *\n\t * IE 11 and below do not support SVG filters on HTML elements so this should be set to false there. See http://caniuse.com/svg-html for details.\n\t *\n\t * Defaults to true.\n\t *\n\t * @type {boolean}\n\t */\n\tenableSvg: boolean;\n\n\t/**\n\t * A convenience method to create a font map from a <style> or <link> element that contains @font-face rules. There should be one @font-face rule for each font name, mapping to a font file URL.\n\t *\n\t * For example:\n\t *\n\t *     @font-face {\n\t *         font-family: \"Helvetica\";\n\t *         src: url(\"/fonts/helvetica.ttf\");\n\t *     }\n\t *\n\t * @param {!LinkStyle} linkStyle\n\t * @return {!Map.<string, !Array.<string>>}\n\t */\n\tstatic makeFontMapFromStyleElement(linkStyle: LinkStyle): Map<string, string[]> {\n\t\tconst fontMap = new Map<string, string[]>();\n\n\t\tconst styleSheet = <CSSStyleSheet>linkStyle.sheet;\n\t\tconst rules: CSSFontFaceRule[] = Array.prototype.filter.call(styleSheet.cssRules, (rule: CSSRule) => rule.type === CSSRule.FONT_FACE_RULE);\n\t\tfor (let rule of rules) {\n\t\t\tlet src = rule.style.getPropertyValue(\"src\");\n\t\t\tif (!src) {\n\t\t\t\tsrc = rule.cssText.split(\"\\n\")\n\t\t\t\t\t.map(line => line.match(/src: ([^;]+);/))\n\t\t\t\t\t.filter(matches => matches !== null)\n\t\t\t\t\t.map(matches => matches[1])[0];\n\t\t\t}\n\n\t\t\tconst urls = src.split(/,\\s*/).map(url => RendererSettings._stripQuotes(url.match(/^url\\((.+)\\)$/)[1]));\n\t\t\tif (urls.length > 0) {\n\t\t\t\tconst name = RendererSettings._stripQuotes(rule.style.getPropertyValue(\"font-family\"));\n\t\t\t\tlet existingList = fontMap.get(name);\n\t\t\t\tif (existingList === undefined) {\n\t\t\t\t\tfontMap.set(name, existingList = []);\n\t\t\t\t}\n\t\t\t\texistingList.unshift.apply(existingList, urls);\n\t\t\t}\n\t\t}\n\n\t\treturn fontMap;\n\t}\n\n\t/**\n\t * Converts an arbitrary object into a {@link libjass.renderers.RendererSettings} object.\n\t *\n\t * @param {*} object\n\t * @return {!libjass.renderers.RendererSettings}\n\t */\n\tstatic from(object?: any): RendererSettings {\n\t\tif (object === undefined || object === null) {\n\t\t\tobject = {};\n\t\t}\n\n\t\tconst { fontMap = null, preRenderTime = 5, preciseOutlines = false, enableSvg = true } = <RendererSettings>object;\n\t\tconst result = new RendererSettings();\n\t\tresult.fontMap = fontMap;\n\t\tresult.preRenderTime = preRenderTime;\n\t\tresult.preciseOutlines = preciseOutlines;\n\t\tresult.enableSvg = enableSvg;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * @param {string} str\n\t * @return {string}\n\t */\n\tprivate static _stripQuotes(str: string): string {\n\t\treturn str.match(/^[\"']?(.*?)[\"']?$/)[1];\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Keyframe } from \"./keyframe\";\n\nimport { NullRenderer } from \"../null\";\n\nimport { Map } from \"../../utility/map\";\n\n/**\n * This class represents a collection of animations. Each animation contains one or more keyframes.\n * The collection can then be converted to a CSS3 representation.\n *\n * @param {!libjass.renderers.NullRenderer} renderer The renderer that this collection is associated with\n */\nexport class AnimationCollection {\n\tprivate static _nextId: number = 0;\n\n\tprivate _id: string;\n\tprivate _rate: number;\n\n\tprivate _cssText: string = \"\";\n\tprivate _animationStyle: string = \"\";\n\tprivate _animationDelays: Map<string, number> = new Map<string, number>();\n\tprivate _numAnimations: number = 0;\n\n\tconstructor(renderer: NullRenderer) {\n\t\tthis._id = `${ renderer.id }-${ AnimationCollection._nextId++ }`;\n\t\tthis._rate = renderer.clock.rate;\n\t}\n\n\t/**\n\t * This string contains the animation definitions and should be inserted into a <style> element.\n\t *\n\t * @type {string}\n\t */\n\tget cssText(): string {\n\t\treturn this._cssText;\n\t}\n\n\t/**\n\t * This string should be set as the \"animation\" CSS property of the target element.\n\t *\n\t * @type {string}\n\t */\n\tget animationStyle(): string {\n\t\treturn this._animationStyle;\n\t}\n\n\t/**\n\t * This array should be used to set the \"animation-delay\" CSS property of the target element.\n\t *\n\t * @type {!Array.<number>}\n\t */\n\tget animationDelays(): Map<string, number> {\n\t\treturn this._animationDelays;\n\t}\n\n\t/**\n\t * Add an animation to this collection. The given keyframes together make one animation.\n\t *\n\t * @param {string} timingFunction One of the acceptable values for the \"animation-timing-function\" CSS property\n\t * @param {!Array.<!libjass.renderers.Keyframe>} keyframes\n\t */\n\tadd(timingFunction: string, keyframes: Keyframe[]): void {\n\t\tlet start: number = null;\n\t\tlet end: number = null;\n\n\t\tfor (let keyframe of keyframes) {\n\t\t\tif (start === null) {\n\t\t\t\tstart = keyframe.time;\n\t\t\t}\n\n\t\t\tend = keyframe.time;\n\t\t}\n\n\t\tlet ruleCssText = \"\";\n\n\t\tfor (let keyframe of keyframes) {\n\t\t\truleCssText +=\n`\t${ (100 * ((end - start === 0) ? 1 : ((keyframe.time - start) / (end - start)))).toFixed(3) }% {\n`;\n\n\t\t\tkeyframe.properties.forEach((value, name) => {\n\t\t\t\truleCssText +=\n`\t\t${ name }: ${ value };\n`;\n\t\t\t});\n\n\t\t\truleCssText +=\n`\t}\n`;\n\t\t}\n\n\t\tconst animationName = `animation-${ this._id }-${ this._numAnimations++ }`;\n\n\t\tthis._cssText +=\n`@-webkit-keyframes ${ animationName } {\n${ ruleCssText }\n}\n\n@keyframes ${ animationName } {\n${ ruleCssText }\n}\n\n`;\n\n\t\tif (this._animationStyle !== \"\") {\n\t\t\tthis._animationStyle += \",\";\n\t\t}\n\n\t\tthis._animationStyle += `${ animationName } ${ ((end - start) / this._rate).toFixed(3) }s ${ timingFunction }`;\n\t\tthis._animationDelays.set(animationName, start);\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @type {!DomParser} */\nexport const domParser: DOMParser = (typeof DOMParser !== \"undefined\") ? new DOMParser() : null;\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { domParser } from \"./dom-parser\";\n\nimport * as parts from \"../../parts/index\";\n\n/**\n * This class represents an ASS drawing - a set of drawing instructions between {\\p} tags.\n *\n * @param {number} outputScaleX\n * @param {number} outputScaleY\n */\nexport class DrawingStyles {\n\tprivate _scale: number = 1;\n\tprivate _baselineOffset: number = 0;\n\n\tconstructor(private _outputScaleX: number, private _outputScaleY: number) { }\n\n\t/**\n\t * @type {number}\n\t */\n\tset scale(value: number) {\n\t\tthis._scale = value;\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tset baselineOffset(value: number) {\n\t\tthis._baselineOffset = value;\n\t}\n\n\t/**\n\t * Converts this drawing to an <svg> element.\n\t *\n\t * @param {!libjass.parts.DrawingInstructions} drawingInstructions\n\t * @param {!libjass.parts.Color} fillColor\n\t * @return {!SVGSVGElement}\n\t */\n\ttoSVG(drawingInstructions: parts.DrawingInstructions, fillColor: parts.Color): SVGElement {\n\t\tconst scaleFactor = Math.pow(2, this._scale - 1);\n\t\tconst scaleX = this._outputScaleX / scaleFactor;\n\t\tconst scaleY = this._outputScaleY / scaleFactor;\n\n\t\tlet path = \"\";\n\t\tlet bboxWidth = 0;\n\t\tlet bboxHeight = 0;\n\n\t\tfor (let instruction of drawingInstructions.instructions) {\n\t\t\tif (instruction instanceof parts.drawing.MoveInstruction) {\n\t\t\t\tpath += ` M ${ instruction.x } ${ instruction.y + this._baselineOffset }`;\n\t\t\t\tbboxWidth = Math.max(bboxWidth, instruction.x);\n\t\t\t\tbboxHeight = Math.max(bboxHeight, instruction.y + this._baselineOffset);\n\t\t\t}\n\t\t\telse if (instruction instanceof parts.drawing.LineInstruction) {\n\t\t\t\tpath += ` L ${ instruction.x } ${ instruction.y + this._baselineOffset }`;\n\t\t\t\tbboxWidth = Math.max(bboxWidth, instruction.x);\n\t\t\t\tbboxHeight = Math.max(bboxHeight, instruction.y + this._baselineOffset);\n\t\t\t}\n\t\t\telse if (instruction instanceof parts.drawing.CubicBezierCurveInstruction) {\n\t\t\t\tpath += ` C ${ instruction.x1 } ${ instruction.y1 + this._baselineOffset }, ${ instruction.x2 } ${ instruction.y2 + this._baselineOffset }, ${ instruction.x3 } ${ instruction.y3 + this._baselineOffset }`;\n\t\t\t\tbboxWidth = Math.max(bboxWidth, instruction.x1, instruction.x2, instruction.x3);\n\t\t\t\tbboxHeight = Math.max(bboxHeight, instruction.y1 + this._baselineOffset, instruction.y2 + this._baselineOffset, instruction.y3 + this._baselineOffset);\n\t\t\t}\n\t\t}\n\n\t\tconst result =\n`<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"${ (bboxWidth * scaleX).toFixed(3) }px\" height=\"${ (bboxHeight * scaleY).toFixed(3) }px\">\n<g transform=\"scale(${ scaleX.toFixed(3) } ${ scaleY.toFixed(3) })\">\n\t<path d=\"${ path }\" fill=\"${ fillColor.toString() }\" />\n</g>\n</svg>`;\n\n\t\treturn <SVGSVGElement>domParser.parseFromString(result, \"image/svg+xml\").childNodes[0];\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Map } from \"../../utility/map\";\n\n/**\n * This class represents a single keyframe. It has a list of CSS properties (names and values) associated with a point in time. Multiple keyframes make up an animation.\n *\n * @param {number} time\n * @param {!Map.<string, string>} properties\n */\nexport class Keyframe {\n\tconstructor(private _time: number, private _properties: Map<string, string>) { }\n\n\t/**\n\t * @type {number}\n\t */\n\tget time(): number {\n\t\treturn this._time;\n\t}\n\n\t/**\n\t * @type {!Map.<string, string>}\n\t */\n\tget properties(): Map<string, string> {\n\t\treturn this._properties;\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AnimationCollection } from \"./animation-collection\";\nimport { DrawingStyles } from \"./drawing-styles\";\nimport { Keyframe } from \"./keyframe\";\nimport { SpanStyles } from \"./span-styles\";\n\nimport { Clock, EventSource } from \"../clocks/base\";\n\nimport { NullRenderer } from \"../null\";\nimport { RendererSettings } from \"../settings\";\n\nimport * as parts from \"../../parts/index\";\n\nimport { debugMode } from \"../../settings\";\n\nimport { ASS } from \"../../types/ass\";\nimport { Dialogue } from \"../../types/dialogue\";\nimport { WrappingStyle } from \"../../types/misc\";\n\nimport { mixin } from \"../../utility/mixin\";\nimport { Map } from \"../../utility/map\";\nimport { Set } from \"../../utility/set\";\nimport { Promise } from \"../../utility/promise\";\n\n///<reference path=\"./references.d.ts\" />\n\n/**\n * A renderer implementation that draws subtitles to the given <div>\n *\n * @param {!libjass.ASS} ass\n * @param {!libjass.renderers.Clock} clock\n * @param {!HTMLDivElement} libjassSubsWrapper Subtitles will be rendered to this <div>\n * @param {!libjass.renderers.RendererSettings} settings\n */\nexport class WebRenderer extends NullRenderer implements EventSource<string> {\n\tprivate _subsWrapper: HTMLDivElement;\n\tprivate _layerWrappers: HTMLDivElement[] = [];\n\tprivate _layerAlignmentWrappers: HTMLDivElement[][] = [];\n\tprivate _fontSizeElement: HTMLDivElement;\n\tprivate _animationStyleElement: HTMLStyleElement;\n\tprivate _svgDefsElement: SVGDefsElement;\n\n\tprivate _currentSubs: Map<Dialogue, HTMLDivElement> = new Map<Dialogue, HTMLDivElement>();\n\tprivate _preRenderedSubs: Map<number, PreRenderedSub> = new Map<number, PreRenderedSub>();\n\n\tprivate _scaleX: number;\n\tprivate _scaleY: number;\n\n\tconstructor(ass: ASS, clock: Clock, private _libjassSubsWrapper: HTMLDivElement, settings?: RendererSettings) {\n\t\tsuper(ass, clock, (() => {\n\t\t\tif (!(_libjassSubsWrapper instanceof HTMLDivElement)) {\n\t\t\t\tconst temp = settings;\n\t\t\t\tsettings = <any>_libjassSubsWrapper;\n\t\t\t\t_libjassSubsWrapper = <any>temp;\n\t\t\t\tconsole.warn(\"WebRenderer's constructor now takes libjassSubsWrapper as the third parameter and settings as the fourth parameter. Please update the caller.\");\n\t\t\t}\n\n\t\t\treturn settings;\n\t\t})());\n\n\t\tthis._libjassSubsWrapper.classList.add(\"libjass-wrapper\");\n\n\t\tthis._subsWrapper = document.createElement(\"div\");\n\t\tthis._libjassSubsWrapper.appendChild(this._subsWrapper);\n\t\tthis._subsWrapper.className = \"libjass-subs\";\n\n\t\tthis._fontSizeElement = document.createElement(\"div\");\n\t\tthis._libjassSubsWrapper.appendChild(this._fontSizeElement);\n\t\tthis._fontSizeElement.className = \"libjass-font-measure\";\n\t\tthis._fontSizeElement.appendChild(document.createTextNode(\"M\"));\n\n\t\tthis._animationStyleElement = document.createElement(\"style\");\n\t\tthis._animationStyleElement.id = `libjass-animation-styles-${ this.id }`;\n\t\tthis._animationStyleElement.type = \"text/css\";\n\t\tdocument.querySelector(\"head\").appendChild(this._animationStyleElement);\n\n\t\tconst svgElement = <SVGSVGElement>document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\t\tthis._libjassSubsWrapper.appendChild(svgElement);\n\t\tsvgElement.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n\t\tsvgElement.setAttribute(\"version\", \"1.1\");\n\t\tsvgElement.setAttribute(\"class\", \"libjass-filters\");\n\t\tsvgElement.setAttribute(\"width\", \"0\");\n\t\tsvgElement.setAttribute(\"height\", \"0\");\n\n\t\tthis._svgDefsElement = <SVGDefsElement>document.createElementNS(\"http://www.w3.org/2000/svg\", \"defs\");\n\t\tsvgElement.appendChild(this._svgDefsElement);\n\n\t\t// Preload fonts\n\n\t\tconst urlsToPreload = new Set<string>();\n\t\tif (this.settings.fontMap !== null) {\n\t\t\tthis.settings.fontMap.forEach(srcs => {\n\t\t\t\tfor (let src of srcs) {\n\t\t\t\t\turlsToPreload.add(src);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (debugMode) {\n\t\t\tconsole.log(`Preloading ${ urlsToPreload.size } fonts...`);\n\t\t}\n\n\t\tconst xhrPromises: Promise<void>[] = [];\n\t\turlsToPreload.forEach(url => {\n\t\t\txhrPromises.push(new Promise<void>((resolve, reject) => {\n\t\t\t\tconst xhr = new XMLHttpRequest();\n\t\t\t\txhr.addEventListener(\"load\", () => {\n\t\t\t\t\tif (debugMode) {\n\t\t\t\t\t\tconsole.log(`Preloaded ${ url }.`);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(null);\n\t\t\t\t});\n\t\t\t\txhr.open(\"GET\", url, true);\n\t\t\t\txhr.send();\n\t\t\t}));\n\t\t});\n\n\t\tPromise.all(xhrPromises).then(() => {\n\t\t\tif (debugMode) {\n\t\t\t\tconsole.log(\"All fonts have been preloaded.\");\n\t\t\t}\n\n\t\t\tthis._ready();\n\t\t});\n\t}\n\n\t/**\n\t * @type {!HTMLDivElement}\n\t */\n\tget libjassSubsWrapper(): HTMLDivElement {\n\t\treturn this._libjassSubsWrapper;\n\t}\n\n\t/**\n\t * Resize the subtitles to the given new dimensions.\n\t *\n\t * @param {number} width\n\t * @param {number} height\n\t */\n\tresize(width: number, height: number): void {\n\t\tthis._removeAllSubs();\n\n\t\tconst ratio = Math.min(width / this.ass.properties.resolutionX, height / this.ass.properties.resolutionY);\n\t\tconst subsWrapperWidth = this.ass.properties.resolutionX * ratio;\n\t\tconst subsWrapperHeight = this.ass.properties.resolutionY * ratio;\n\t\tthis._subsWrapper.style.width = `${ subsWrapperWidth.toFixed(3) }px`;\n\t\tthis._subsWrapper.style.height = `${ subsWrapperHeight.toFixed(3) }px`;\n\t\tthis._subsWrapper.style.left = `${ ((width - subsWrapperWidth) / 2).toFixed(3) }px`;\n\t\tthis._subsWrapper.style.top = `${ ((height - subsWrapperHeight) / 2).toFixed(3) }px`;\n\n\t\tthis._scaleX = subsWrapperWidth / this.ass.properties.resolutionX;\n\t\tthis._scaleY = subsWrapperHeight / this.ass.properties.resolutionY;\n\n\t\t// Any dialogues which have been pre-rendered will need to be pre-rendered again.\n\t\tthis._preRenderedSubs.clear();\n\n\t\tif (this._animationStyleElement !== null) {\n\t\t\twhile (this._animationStyleElement.firstChild !== null) {\n\t\t\t\tthis._animationStyleElement.removeChild(this._animationStyleElement.firstChild);\n\t\t\t}\n\t\t}\n\n\t\twhile (this._svgDefsElement.firstChild !== null) {\n\t\t\tthis._svgDefsElement.removeChild(this._svgDefsElement.firstChild);\n\t\t}\n\n\t\t// this.currentTime will be -1 if resize() is called before the clock begins playing for the first time. In this situation, there is no need to force a redraw.\n\t\tif (this.clock.currentTime !== -1) {\n\t\t\tthis._onClockTick();\n\t\t}\n\t}\n\n\t/**\n\t * The magic happens here. The subtitle div is rendered and stored. Call {@link libjass.renderers.WebRenderer.draw} to get a clone of the div to display.\n\t *\n\t * @param {!libjass.Dialogue} dialogue\n\t */\n\tpreRender(dialogue: Dialogue): void {\n\t\tif (this._preRenderedSubs.has(dialogue.id)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst sub = document.createElement(\"div\");\n\n\t\tsub.style.marginLeft = `${ (this._scaleX * dialogue.style.marginLeft).toFixed(3) }px`;\n\t\tsub.style.marginRight = `${ (this._scaleX * dialogue.style.marginRight).toFixed(3) }px`;\n\t\tsub.style.marginTop = sub.style.marginBottom = `${ (this._scaleY * dialogue.style.marginVertical).toFixed(3) }px`;\n\t\tsub.style.minWidth = `${ (this._subsWrapper.offsetWidth - this._scaleX * (dialogue.style.marginLeft + dialogue.style.marginRight)).toFixed(3) }px`;\n\n\t\tconst dialogueAnimationCollection = new AnimationCollection(this);\n\n\t\tlet currentSpan: HTMLSpanElement = null;\n\t\tconst currentSpanStyles = new SpanStyles(this, dialogue, this._scaleX, this._scaleY, this.settings, this._fontSizeElement, this._svgDefsElement);\n\n\t\tlet currentAnimationCollection: AnimationCollection = null;\n\n\t\tlet previousAddNewLine = false; // If two or more \\N's are encountered in sequence, then all but the first will be created using currentSpanStyles.makeNewLine() instead\n\t\tconst startNewSpan = (addNewLine: boolean): void => {\n\t\t\tif (currentSpan !== null && currentSpan.textContent !== \"\") {\n\t\t\t\tsub.appendChild(currentSpanStyles.setStylesOnSpan(currentSpan, currentAnimationCollection, this._animationStyleElement));\n\t\t\t}\n\n\t\t\tif (currentAnimationCollection !== null) {\n\t\t\t\tcurrentAnimationCollection.animationDelays.forEach((delay, name) => dialogueAnimationCollection.animationDelays.set(name, delay));\n\t\t\t}\n\n\t\t\tif (addNewLine) {\n\t\t\t\tif (previousAddNewLine) {\n\t\t\t\t\tsub.appendChild(currentSpanStyles.makeNewLine());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsub.appendChild(document.createElement(\"br\"));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurrentSpan = document.createElement(\"span\");\n\t\t\tcurrentAnimationCollection = new AnimationCollection(this);\n\n\t\t\tpreviousAddNewLine = addNewLine;\n\t\t};\n\t\tstartNewSpan(false);\n\n\t\tconst currentDrawingStyles: DrawingStyles = new DrawingStyles(this._scaleX, this._scaleY);\n\n\t\tlet wrappingStyle = this.ass.properties.wrappingStyle;\n\n\t\tlet karaokeTimesAccumulator = 0;\n\n\t\tfor (let part of dialogue.parts) {\n\t\t\tif (part instanceof parts.Italic) {\n\t\t\t\tcurrentSpanStyles.italic = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Bold) {\n\t\t\t\tcurrentSpanStyles.bold = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Underline) {\n\t\t\t\tcurrentSpanStyles.underline = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.StrikeThrough) {\n\t\t\t\tcurrentSpanStyles.strikeThrough = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Border) {\n\t\t\t\tcurrentSpanStyles.outlineWidth = part.value;\n\t\t\t\tcurrentSpanStyles.outlineHeight = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.BorderX) {\n\t\t\t\tcurrentSpanStyles.outlineWidth = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.BorderY) {\n\t\t\t\tcurrentSpanStyles.outlineHeight = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Shadow) {\n\t\t\t\tcurrentSpanStyles.shadowDepthX = part.value;\n\t\t\t\tcurrentSpanStyles.shadowDepthY = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.ShadowX) {\n\t\t\t\tcurrentSpanStyles.shadowDepthX = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.ShadowY) {\n\t\t\t\tcurrentSpanStyles.shadowDepthY = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Blur) {\n\t\t\t\tcurrentSpanStyles.blur = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.GaussianBlur) {\n\t\t\t\tcurrentSpanStyles.gaussianBlur = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.FontName) {\n\t\t\t\tcurrentSpanStyles.fontName = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.FontSize) {\n\t\t\t\tcurrentSpanStyles.fontSize = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.FontSizePlus) {\n\t\t\t\tcurrentSpanStyles.fontSize += part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.FontSizeMinus) {\n\t\t\t\tcurrentSpanStyles.fontSize -= part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.FontScaleX) {\n\t\t\t\tcurrentSpanStyles.fontScaleX = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.FontScaleY) {\n\t\t\t\tcurrentSpanStyles.fontScaleY = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.LetterSpacing) {\n\t\t\t\tcurrentSpanStyles.letterSpacing = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.RotateX) {\n\t\t\t\tcurrentSpanStyles.rotationX = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.RotateY) {\n\t\t\t\tcurrentSpanStyles.rotationY = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.RotateZ) {\n\t\t\t\tcurrentSpanStyles.rotationZ = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.SkewX) {\n\t\t\t\tcurrentSpanStyles.skewX = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.SkewY) {\n\t\t\t\tcurrentSpanStyles.skewY = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.PrimaryColor) {\n\t\t\t\tcurrentSpanStyles.primaryColor = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.SecondaryColor) {\n\t\t\t\tcurrentSpanStyles.secondaryColor = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.OutlineColor) {\n\t\t\t\tcurrentSpanStyles.outlineColor = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.ShadowColor) {\n\t\t\t\tcurrentSpanStyles.shadowColor = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Alpha) {\n\t\t\t\tcurrentSpanStyles.primaryAlpha = part.value;\n\t\t\t\tcurrentSpanStyles.secondaryAlpha = part.value;\n\t\t\t\tcurrentSpanStyles.outlineAlpha = part.value;\n\t\t\t\tcurrentSpanStyles.shadowAlpha = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.PrimaryAlpha) {\n\t\t\t\tcurrentSpanStyles.primaryAlpha = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.SecondaryAlpha) {\n\t\t\t\tcurrentSpanStyles.secondaryAlpha = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.OutlineAlpha) {\n\t\t\t\tcurrentSpanStyles.outlineAlpha = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.ShadowAlpha) {\n\t\t\t\tcurrentSpanStyles.shadowAlpha = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Alignment) {\n\t\t\t\t// Already handled in Dialogue\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.ColorKaraoke) {\n\t\t\t\tstartNewSpan(false);\n\n\t\t\t\tcurrentAnimationCollection.add(\"step-end\", [\n\t\t\t\t\tnew Keyframe(0, new Map([\n\t\t\t\t\t\t[\"color\", currentSpanStyles.secondaryColor.withAlpha(currentSpanStyles.secondaryAlpha).toString()],\n\t\t\t\t\t])), new Keyframe(karaokeTimesAccumulator, new Map([\n\t\t\t\t\t\t[\"color\", currentSpanStyles.primaryColor.withAlpha(currentSpanStyles.primaryAlpha).toString()],\n\t\t\t\t\t]))\n\t\t\t\t]);\n\n\t\t\t\tkaraokeTimesAccumulator += part.duration;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.WrappingStyle) {\n\t\t\t\twrappingStyle = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Reset) {\n\t\t\t\tcurrentSpanStyles.reset(this.ass.styles.get(part.value));\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Position) {\n\t\t\t\tsub.style.position = \"absolute\";\n\t\t\t\tsub.style.left = `${ (this._scaleX * part.x).toFixed(3) }px`;\n\t\t\t\tsub.style.top = `${ (this._scaleY * part.y).toFixed(3) }px`;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Move) {\n\t\t\t\tsub.style.position = \"absolute\";\n\t\t\t\tdialogueAnimationCollection.add(\"linear\", [new Keyframe(0, new Map([\n\t\t\t\t\t[\"left\", `${ (this._scaleX * part.x1).toFixed(3) }px`],\n\t\t\t\t\t[\"top\", `${ (this._scaleY * part.y1).toFixed(3) }px`],\n\t\t\t\t])), new Keyframe(part.t1, new Map([\n\t\t\t\t\t[\"left\", `${ (this._scaleX * part.x1).toFixed(3) }px`],\n\t\t\t\t\t[\"top\", `${ (this._scaleY * part.y1).toFixed(3) }px`],\n\t\t\t\t])), new Keyframe(part.t2, new Map([\n\t\t\t\t\t[\"left\", `${ (this._scaleX * part.x2).toFixed(3) }px`],\n\t\t\t\t\t[\"top\", `${ (this._scaleY * part.y2).toFixed(3) }px`],\n\t\t\t\t])), new Keyframe(dialogue.end - dialogue.start, new Map([\n\t\t\t\t\t[\"left\", `${ (this._scaleX * part.x2).toFixed(3) }px`],\n\t\t\t\t\t[\"top\", `${ (this._scaleY * part.y2).toFixed(3) }px`],\n\t\t\t\t]))]);\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Fade) {\n\t\t\t\tdialogueAnimationCollection.add(\"linear\", [new Keyframe(0, new Map([\n\t\t\t\t\t[\"opacity\", \"0\"],\n\t\t\t\t])), new Keyframe(part.start, new Map([\n\t\t\t\t\t[\"opacity\", \"1\"],\n\t\t\t\t])), new Keyframe(dialogue.end - dialogue.start - part.end, new Map([\n\t\t\t\t\t[\"opacity\", \"1\"],\n\t\t\t\t])), new Keyframe(dialogue.end - dialogue.start, new Map([\n\t\t\t\t\t[\"opacity\", \"0\"],\n\t\t\t\t]))]);\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.ComplexFade) {\n\t\t\t\tdialogueAnimationCollection.add(\"linear\", [new Keyframe(0, new Map([\n\t\t\t\t\t[\"opacity\", part.a1.toFixed(3)],\n\t\t\t\t])), new Keyframe(part.t1, new Map([\n\t\t\t\t\t[\"opacity\", part.a1.toFixed(3)],\n\t\t\t\t])), new Keyframe(part.t2, new Map([\n\t\t\t\t\t[\"opacity\", part.a2.toFixed(3)],\n\t\t\t\t])), new Keyframe(part.t3, new Map([\n\t\t\t\t\t[\"opacity\", part.a2.toFixed(3)],\n\t\t\t\t])), new Keyframe(part.t4, new Map([\n\t\t\t\t\t[\"opacity\", part.a3.toFixed(3)],\n\t\t\t\t])), new Keyframe(dialogue.end - dialogue.start, new Map([\n\t\t\t\t\t[\"opacity\", part.a3.toFixed(3)],\n\t\t\t\t]))]);\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.DrawingMode) {\n\t\t\t\tif (part.scale !== 0) {\n\t\t\t\t\tcurrentDrawingStyles.scale = part.scale;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.DrawingBaselineOffset) {\n\t\t\t\tcurrentDrawingStyles.baselineOffset = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.DrawingInstructions) {\n\t\t\t\tcurrentSpan.appendChild(currentDrawingStyles.toSVG(part, currentSpanStyles.primaryColor.withAlpha(currentSpanStyles.primaryAlpha)));\n\t\t\t\tstartNewSpan(false);\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Text) {\n\t\t\t\tcurrentSpan.appendChild(document.createTextNode(part.value));\n\t\t\t\tstartNewSpan(false);\n\t\t\t}\n\n\t\t\telse if (debugMode && part instanceof parts.Comment) {\n\t\t\t\tcurrentSpan.appendChild(document.createTextNode(part.value));\n\t\t\t\tstartNewSpan(false);\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.NewLine) {\n\t\t\t\tstartNewSpan(true);\n\t\t\t}\n\t\t}\n\n\t\tfor (let part of dialogue.parts) {\n\t\t\tif (part instanceof parts.Position || part instanceof parts.Move) {\n\t\t\t\tconst transformOrigin = WebRenderer._transformOrigins[dialogue.alignment];\n\n\t\t\t\tconst divTransformStyle = `translate(${ -transformOrigin[0] }%, ${ -transformOrigin[1] }%) translate(-${ sub.style.marginLeft }, -${ sub.style.marginTop })`;\n\t\t\t\tconst transformOriginString = `${ transformOrigin[0] }% ${ transformOrigin[1] }%`;\n\n\t\t\t\tsub.style.webkitTransform = divTransformStyle;\n\t\t\t\tsub.style.webkitTransformOrigin = transformOriginString;\n\n\t\t\t\tsub.style.transform = divTransformStyle;\n\t\t\t\tsub.style.transformOrigin = transformOriginString;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tswitch (wrappingStyle) {\n\t\t\tcase WrappingStyle.EndOfLineWrapping:\n\t\t\t\tsub.style.whiteSpace = \"pre-wrap\";\n\t\t\t\tbreak;\n\n\t\t\tcase WrappingStyle.NoLineWrapping:\n\t\t\t\tsub.style.whiteSpace = \"pre\";\n\t\t\t\tbreak;\n\n\t\t\tcase WrappingStyle.SmartWrappingWithWiderTopLine:\n\t\t\tcase WrappingStyle.SmartWrappingWithWiderBottomLine:\n\t\t\t\t/* Not supported. Treat the same as EndOfLineWrapping */\n\t\t\t\tsub.style.whiteSpace = \"pre-wrap\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (sub.style.position !== \"\") {\n\t\t\t// Explicitly set text alignment on absolutely-positioned subs because they'll go in a .an0 <div> and so won't get alignment CSS text-align.\n\t\t\tswitch (dialogue.alignment) {\n\t\t\t\tcase 1: case 4: case 7: sub.style.textAlign = \"left\"; break;\n\t\t\t\tcase 2: case 5: case 8: sub.style.textAlign = \"center\"; break;\n\t\t\t\tcase 3: case 6: case 9: sub.style.textAlign = \"right\"; break;\n\t\t\t}\n\t\t}\n\n\t\tthis._animationStyleElement.appendChild(document.createTextNode(dialogueAnimationCollection.cssText));\n\n\t\tsub.style.webkitAnimation = dialogueAnimationCollection.animationStyle;\n\t\tsub.style.animation = dialogueAnimationCollection.animationStyle;\n\n\t\tsub.setAttribute(\"data-dialogue-id\", `${ this.id }-${ dialogue.id }`);\n\n\t\tthis._preRenderedSubs.set(dialogue.id, { sub, animationDelays: dialogueAnimationCollection.animationDelays });\n\t}\n\n\t/**\n\t * Returns the subtitle div for display. The {@link libjass.renderers.Clock.currentTime} of the {@link libjass.renderers.NullRenderer.clock} is used to shift the\n\t * animations appropriately, so that at the time the div is inserted into the DOM and the animations begin, they are in sync with the clock time.\n\t *\n\t * @param {!libjass.Dialogue} dialogue\n\t */\n\tdraw(dialogue: Dialogue): void {\n\t\tif (this._currentSubs.has(dialogue)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (debugMode) {\n\t\t\tconsole.log(dialogue.toString());\n\t\t}\n\n\t\tlet preRenderedSub = this._preRenderedSubs.get(dialogue.id);\n\n\t\tif (preRenderedSub === undefined) {\n\t\t\tif (debugMode) {\n\t\t\t\tconsole.warn(\"This dialogue was not pre-rendered. Call preRender() before calling draw() so that draw() is faster.\");\n\t\t\t}\n\n\t\t\tthis.preRender(dialogue);\n\t\t\tpreRenderedSub = this._preRenderedSubs.get(dialogue.id);\n\n\t\t\tif (debugMode) {\n\t\t\t\tconsole.log(dialogue.toString());\n\t\t\t}\n\t\t}\n\n\t\tconst result = <HTMLDivElement>preRenderedSub.sub.cloneNode(true);\n\n\t\tconst applyAnimationDelays = (node: HTMLElement) => {\n\t\t\tconst animationNames = node.style.animationName || node.style.webkitAnimationName;\n\t\t\tif (animationNames !== undefined && animationNames !== \"\") {\n\t\t\t\tconst animationDelays = animationNames.split(\",\").map(name => {\n\t\t\t\t\tname = name.trim();\n\t\t\t\t\tconst delay = preRenderedSub.animationDelays.get(name);\n\t\t\t\t\treturn `${ ((delay + dialogue.start - this.clock.currentTime) / this.clock.rate).toFixed(3) }s`;\n\t\t\t\t}).join(\", \");\n\n\t\t\t\tnode.style.webkitAnimationDelay = animationDelays;\n\t\t\t\tnode.style.animationDelay = animationDelays;\n\t\t\t}\n\t\t}\n\t\tapplyAnimationDelays(result);\n\t\tconst animatedDescendants = result.querySelectorAll('[style*=\"animation:\"]');\n\t\tfor (let i = 0; i < animatedDescendants.length; i++) {\n\t\t\tapplyAnimationDelays(<HTMLElement>animatedDescendants[i]);\n\t\t}\n\n\t\tconst layer = dialogue.layer;\n\t\tconst alignment = (result.style.position === \"absolute\") ? 0 : dialogue.alignment; // Alignment 0 is for absolutely-positioned subs\n\n\t\t// Create the layer wrapper div and the alignment div inside it if not already created\n\t\tif (this._layerWrappers[layer] === undefined) {\n\t\t\tconst layerWrapper = document.createElement(\"div\");\n\t\t\tlayerWrapper.className = `layer layer${ layer }`;\n\n\t\t\t// Find the next greater layer div and insert this div before that one\n\t\t\tlet insertBeforeElement: HTMLDivElement = null;\n\t\t\tfor (let insertBeforeLayer = layer + 1; insertBeforeLayer < this._layerWrappers.length && insertBeforeElement === null; insertBeforeLayer++) {\n\t\t\t\tif (this._layerWrappers[insertBeforeLayer] !== undefined) {\n\t\t\t\t\tinsertBeforeElement = this._layerWrappers[insertBeforeLayer];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._subsWrapper.insertBefore(layerWrapper, insertBeforeElement);\n\n\t\t\tthis._layerWrappers[layer] = layerWrapper;\n\t\t\tthis._layerAlignmentWrappers[layer] = [];\n\t\t}\n\n\t\tif (this._layerAlignmentWrappers[layer][alignment] === undefined) {\n\t\t\tconst layerAlignmentWrapper = document.createElement(\"div\");\n\t\t\tlayerAlignmentWrapper.className = `an an${ alignment }`;\n\n\t\t\t// Find the next greater layer,alignment div and insert this div before that one\n\t\t\tconst layerWrapper = this._layerWrappers[layer];\n\t\t\tlet insertBeforeElement: HTMLDivElement = null;\n\t\t\tfor (let insertBeforeAlignment = alignment + 1; insertBeforeAlignment < this._layerAlignmentWrappers[layer].length && insertBeforeElement === null; insertBeforeAlignment++) {\n\t\t\t\tif (this._layerAlignmentWrappers[layer][insertBeforeAlignment] !== undefined) {\n\t\t\t\t\tinsertBeforeElement = this._layerAlignmentWrappers[layer][insertBeforeAlignment];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlayerWrapper.insertBefore(layerAlignmentWrapper, insertBeforeElement);\n\n\t\t\tthis._layerAlignmentWrappers[layer][alignment] = layerAlignmentWrapper;\n\t\t}\n\n\t\tthis._layerAlignmentWrappers[layer][alignment].appendChild(result);\n\n\t\tthis._currentSubs.set(dialogue, result);\n\t}\n\n\tprotected _onClockPlay(): void {\n\t\tsuper._onClockPlay();\n\n\t\tthis._removeAllSubs();\n\n\t\tthis._subsWrapper.style.display = \"\";\n\n\t\tthis._subsWrapper.classList.remove(\"paused\");\n\t}\n\n\tprotected _onClockTick(): void {\n\t\t// Remove dialogues that should be removed before adding new ones via super._onClockTick()\n\n\t\tconst currentTime = this.clock.currentTime;\n\n\t\tthis._currentSubs.forEach((sub: HTMLDivElement, dialogue: Dialogue) => {\n\t\t\tif (dialogue.start > currentTime || dialogue.end < currentTime) {\n\t\t\t\tthis._currentSubs.delete(dialogue);\n\t\t\t\tthis._removeSub(sub);\n\t\t\t}\n\t\t});\n\n\t\tsuper._onClockTick();\n\t}\n\n\tprotected _onClockPause(): void {\n\t\tsuper._onClockPause();\n\n\t\tthis._subsWrapper.classList.add(\"paused\");\n\t}\n\n\tprotected _onClockStop(): void {\n\t\tsuper._onClockStop();\n\n\t\tthis._subsWrapper.style.display = \"none\";\n\t}\n\n\tprotected _onClockRateChange(): void {\n\t\tsuper._onClockRateChange();\n\n\t\t// Any dialogues which have been pre-rendered will need to be pre-rendered again.\n\t\tthis._preRenderedSubs.clear();\n\n\t\tif (this._animationStyleElement !== null) {\n\t\t\twhile (this._animationStyleElement.firstChild !== null) {\n\t\t\t\tthis._animationStyleElement.removeChild(this._animationStyleElement.firstChild);\n\t\t\t}\n\t\t}\n\n\t\twhile (this._svgDefsElement.firstChild !== null) {\n\t\t\tthis._svgDefsElement.removeChild(this._svgDefsElement.firstChild);\n\t\t}\n\t}\n\n\tprotected _ready(): void {\n\t\tthis._dispatchEvent(\"ready\", []);\n\t}\n\n\t/**\n\t * @param {!HTMLDivElement} sub\n\t */\n\tprivate _removeSub(sub: HTMLDivElement): void {\n\t\tsub.parentNode.removeChild(sub);\n\t}\n\n\tprivate _removeAllSubs(): void {\n\t\tthis._currentSubs.forEach((sub: HTMLDivElement) => this._removeSub(sub));\n\t\tthis._currentSubs.clear();\n\t}\n\n\tprivate static _transformOrigins: number[][] = [\n\t\tnull,\n\t\t[0, 100], [50, 100], [100, 100],\n\t\t[0, 50], [50, 50], [100, 50],\n\t\t[0, 0], [50, 0], [100, 0]\n\t];\n\n\t// EventSource members\n\n\t/**\n\t * @type {!Map.<T, !Array.<Function>>}\n\t */\n\t_eventListeners: Map<string, Function[]> = new Map<string, Function[]>();\n\n\t/**\n\t * @type {function(number, !Function)}\n\t */\n\taddEventListener: (type: string, listener: Function) => void;\n\n\t/**\n\t * @type {function(number, Array.<*>)}\n\t */\n\t_dispatchEvent: (type: string, args: Object[]) => void;\n}\nmixin(WebRenderer, [EventSource]);\n\ninterface PreRenderedSub {\n\t/** @type {!HTMLDivElement} */\n\tsub: HTMLDivElement;\n\n\t/** @type {!Map.<string, number>} */\n\tanimationDelays: Map<string, number>;\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AnimationCollection } from \"./animation-collection\";\nimport { domParser } from \"./dom-parser\";\n\nimport { WebRenderer } from \"./renderer\";\n\nimport { RendererSettings } from \"../settings\";\n\nimport { Color } from \"../../parts/index\";\n\nimport { Style } from \"../../types/style\";\nimport { Dialogue } from \"../../types/dialogue\";\n\nimport { Map } from \"../../utility/map\";\n\n///<reference path=\"./web-references.d.ts\" />\n\n/**\n * This class represents the style attribute of a span.\n * As a Dialogue's div is rendered, individual parts are added to span's, and this class is used to maintain the style attribute of those.\n *\n * @param {!libjass.renderers.NullRenderer} renderer The renderer that this set of styles is associated with\n * @param {!libjass.Dialogue} dialogue The Dialogue that this set of styles is associated with\n * @param {number} scaleX The horizontal scaling of the subtitles\n * @param {number} scaleY The vertical scaling of the subtitles\n * @param {!libjass.renderers.RendererSettings} settings The renderer settings\n * @param {!HTMLDivElement} fontSizeElement A <div> element to measure font sizes with\n * @param {!SVGDefsElement} svgDefsElement An SVG <defs> element to append filter definitions to\n */\nexport class SpanStyles {\n\tprivate static _fontSizeCache: Map<string, Map<number, number>> = new Map<string, Map<number, number>>();\n\n\tprivate _id: string;\n\tprivate _defaultStyle: Style;\n\n\tprivate _italic: boolean;\n\tprivate _bold: Object;\n\tprivate _underline: boolean;\n\tprivate _strikeThrough: boolean;\n\n\tprivate _outlineWidth: number;\n\tprivate _outlineHeight: number;\n\n\tprivate _shadowDepthX: number;\n\tprivate _shadowDepthY: number;\n\n\tprivate _fontName: string;\n\tprivate _fontSize: number;\n\n\tprivate _fontScaleX: number;\n\tprivate _fontScaleY: number;\n\n\tprivate _letterSpacing: number;\n\n\tprivate _rotationX: number;\n\tprivate _rotationY: number;\n\tprivate _rotationZ: number;\n\n\tprivate _skewX: number;\n\tprivate _skewY: number;\n\n\tprivate _primaryColor: Color;\n\tprivate _secondaryColor: Color;\n\tprivate _outlineColor: Color;\n\tprivate _shadowColor: Color;\n\n\tprivate _primaryAlpha: number;\n\tprivate _secondaryAlpha: number;\n\tprivate _outlineAlpha: number;\n\tprivate _shadowAlpha: number;\n\n\tprivate _blur: number;\n\tprivate _gaussianBlur: number;\n\n\tprivate _nextFilterId = 0;\n\n\tconstructor(renderer: WebRenderer, dialogue: Dialogue, private _scaleX: number, private _scaleY: number, private _settings: RendererSettings, private _fontSizeElement: HTMLDivElement, private _svgDefsElement: SVGDefsElement) {\n\t\tthis._id = `${ renderer.id }-${ dialogue.id }`;\n\t\tthis._defaultStyle = dialogue.style;\n\n\t\tthis.reset(null);\n\t}\n\n\t/**\n\t * Resets the styles to the defaults provided by the argument.\n\t *\n\t * @param {libjass.Style} newStyle The new defaults to reset the style to. If null, the styles are reset to the default style of the Dialogue.\n\t */\n\treset(newStyle: Style): void {\n\t\tif (newStyle === undefined || newStyle === null) {\n\t\t\tnewStyle = this._defaultStyle;\n\t\t}\n\n\t\tthis.italic = newStyle.italic;\n\t\tthis.bold = newStyle.bold;\n\t\tthis.underline = newStyle.underline;\n\t\tthis.strikeThrough = newStyle.strikeThrough;\n\n\t\tthis.outlineWidth = newStyle.outlineThickness;\n\t\tthis.outlineHeight = newStyle.outlineThickness;\n\n\t\tthis.shadowDepthX = newStyle.shadowDepth;\n\t\tthis.shadowDepthY = newStyle.shadowDepth;\n\n\t\tthis.fontName = newStyle.fontName;\n\t\tthis.fontSize = newStyle.fontSize;\n\n\t\tthis.fontScaleX = newStyle.fontScaleX;\n\t\tthis.fontScaleY = newStyle.fontScaleY;\n\n\t\tthis.letterSpacing = newStyle.letterSpacing;\n\n\t\tthis._rotationX = null;\n\t\tthis._rotationY = null;\n\t\tthis._rotationZ = newStyle.rotationZ;\n\n\t\tthis._skewX = null;\n\t\tthis._skewY = null;\n\n\t\tthis.primaryColor = newStyle.primaryColor;\n\t\tthis.secondaryColor = newStyle.secondaryColor;\n\t\tthis.outlineColor = newStyle.outlineColor;\n\t\tthis.shadowColor = newStyle.shadowColor;\n\n\t\tthis.primaryAlpha = null;\n\t\tthis.secondaryAlpha = null;\n\t\tthis.outlineAlpha = null;\n\t\tthis.shadowAlpha = null;\n\n\t\tthis.blur = null;\n\t\tthis.gaussianBlur = null;\n\t}\n\n\t/**\n\t * Sets the style attribute on the given span element.\n\t *\n\t * @param {!HTMLSpanElement} span\n\t * @param {!AnimationCollection} animationCollection\n\t * @param {!HTMLStyleElement} animationStyleElement\n\t * @return {!HTMLSpanElement} The resulting <span> with the CSS styles applied. This may be a wrapper around the input <span> if the styles were applied using SVG filters.\n\t */\n\tsetStylesOnSpan(span: HTMLSpanElement, animationCollection: AnimationCollection, animationStyleElement: HTMLStyleElement): HTMLSpanElement {\n\t\tconst isTextOnlySpan = span.childNodes[0] instanceof Text;\n\n\t\tlet fontStyleOrWeight = \"\";\n\t\tif (this._italic) {\n\t\t\tfontStyleOrWeight += \"italic \";\n\t\t}\n\t\tif (this._bold === true) {\n\t\t\tfontStyleOrWeight += \"bold \";\n\t\t}\n\t\telse if (this._bold !== false) {\n\t\t\tfontStyleOrWeight += this._bold + \" \";\n\t\t}\n\t\tconst fontSize = (this._scaleY * SpanStyles._getFontSize(this._fontName, this._fontSize * (isTextOnlySpan ? this._fontScaleY : 1), this._fontSizeElement)).toFixed(3);\n\t\tconst lineHeight = (this._scaleY * this._fontSize).toFixed(3);\n\t\tspan.style.font = `${ fontStyleOrWeight }${ fontSize }px/${ lineHeight }px \"${ this._fontName }\"`;\n\n\t\tlet textDecoration = \"\";\n\t\tif (this._underline) {\n\t\t\ttextDecoration = \"underline\";\n\t\t}\n\t\tif (this._strikeThrough) {\n\t\t\ttextDecoration += \" line-through\";\n\t\t}\n\t\tspan.style.textDecoration = textDecoration.trim();\n\n\t\tlet transform = \"\";\n\t\tif (isTextOnlySpan) {\n\t\t\tif (this._fontScaleY !== this._fontScaleX) {\n\t\t\t\ttransform += `scaleY(${ (this._fontScaleY / this._fontScaleX).toFixed(3) }) `;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (this._fontScaleX !== 1) {\n\t\t\t\ttransform += `scaleX(${ this._fontScaleX }) `;\n\t\t\t}\n\t\t\tif (this._fontScaleY !== 1) {\n\t\t\t\ttransform += `scaleY(${ this._fontScaleY }) `;\n\t\t\t}\n\t\t}\n\t\tif (this._rotationY !== null) {\n\t\t\ttransform += `rotateY(${ this._rotationY }deg) `;\n\t\t}\n\t\tif (this._rotationX !== null) {\n\t\t\ttransform += `rotateX(${ this._rotationX }deg) `;\n\t\t}\n\t\tif (this._rotationZ !== 0) {\n\t\t\ttransform += `rotateZ(${ -1 * this._rotationZ }deg) `;\n\t\t}\n\t\tif (this._skewX !== null || this._skewY !== null) {\n\t\t\tconst skewX = SpanStyles._valueOrDefault(this._skewX, 0);\n\t\t\tconst skewY = SpanStyles._valueOrDefault(this._skewY, 0);\n\t\t\ttransform += `matrix(1, ${ skewY }, ${ skewX }, 1, 0, 0) `;\n\t\t}\n\t\tif (transform !== \"\") {\n\t\t\tspan.style.webkitTransform = transform;\n\t\t\tspan.style.webkitTransformOrigin = \"50% 50%\";\n\t\t\tspan.style.transform = transform;\n\t\t\tspan.style.transformOrigin = \"50% 50%\";\n\t\t\tspan.style.display = \"inline-block\";\n\t\t}\n\n\t\tspan.style.letterSpacing = `${ (this._scaleX * this._letterSpacing).toFixed(3) }px`;\n\n\t\tconst primaryColor = this._primaryColor.withAlpha(this._primaryAlpha);\n\t\tspan.style.color = primaryColor.toString();\n\n\t\tconst outlineColor = this._outlineColor.withAlpha(this._outlineAlpha);\n\n\t\tconst outlineWidth = this._scaleX * this._outlineWidth;\n\t\tconst outlineHeight = this._scaleY * this._outlineHeight;\n\n\t\tlet outlineFilter = '';\n\t\tlet blurFilter = '';\n\t\tconst filterId = `svg-filter-${ this._id }-${ this._nextFilterId++ }`;\n\n\t\tif (this._settings.enableSvg) {\n\t\t\tif (outlineWidth > 0 || outlineHeight > 0) {\n\t\t\t\t/* Construct an elliptical border by merging together many rectangles. The border is creating using dilate morphology filters, but these only support\n\t\t\t\t * generating rectangles.   http://lists.w3.org/Archives/Public/public-fx/2012OctDec/0003.html\n\t\t\t\t */\n\n\t\t\t\tlet mergeOutlinesFilter = '';\n\n\t\t\t\tlet outlineNumber = 0;\n\n\t\t\t\tconst increment = (!this._settings.preciseOutlines && this._gaussianBlur > 0) ? this._gaussianBlur : 1;\n\n\t\t\t\t((addOutline: (x: number, y: number) => void) => {\n\t\t\t\t\tif (outlineWidth <= outlineHeight) {\n\t\t\t\t\t\tif (outlineWidth > 0) {\n\t\t\t\t\t\t\tlet x: number;\n\t\t\t\t\t\t\tfor (x = 0; x <= outlineWidth; x += increment) {\n\t\t\t\t\t\t\t\taddOutline(x, outlineHeight / outlineWidth * Math.sqrt(outlineWidth * outlineWidth - x * x));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (x !== outlineWidth + increment) {\n\t\t\t\t\t\t\t\taddOutline(outlineWidth, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\taddOutline(0, outlineHeight);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (outlineHeight > 0) {\n\t\t\t\t\t\t\tlet y: number;\n\t\t\t\t\t\t\tfor (y = 0; y <= outlineHeight; y += increment) {\n\t\t\t\t\t\t\t\taddOutline(outlineWidth / outlineHeight * Math.sqrt(outlineHeight * outlineHeight - y * y), y);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (y !== outlineHeight + increment) {\n\t\t\t\t\t\t\t\taddOutline(0, outlineHeight);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\taddOutline(outlineWidth, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})((x: number, y: number): void => {\n\t\t\t\t\toutlineFilter +=\n`\t<feMorphology in=\"SourceAlpha\" operator=\"dilate\" radius=\"${ x.toFixed(3) } ${ y.toFixed(3) }\" result=\"outline${ outlineNumber }\" />\n`;\n\n\t\t\t\t\tmergeOutlinesFilter +=\n`\t\t<feMergeNode in=\"outline${ outlineNumber }\" />\n`;\n\n\t\t\t\t\toutlineNumber++;\n\t\t\t\t});\n\n\t\t\t\toutlineFilter +=\n`\t<feMerge result=\"outline\">\n${ mergeOutlinesFilter }\n\t</feMerge>\n\t<feFlood flood-color=\"${ outlineColor.toString() }\" />\n\t<feComposite operator=\"in\" in2=\"outline\" />\n`;\n\t\t\t}\n\n\t\t\tif (this._gaussianBlur > 0) {\n\t\t\t\tblurFilter +=\n`\t<feGaussianBlur stdDeviation=\"${ this._gaussianBlur }\" />\n`;\n\t\t\t}\n\t\t\tfor (let i = 0; i < this._blur; i++) {\n\t\t\t\tblurFilter +=\n`\t<feConvolveMatrix kernelMatrix=\"1 2 1 2 4 2 1 2 1\" edgeMode=\"none\" />\n`;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (outlineWidth > 0 || outlineHeight > 0) {\n\t\t\t\tlet outlineCssString = \"\";\n\n\t\t\t\t((addOutline: (x: number, y: number) => void) => {\n\t\t\t\t\tfor (let x = 0; x <= outlineWidth; x++) {\n\t\t\t\t\t\tconst maxY = (outlineWidth === 0) ? outlineHeight : outlineHeight * Math.sqrt(1 - ((x * x) / (outlineWidth * outlineWidth)));\n\t\t\t\t\t\tfor (let y = 0; y <= maxY; y++) {\n\t\t\t\t\t\t\taddOutline(x, y);\n\n\t\t\t\t\t\t\tif (x !== 0) {\n\t\t\t\t\t\t\t\taddOutline(-x, y);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (y !== 0) {\n\t\t\t\t\t\t\t\taddOutline(x, -y);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (x !== 0 && y !== 0) {\n\t\t\t\t\t\t\t\taddOutline(-x, -y);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})((x: number, y: number): void => {\n\t\t\t\t\toutlineCssString += `, ${ outlineColor.toString() } ${ x }px ${ y }px ${ this._gaussianBlur.toFixed(3) }px`;\n\t\t\t\t});\n\n\t\t\t\tspan.style.textShadow = outlineCssString.substr(\", \".length);\n\t\t\t}\n\t\t}\n\n\t\tconst filterWrapperSpan = document.createElement(\"span\");\n\t\tfilterWrapperSpan.appendChild(span);\n\n\t\tif (outlineFilter !== '' || blurFilter !== '') {\n\t\t\tconst filterString =\n`<filter xmlns=\"http://www.w3.org/2000/svg\" id=\"${ filterId }\" x=\"-50%\" width=\"200%\" y=\"-50%\" height=\"200%\">\n${ outlineFilter }\n${ blurFilter }\n\t<feMerge>\n\t\t<feMergeNode />\n\t\t<feMergeNode in=\"SourceGraphic\" />\n\t</feMerge>\n</filter>\n`;\n\n\t\t\tconst filterElement = domParser.parseFromString(filterString, \"image/svg+xml\").childNodes[0];\n\n\t\t\tthis._svgDefsElement.appendChild(filterElement);\n\n\t\t\tfilterWrapperSpan.style.webkitFilter = `url(\"#${ filterId }\")`;\n\t\t\tfilterWrapperSpan.style.filter = `url(\"#${ filterId }\")`;\n\t\t}\n\n\t\tif (this._shadowDepthX !== 0 || this._shadowDepthY !== 0) {\n\t\t\tconst shadowColor = this._shadowColor.withAlpha(this._shadowAlpha);\n\t\t\tconst shadowCssString = `${ shadowColor.toString() } ${ (this._shadowDepthX * this._scaleX / this._fontScaleX).toFixed(3) }px ${ (this._shadowDepthY * this._scaleY / this._fontScaleY).toFixed(3) }px 0px`;\n\t\t\tif (span.style.textShadow === \"\") {\n\t\t\t\tspan.style.textShadow = shadowCssString;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tspan.style.textShadow += \", \" + shadowCssString;\n\t\t\t}\n\t\t}\n\n\t\tif (this._rotationX !== 0 || this._rotationY !== 0) {\n\t\t\t// Perspective needs to be set on a \"transformable element\"\n\t\t\tfilterWrapperSpan.style.display = \"inline-block\";\n\t\t}\n\n\t\tanimationStyleElement.appendChild(document.createTextNode(animationCollection.cssText));\n\n\t\tspan.style.webkitAnimation = animationCollection.animationStyle;\n\t\tspan.style.animation = animationCollection.animationStyle;\n\n\t\treturn filterWrapperSpan;\n\t}\n\n\t/**\n\t * @return {!HTMLBRElement}\n\t */\n\tmakeNewLine(): HTMLBRElement {\n\t\tconst result = document.createElement(\"br\");\n\t\tresult.style.lineHeight = `${ (this._scaleY * this._fontSize).toFixed(3) }px`;\n\t\treturn result;\n\t}\n\n\t/**\n\t * Sets the italic property. null defaults it to the default style's value.\n\t *\n\t * @type {?boolean}\n\t */\n\tset italic(value: boolean) {\n\t\tthis._italic = SpanStyles._valueOrDefault(value, this._defaultStyle.italic);\n\t}\n\n\t/**\n\t * Sets the bold property. null defaults it to the default style's value.\n\t *\n\t * @type {(?number|?boolean)}\n\t */\n\tset bold(value: Object) {\n\t\tthis._bold = SpanStyles._valueOrDefault(value, this._defaultStyle.bold);\n\t}\n\n\t/**\n\t * Sets the underline property. null defaults it to the default style's value.\n\t *\n\t * @type {?boolean}\n\t */\n\tset underline(value: boolean) {\n\t\tthis._underline = SpanStyles._valueOrDefault(value, this._defaultStyle.underline);\n\t}\n\n\t/**\n\t * Sets the strike-through property. null defaults it to the default style's value.\n\t *\n\t * @type {?boolean}\n\t */\n\tset strikeThrough(value: boolean) {\n\t\tthis._strikeThrough = SpanStyles._valueOrDefault(value, this._defaultStyle.strikeThrough);\n\t}\n\n\t/**\n\t * Sets the outline width property. null defaults it to the style's original outline width value.\n\t *\n\t * @type {?number}\n\t */\n\tset outlineWidth(value: number) {\n\t\tthis._outlineWidth = SpanStyles._valueOrDefault(value, this._defaultStyle.outlineThickness);\n\t}\n\n\t/**\n\t * Sets the outline height property. null defaults it to the style's original outline height value.\n\t *\n\t * @type {?number}\n\t */\n\tset outlineHeight(value: number) {\n\t\tthis._outlineHeight = SpanStyles._valueOrDefault(value, this._defaultStyle.outlineThickness);\n\t}\n\n\t/**\n\t * Sets the outline width property. null defaults it to the style's original shadow depth X value.\n\t *\n\t * @type {?number}\n\t */\n\tset shadowDepthX(value: number) {\n\t\tthis._shadowDepthX = SpanStyles._valueOrDefault(value, this._defaultStyle.shadowDepth);\n\t}\n\n\t/**\n\t * Sets the shadow height property. null defaults it to the style's original shadow depth Y value.\n\t *\n\t * @type {?number}\n\t */\n\tset shadowDepthY(value: number) {\n\t\tthis._shadowDepthY = SpanStyles._valueOrDefault(value, this._defaultStyle.shadowDepth);\n\t}\n\n\t/**\n\t * Sets the blur property. null defaults it to 0.\n\t *\n\t * @type {?number}\n\t */\n\tset blur(value: number) {\n\t\tthis._blur = SpanStyles._valueOrDefault(value, 0);\n\t}\n\n\t/**\n\t * Sets the Gaussian blur property. null defaults it to 0.\n\t *\n\t * @type {?number}\n\t */\n\tset gaussianBlur(value: number) {\n\t\tthis._gaussianBlur = SpanStyles._valueOrDefault(value, 0);\n\t}\n\n\t/**\n\t * Sets the font name property. null defaults it to the default style's value.\n\t *\n\t * @type {?string}\n\t */\n\tset fontName(value: string) {\n\t\tthis._fontName = SpanStyles._valueOrDefault(value, this._defaultStyle.fontName);\n\t}\n\n\t/**\n\t * Sets the font size property. null defaults it to the default style's value.\n\t *\n\t * @type {?number}\n\t */\n\tset fontSize(value: number) {\n\t\tthis._fontSize = SpanStyles._valueOrDefault(value, this._defaultStyle.fontSize);\n\t}\n\n\t/**\n\t * Sets the horizontal font scaling property. null defaults it to the default style's value.\n\t *\n\t * @type {?number}\n\t */\n\tset fontScaleX(value: number) {\n\t\tthis._fontScaleX = SpanStyles._valueOrDefault(value, this._defaultStyle.fontScaleX);\n\t}\n\n\t/**\n\t * Sets the vertical font scaling property. null defaults it to the default style's value.\n\t *\n\t * @type {?number}\n\t */\n\tset fontScaleY(value: number) {\n\t\tthis._fontScaleY = SpanStyles._valueOrDefault(value, this._defaultStyle.fontScaleY);\n\t}\n\n\t/**\n\t * Sets the letter spacing property. null defaults it to the default style's value.\n\t *\n\t * @type {?number}\n\t */\n\tset letterSpacing(value: number) {\n\t\tthis._letterSpacing = SpanStyles._valueOrDefault(value, this._defaultStyle.letterSpacing);\n\t}\n\n\t/**\n\t * Sets the X-axis rotation property.\n\t *\n\t * @type {?number}\n\t */\n\tset rotationX(value: number) {\n\t\tthis._rotationX = value;\n\t}\n\n\t/**\n\t * Sets the Y-axis rotation property.\n\t *\n\t * @type {?number}\n\t */\n\tset rotationY(value: number) {\n\t\tthis._rotationY = value;\n\t}\n\n\t/**\n\t * Sets the Z-axis rotation property.\n\t *\n\t * @type {?number}\n\t */\n\tset rotationZ(value: number) {\n\t\tthis._rotationZ = SpanStyles._valueOrDefault(value, this._defaultStyle.rotationZ);\n\t}\n\n\t/**\n\t * Sets the X-axis skew property.\n\t *\n\t * @type {?number}\n\t */\n\tset skewX(value: number) {\n\t\tthis._skewX = value;\n\t}\n\n\t/**\n\t * Sets the Y-axis skew property.\n\t *\n\t * @type {?number}\n\t */\n\tset skewY(value: number) {\n\t\tthis._skewY = value;\n\t}\n\n\t/**\n\t * Gets the primary color property.\n\t *\n\t * @type {!libjass.Color}\n\t */\n\tget primaryColor(): Color {\n\t\treturn this._primaryColor;\n\t}\n\n\t/**\n\t * Sets the primary color property. null defaults it to the default style's value.\n\t *\n\t * @type {libjass.Color}\n\t */\n\tset primaryColor(value: Color) {\n\t\tthis._primaryColor = SpanStyles._valueOrDefault(value, this._defaultStyle.primaryColor);\n\t}\n\n\t/**\n\t * Gets the secondary color property.\n\t *\n\t * @type {!libjass.Color}\n\t */\n\tget secondaryColor(): Color {\n\t\treturn this._secondaryColor;\n\t}\n\n\t/**\n\t * Sets the secondary color property. null defaults it to the default style's value.\n\t *\n\t * @type {libjass.Color}\n\t */\n\tset secondaryColor(value: Color) {\n\t\tthis._secondaryColor = SpanStyles._valueOrDefault(value, this._defaultStyle.secondaryColor);\n\t}\n\n\t/**\n\t * Sets the outline color property. null defaults it to the default style's value.\n\t *\n\t * @type {libjass.Color}\n\t */\n\tset outlineColor(value: Color) {\n\t\tthis._outlineColor = SpanStyles._valueOrDefault(value, this._defaultStyle.outlineColor);\n\t}\n\n\t/**\n\t * Sets the shadow color property. null defaults it to the default style's value.\n\t *\n\t * @type {libjass.Color}\n\t */\n\tset shadowColor(value: Color) {\n\t\tthis._shadowColor = SpanStyles._valueOrDefault(value, this._defaultStyle.shadowColor);\n\t}\n\n\t/**\n\t * Gets the primary alpha property.\n\t *\n\t * @type {?number}\n\t */\n\tget primaryAlpha(): number {\n\t\treturn this._primaryAlpha;\n\t}\n\n\t/**\n\t * Sets the primary alpha property.\n\t *\n\t * @type {?number}\n\t */\n\tset primaryAlpha(value: number) {\n\t\tthis._primaryAlpha = value;\n\t}\n\n\t/**\n\t * Gets the secondary alpha property.\n\t *\n\t * @type {?number}\n\t */\n\tget secondaryAlpha(): number {\n\t\treturn this._secondaryAlpha;\n\t}\n\n\t/**\n\t * Sets the secondary alpha property.\n\t *\n\t * @type {?number}\n\t */\n\tset secondaryAlpha(value: number) {\n\t\tthis._secondaryAlpha = value;\n\t}\n\n\t/**\n\t * Sets the outline alpha property.\n\t *\n\t * @type {?number}\n\t */\n\tset outlineAlpha(value: number) {\n\t\tthis._outlineAlpha = value;\n\t}\n\n\t/**\n\t * Sets the shadow alpha property.\n\t *\n\t * @type {?number}\n\t */\n\tset shadowAlpha(value: number) {\n\t\tthis._shadowAlpha = value;\n\t}\n\n\tprivate static _valueOrDefault = <T>(newValue: T, defaultValue: T): T => ((newValue !== null) ? newValue : defaultValue);\n\n\t/**\n\t * @param {string} fontFamily\n\t * @param {number} lineHeight\n\t * @param {!HTMLDivElement} fontSizeElement\n\t * @return {number}\n\t */\n\tprivate static _getFontSize(fontFamily: string, lineHeight: number, fontSizeElement: HTMLDivElement): number {\n\t\tlet existingFontSizeMap = SpanStyles._fontSizeCache.get(fontFamily);\n\t\tif (existingFontSizeMap === undefined) {\n\t\t\tSpanStyles._fontSizeCache.set(fontFamily, existingFontSizeMap = new Map<number, number>());\n\t\t}\n\n\t\tlet existingFontSize = existingFontSizeMap.get(lineHeight);\n\t\tif (existingFontSize === undefined) {\n\t\t\tfontSizeElement.style.fontFamily = fontFamily;\n\t\t\tfontSizeElement.style.fontSize = `${ lineHeight }px`;\n\t\t\texistingFontSizeMap.set(lineHeight, existingFontSize = lineHeight * lineHeight / fontSizeElement.offsetHeight);\n\t\t}\n\n\t\treturn existingFontSize;\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Debug mode. When true, libjass logs some debug messages.\n *\n * @type {boolean}\n */\nexport let debugMode: boolean = false;\n\n/**\n * Verbose debug mode. When true, libjass logs some more debug messages. This setting is independent of {@link libjass.debugMode}\n *\n * @type {boolean}\n */\nexport let verboseMode: boolean = false;\n\n/**\n * Sets the debug mode.\n *\n * @param {boolean} value\n */\nexport function setDebugMode(value: boolean): void {\n\tdebugMode = value;\n}\n\n/**\n * Sets the verbose debug mode.\n *\n * @param {boolean} value\n */\nexport function setVerboseMode(value: boolean): void {\n\tverboseMode = value;\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Dialogue } from \"./dialogue\";\nimport { Style } from \"./style\";\nimport { ScriptProperties } from \"./script-properties\";\n\nimport { Format } from \"./misc\";\n\nimport { verboseMode } from \"../settings\";\n\nimport * as parser from \"../parser/index\";\nimport { parseLineIntoTypedTemplate } from \"../parser/misc\";\nimport { ReadableStream, TextDecoder, TextDecoderConstructor } from \"../parser/streams\";\n\nimport { Map } from \"../utility/map\";\nimport { Promise } from \"../utility/promise\";\n\ndeclare const global: {\n\tfetch?(url: string): Promise<{ body: ReadableStream }>;\n\tReadableStream?: { prototype: ReadableStream; };\n\tTextDecoder?: TextDecoderConstructor;\n};\n\n/**\n * This class represents an ASS script. It contains the {@link libjass.ScriptProperties}, an array of {@link libjass.Style}s, and an array of {@link libjass.Dialogue}s.\n */\nexport class ASS {\n\tprivate _properties: ScriptProperties = new ScriptProperties();\n\tprivate _styles: Map<string, Style> = new Map<string, Style>();\n\tprivate _dialogues: Dialogue[] = [];\n\n\tprivate _stylesFormatSpecifier: string[] = null;\n\tprivate _dialoguesFormatSpecifier: string[] = null;\n\n\t/**\n\t * The properties of this script.\n\t *\n\t * @type {!libjass.ScriptProperties}\n\t */\n\tget properties(): ScriptProperties {\n\t\treturn this._properties;\n\t}\n\n\t/**\n\t * The styles in this script.\n\t *\n\t * @type {!Map.<string, !libjass.Style>}\n\t */\n\tget styles(): Map<string, Style> {\n\t\treturn this._styles;\n\t}\n\n\t/**\n\t * The dialogues in this script.\n\t *\n\t * @type {!Array.<!libjass.Dialogue>}\n\t */\n\tget dialogues(): Dialogue[] {\n\t\treturn this._dialogues;\n\t}\n\n\t/**\n\t * The format specifier for the styles section.\n\t *\n\t * @type {!Array.<string>}\n\t */\n\tget stylesFormatSpecifier(): string[] {\n\t\treturn this._stylesFormatSpecifier;\n\t}\n\n\t/**\n\t * The format specifier for the styles section.\n\t *\n\t * @type {!Array.<string>}\n\t */\n\tget dialoguesFormatSpecifier(): string[] {\n\t\treturn this._dialoguesFormatSpecifier;\n\t}\n\n\t/**\n\t * The format specifier for the events section.\n\t *\n\t * @type {!Array.<string>}\n\t */\n\tset stylesFormatSpecifier(value: string[]) {\n\t\tthis._stylesFormatSpecifier = value;\n\t}\n\n\t/**\n\t * The format specifier for the events section.\n\t *\n\t * @type {!Array.<string>}\n\t */\n\tset dialoguesFormatSpecifier(value: string[]) {\n\t\tthis._dialoguesFormatSpecifier = value;\n\t}\n\n\tconstructor() {\n\t\t// Deprecated constructor argument\n\t\tif (arguments.length === 1) {\n\t\t\tthrow new Error(\"Constructor `new ASS(rawASS)` has been deprecated. Use `ASS.fromString(rawASS)` instead.\");\n\t\t}\n\t}\n\n\t/**\n\t * Add a style to this ASS script.\n\t *\n\t * @param {string} line The line from the script that contains the new style.\n\t */\n\taddStyle(line: string): void {\n\t\tconst styleLine = parseLineIntoTypedTemplate(line, this._stylesFormatSpecifier);\n\t\tif (styleLine === null || styleLine.type !== \"Style\") {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styleTemplate = styleLine.template;\n\n\t\tif (verboseMode) {\n\t\t\tlet repr = \"\";\n\t\t\tstyleTemplate.forEach((value, key) => repr += `${ key } = ${ value }, `);\n\t\t\tconsole.log(`Read style: ${ repr }`);\n\t\t}\n\n\t\t// Create the dialogue and add it to the dialogues array\n\t\tconst style = new Style(styleTemplate);\n\t\tthis._styles.set(style.name, style);\n\t}\n\n\t/**\n\t * Add an event to this ASS script.\n\t *\n\t * @param {string} line The line from the script that contains the new event.\n\t */\n\taddEvent(line: string): void {\n\t\tconst dialogueLine = parseLineIntoTypedTemplate(line, this._dialoguesFormatSpecifier);\n\t\tif (dialogueLine === null || dialogueLine.type !== \"Dialogue\") {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dialogueTemplate = dialogueLine.template;\n\n\t\tif (verboseMode) {\n\t\t\tlet repr = \"\";\n\t\t\tdialogueTemplate.forEach((value, key) => repr += `${ key } = ${ value }, `);\n\t\t\tconsole.log(`Read dialogue: ${ repr }`);\n\t\t}\n\n\t\t// Create the dialogue and add it to the dialogues array\n\t\tthis.dialogues.push(new Dialogue(dialogueTemplate, this));\n\t}\n\n\t/**\n\t * Creates an ASS object from the raw text of an ASS script.\n\t *\n\t * @param {string} raw The raw text of the script.\n\t * @param {number=0} type The type of the script. One of the {@link libjass.Format} constants.\n\t * @return {!Promise.<!libjass.ASS>}\n\t */\n\tstatic fromString(raw: string, type: Format = Format.ASS): Promise<ASS> {\n\t\treturn ASS.fromStream(new parser.StringStream(raw), type);\n\t}\n\n\t/**\n\t * Creates an ASS object from the given {@link libjass.parser.Stream}.\n\t *\n\t * @param {!libjass.parser.Stream} stream The stream to parse the script from\n\t * @param {number=0} type The type of the script. One of the {@link libjass.Format} constants.\n\t * @return {!Promise.<!libjass.ASS>} A promise that will be resolved with the ASS object when it has been fully parsed\n\t */\n\tstatic fromStream(stream: parser.Stream, type: Format = Format.ASS): Promise<ASS> {\n\t\tswitch (type) {\n\t\t\tcase Format.ASS:\n\t\t\t\treturn new parser.StreamParser(stream).ass;\n\t\t\tcase Format.SRT:\n\t\t\t\treturn new parser.SrtStreamParser(stream).ass;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Illegal value of type: ${ type }`);\n\t\t}\n\t}\n\n\t/**\n\t * Creates an ASS object from the given URL.\n\t *\n\t * @param {string} url The URL of the script.\n\t * @param {number=0} type The type of the script. One of the {@link libjass.Format} constants.\n\t * @return {!Promise.<!libjass.ASS>} A promise that will be resolved with the ASS object when it has been fully parsed\n\t */\n\tstatic fromUrl(url: string, type: Format = Format.ASS): Promise<ASS> {\n\t\tif (\n\t\t\ttypeof global.fetch === \"function\" &&\n\t\t\ttypeof global.ReadableStream === \"function\" && typeof global.ReadableStream.prototype.getReader === \"function\" &&\n\t\t\ttypeof global.TextDecoder === \"function\"\n\t\t) {\n\t\t\treturn global.fetch(url).then(response => ASS.fromReadableStream(response.body, \"utf-8\", type));\n\t\t}\n\n\t\tconst xhr = new XMLHttpRequest();\n\t\tconst result = ASS.fromStream(new parser.XhrStream(xhr), type);\n\t\txhr.open(\"GET\", url, true);\n\t\txhr.send();\n\t\treturn result;\n\t}\n\n\t/**\n\t * Creates an ASS object from the given ReadableStream.\n\t *\n\t * @param {!ReadableStream} stream\n\t * @param {string=\"utf-8\"} encoding\n\t * @param {number=0} type The type of the script. One of the {@link libjass.Format} constants.\n\t * @return {!Promise.<!libjass.ASS>} A promise that will be resolved with the ASS object when it has been fully parsed\n\t */\n\tstatic fromReadableStream(stream: ReadableStream, encoding: string = \"utf-8\", type: Format = Format.ASS): Promise<ASS> {\n\t\treturn ASS.fromStream(new parser.BrowserReadableStream(stream, encoding), type);\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ASS } from \"./ass\";\nimport { Style } from \"./style\";\n\nimport { valueOrDefault } from \"./misc\";\n\nimport { parse } from \"../parser/parse\";\n\nimport * as parts from \"../parts/index\";\n\nimport { debugMode } from \"../settings\";\n\nimport { Map } from \"../utility/map\";\n\n/**\n * This class represents a dialogue in a {@link libjass.ASS} script.\n *\n * @param {!Map.<string, string>} template The template object that contains the dialogue's properties. It is a map of the string values read from the ASS file.\n * @param {string} template[\"Style\"] The name of the default style of this dialogue\n * @param {string} template[\"Start\"] The start time\n * @param {string} template[\"End\"] The end time\n * @param {string} template[\"Layer\"] The layer number\n * @param {string} template[\"Text\"] The text of this dialogue\n * @param {ASS} ass The ASS object to which this dialogue belongs\n */\nexport class Dialogue {\n\tprivate static _lastDialogueId = -1;\n\n\tprivate _id: number;\n\n\tprivate _style: Style;\n\n\tprivate _start: number;\n\tprivate _end: number;\n\n\tprivate _layer: number;\n\tprivate _alignment: number;\n\n\tprivate _rawPartsString: string;\n\tprivate _parts: parts.Part[] = null;\n\n\tprivate _sub: HTMLDivElement = null;\n\n\tconstructor(template: Map<string, string>, ass: ASS) {\n\t\tthis._id = ++Dialogue._lastDialogueId;\n\n\t\tconst style = template.get(\"Style\");\n\t\tthis._style = ass.styles.get(style);\n\t\tif (this._style === undefined) {\n\t\t\tthrow new Error(`Unrecognized style ${ style }`);\n\t\t}\n\n\t\tthis._start = Dialogue._toTime(template.get(\"Start\"));\n\t\tthis._end = Dialogue._toTime(template.get(\"End\"));\n\n\t\tthis._layer = Math.max(valueOrDefault(template, \"Layer\", parseInt, value => !isNaN(value), \"0\"), 0);\n\n\t\tthis._rawPartsString = template.get(\"Text\");\n\t\tif (this._rawPartsString === undefined || this._rawPartsString === null || this._rawPartsString.constructor !== String) {\n\t\t\tthrow new Error(\"Dialogue doesn't have any text.\");\n\t\t}\n\t}\n\n\t/**\n\t * The unique ID of this dialogue. Auto-generated.\n\t *\n\t * @type {number}\n\t */\n\tget id(): number {\n\t\treturn this._id;\n\t}\n\n\t/**\n\t * The start time of this dialogue.\n\t *\n\t * @type {number}\n\t */\n\tget start(): number {\n\t\treturn this._start;\n\t}\n\n\t/**\n\t * The end time of this dialogue.\n\t *\n\t * @type {number}\n\t */\n\tget end(): number {\n\t\treturn this._end;\n\t}\n\n\t/**\n\t * The default style of this dialogue.\n\t *\n\t * @type {!libjass.Style}\n\t */\n\tget style(): Style {\n\t\treturn this._style;\n\t}\n\n\t/**\n\t * The alignment number of this dialogue.\n\t *\n\t * @type {number}\n\t */\n\tget alignment(): number {\n\t\tif (this._parts === null) {\n\t\t\tthis._parsePartsString();\n\t\t}\n\n\t\treturn this._alignment;\n\t}\n\n\t/**\n\t * The layer number of this dialogue.\n\t *\n\t * @type {number}\n\t */\n\tget layer(): number {\n\t\treturn this._layer;\n\t}\n\n\t/**\n\t * The {@link libjass.parts} of this dialogue.\n\t *\n\t * @type {!Array.<!libjass.parts.Part>}\n\t */\n\tget parts(): parts.Part[] {\n\t\tif (this._parts === null) {\n\t\t\tthis._parsePartsString();\n\t\t}\n\n\t\treturn this._parts;\n\t}\n\n\t/**\n\t * @return {string} A simple representation of this dialogue's properties and parts.\n\t */\n\ttoString(): string {\n\t\treturn `#${ this._id } [${ this._start.toFixed(3) }-${ this._end.toFixed(3) }] ${ (this._parts !== null) ? this._parts.join(\", \") : this._rawPartsString }`;\n\t}\n\n\t/**\n\t * Parses this dialogue's parts from the raw parts string.\n\t */\n\tprivate _parsePartsString(): void {\n\t\tthis._parts = <parts.Part[]>parse(this._rawPartsString, \"dialogueParts\");\n\n\t\tthis._alignment = this._style.alignment;\n\n\t\tthis._parts.forEach((part, index) => {\n\t\t\tif (part instanceof parts.Alignment) {\n\t\t\t\tthis._alignment = part.value;\n\t\t\t}\n\t\t\telse if (part instanceof parts.Move) {\n\t\t\t\tif (part.t1 === null || part.t2 === null) {\n\t\t\t\t\tthis._parts[index] =\n\t\t\t\t\t\tnew parts.Move(\n\t\t\t\t\t\t\tpart.x1, part.y1, part.x2, part.y2,\n\t\t\t\t\t\t\t0, this._end - this._start\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (part instanceof parts.Transform) {\n\t\t\t\tif (part.start === null || part.end === null || part.accel === null) {\n\t\t\t\t\tthis._parts[index] =\n\t\t\t\t\t\tnew parts.Transform(\n\t\t\t\t\t\t\t(part.start === null) ? 0 : part.start,\n\t\t\t\t\t\t\t(part.end === null) ? (this._end - this._start) : part.end,\n\t\t\t\t\t\t\t(part.accel === null) ? 1 : part.accel,\n\t\t\t\t\t\t\tpart.tags\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (debugMode) {\n\t\t\tconst possiblyIncorrectParses = this._parts.filter(part => part instanceof parts.Comment && part.value.indexOf(\"\\\\\") !== -1);\n\t\t\tif (possiblyIncorrectParses.length > 0) {\n\t\t\t\tconsole.warn(\n`Possible incorrect parse:\n${ this._rawPartsString }\nwas parsed as\n${ this.toString() }\nThe possibly incorrect parses are:\n${ possiblyIncorrectParses.join(\"\\n\") }`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Converts this string into the number of seconds it represents. This string must be in the form of hh:mm:ss.MMM\n\t *\n\t * @param {string} str\n\t * @return {number}\n\t */\n\tprivate static _toTime(str: string): number {\n\t\treturn str.split(\":\").reduce<number>((previousValue, currentValue) => previousValue * 60 + parseFloat(currentValue), 0);\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Map } from \"../utility/map\";\n\n/**\n * The format of the string passed to {@link libjass.ASS.fromString}\n */\nexport enum Format {\n\tASS,\n\tSRT,\n}\n\n/**\n * The wrapping style defined in the {@link libjass.ScriptProperties}\n */\nexport enum WrappingStyle {\n\tSmartWrappingWithWiderTopLine = 0,\n\tSmartWrappingWithWiderBottomLine = 3,\n\tEndOfLineWrapping = 1,\n\tNoLineWrapping = 2,\n}\n\n/**\n * The border style defined in the {@link libjass.Style} properties.\n */\nexport enum BorderStyle {\n\tOutline = 1,\n\tOpaqueBox = 3,\n}\n\n/**\n * A property.\n */\nexport interface Property {\n\t/**\n\t * @type {string}\n\t */\n\tname: string;\n\n\t/**\n\t * @type {string}\n\t */\n\tvalue: string;\n}\n\n/**\n * A template object with a particular type.\n */\nexport interface TypedTemplate {\n\t/**\n\t * @type {string}\n\t */\n\ttype: string;\n\n\t/**\n\t * @type {!Map.<string, string>}\n\t */\n\ttemplate: Map<string, string>;\n}\n\n/**\n * @param {!Map.<string, string>} template\n * @param {string} key\n * @param {function(string):T} converter\n * @param {?function(T):boolean} validator\n * @param {T} defaultValue\n * @return {T}\n */\nexport function valueOrDefault<T>(template: Map<string, string>, key: string, converter: (str: string) => T, validator: (value: T) => boolean, defaultValue: string): T {\n\tconst value = template.get(key);\n\tif (value === undefined) {\n\t\treturn converter(defaultValue);\n\t}\n\n\ttry {\n\t\tconst numValue = converter(value);\n\n\t\tif (validator !== null && !validator(numValue)) {\n\t\t\tthrow new Error(\"Validation failed.\");\n\t\t}\n\n\t\treturn numValue;\n\t}\n\tcatch (ex) {\n\t\tthrow new Error(`Property ${ key } has invalid value ${ value } - ${ ex.stack }`);\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WrappingStyle } from \"./misc\";\n\n/**\n * This class represents the properties of a {@link libjass.ASS} script.\n */\nexport class ScriptProperties {\n\tprivate _resolutionX: number;\n\tprivate _resolutionY: number;\n\tprivate _wrappingStyle: WrappingStyle;\n\tprivate _scaleBorderAndShadow: boolean;\n\n\t/**\n\t * The horizontal script resolution.\n\t *\n\t * @type {number}\n\t */\n\tget resolutionX(): number {\n\t\treturn this._resolutionX;\n\t}\n\n\t/**\n\t * The horizontal script resolution.\n\t *\n\t * @type {number}\n\t */\n\tset resolutionX(value: number) {\n\t\tthis._resolutionX = value;\n\t}\n\n\t/**\n\t * The vertical script resolution.\n\t *\n\t * @type {number}\n\t */\n\tget resolutionY(): number {\n\t\treturn this._resolutionY;\n\t}\n\n\t/**\n\t * The vertical script resolution.\n\t *\n\t * @type {number}\n\t */\n\tset resolutionY(value: number) {\n\t\tthis._resolutionY = value;\n\t}\n\n\t/**\n\t * The wrap style. One of the {@link libjass.WrappingStyle} constants.\n\t *\n\t * @type {number}\n\t */\n\tget wrappingStyle(): WrappingStyle {\n\t\treturn this._wrappingStyle;\n\t}\n\n\t/**\n\t * The wrap style. One of the {@link libjass.WrappingStyle} constants.\n\t *\n\t * @type {number}\n\t */\n\tset wrappingStyle(value: WrappingStyle) {\n\t\tthis._wrappingStyle = value;\n\t}\n\n\t/**\n\t * Whether to scale outline widths and shadow depths from script resolution to video resolution or not. If true, widths and depths are scaled.\n\t *\n\t * @type {boolean}\n\t */\n\tget scaleBorderAndShadow(): boolean {\n\t\treturn this._scaleBorderAndShadow;\n\t}\n\n\t/**\n\t * Whether to scale outline widths and shadow depths from script resolution to video resolution or not. If true, widths and depths are scaled.\n\t *\n\t * @type {boolean}\n\t */\n\tset scaleBorderAndShadow(value: boolean) {\n\t\tthis._scaleBorderAndShadow = value;\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { valueOrDefault, BorderStyle } from \"./misc\";\n\nimport { parse } from \"../parser/parse\";\n\nimport { Color } from \"../parts/index\";\n\nimport { Map } from \"../utility/map\";\n\n/**\n * This class represents a single global style declaration in a {@link libjass.ASS} script. The styles can be obtained via the {@link libjass.ASS.styles} property.\n *\n * @param {!Map.<string, string>} template The template object that contains the style's properties. It is a map of the string values read from the ASS file.\n * @param {string} template[\"Name\"] The name of the style\n * @param {string} template[\"Italic\"] -1 if the style is italicized\n * @param {string} template[\"Bold\"] -1 if the style is bold\n * @param {string} template[\"Underline\"] -1 if the style is underlined\n * @param {string} template[\"StrikeOut\"] -1 if the style is struck-through\n * @param {string} template[\"Fontname\"] The name of the font\n * @param {string} template[\"Fontsize\"] The size of the font\n * @param {string} template[\"ScaleX\"] The horizontal scaling of the font\n * @param {string} template[\"ScaleY\"] The vertical scaling of the font\n * @param {string} template[\"Spacing\"] The letter spacing of the font\n * @param {string} template[\"PrimaryColour\"] The primary color\n * @param {string} template[\"OutlineColour\"] The outline color\n * @param {string} template[\"BackColour\"] The shadow color\n * @param {string} template[\"Outline\"] The outline thickness\n * @param {string} template[\"Shadow\"] The shadow depth\n * @param {string} template[\"Alignment\"] The alignment number\n * @param {string} template[\"MarginL\"] The left margin\n * @param {string} template[\"MarginR\"] The right margin\n * @param {string} template[\"MarginV\"] The vertical margin\n */\nexport class Style {\n\tprivate _name: string;\n\n\tprivate _italic: boolean;\n\tprivate _bold: boolean;\n\tprivate _underline: boolean;\n\tprivate _strikeThrough: boolean;\n\n\tprivate _fontName: string;\n\tprivate _fontSize: number;\n\n\tprivate _fontScaleX: number;\n\tprivate _fontScaleY: number;\n\n\tprivate _letterSpacing: number;\n\n\tprivate _rotationZ: number;\n\n\tprivate _primaryColor: Color;\n\tprivate _secondaryColor: Color;\n\tprivate _outlineColor: Color;\n\tprivate _shadowColor: Color;\n\n\tprivate _outlineThickness: number;\n\tprivate _borderStyle: BorderStyle;\n\n\tprivate _shadowDepth: number;\n\n\tprivate _alignment: number;\n\n\tprivate _marginLeft: number;\n\tprivate _marginRight: number;\n\tprivate _marginVertical: number;\n\n\tconstructor(template: Map<string, string>) {\n\t\tthis._name = template.get(\"Name\");\n\t\tif (this._name === undefined || this._name === null || this._name.constructor !== String) {\n\t\t\tthrow new Error(\"Style doesn't have a name.\");\n\t\t}\n\n\t\tthis._italic = template.get(\"Italic\") === \"-1\";\n\t\tthis._bold = template.get(\"Bold\") === \"-1\";\n\t\tthis._underline = template.get(\"Underline\") === \"-1\";\n\t\tthis._strikeThrough = template.get(\"StrikeOut\") === \"-1\";\n\n\t\tthis._fontName = template.get(\"Fontname\");\n\t\tthis._fontSize = valueOrDefault(template, \"Fontsize\", parseFloat, value => !isNaN(value), \"50\");\n\n\t\tthis._fontScaleX = valueOrDefault(template, \"ScaleX\", parseFloat, value => !isNaN(value), \"100\") / 100;\n\t\tthis._fontScaleY = valueOrDefault(template, \"ScaleY\", parseFloat, value => !isNaN(value), \"100\") / 100;\n\n\t\tthis._letterSpacing = valueOrDefault(template, \"Spacing\", parseFloat, value => !isNaN(value), \"0\");\n\n\t\tthis._rotationZ = valueOrDefault(template, \"Angle\", parseFloat, value => !isNaN(value), \"0\");\n\n\t\tthis._primaryColor = valueOrDefault(template, \"PrimaryColour\", str => <Color>parse(str, \"colorWithAlpha\"), null, \"&H0000FFFF\");\n\t\tthis._secondaryColor = valueOrDefault(template, \"SecondaryColour\", str => <Color>parse(str, \"colorWithAlpha\"), null, \"&H00000000\");\n\t\tthis._outlineColor = valueOrDefault(template, \"OutlineColour\", str => <Color>parse(str, \"colorWithAlpha\"), null, \"&H00000000\");\n\t\tthis._shadowColor = valueOrDefault(template, \"BackColour\", str => <Color>parse(str, \"colorWithAlpha\"), null, \"&H00000000\");\n\n\t\tthis._outlineThickness = valueOrDefault(template, \"Outline\", parseFloat, value => !isNaN(value), \"1\");\n\t\tthis._borderStyle = valueOrDefault(template, \"BorderStyle\", parseInt, value => !isNaN(value), \"1\");\n\n\t\tthis._shadowDepth = valueOrDefault(template, \"Shadow\", parseFloat, value => !isNaN(value), \"1\");\n\n\t\tthis._alignment = valueOrDefault(template, \"Alignment\", parseInt, value => !isNaN(value), \"2\");\n\n\t\tthis._marginLeft = valueOrDefault(template, \"MarginL\", parseFloat, value => !isNaN(value), \"80\");\n\t\tthis._marginRight = valueOrDefault(template, \"MarginR\", parseFloat, value => !isNaN(value), \"80\");\n\t\tthis._marginVertical = valueOrDefault(template, \"MarginV\", parseFloat, value => !isNaN(value), \"35\");\n\t}\n\n\t/**\n\t * The name of this style.\n\t *\n\t * @type {string}\n\t */\n\tget name(): string {\n\t\treturn this._name;\n\t}\n\n\t/**\n\t * Whether this style is italicized or not.\n\t *\n\t * @type {string}\n\t */\n\tget italic(): boolean {\n\t\treturn this._italic;\n\t}\n\n\t/**\n\t * Whether this style is bold or not.\n\t *\n\t * @type {boolean}\n\t */\n\tget bold(): boolean {\n\t\treturn this._bold;\n\t}\n\n\t/**\n\t * Whether this style is underlined or not.\n\t *\n\t * @type {boolean}\n\t */\n\tget underline(): boolean {\n\t\treturn this._underline;\n\t}\n\n\t/**\n\t * Whether this style is struck-through or not.\n\t *\n\t * @type {boolean}\n\t */\n\tget strikeThrough(): boolean {\n\t\treturn this._strikeThrough;\n\t}\n\n\t/**\n\t * The name of this style's font.\n\t *\n\t * @type {string}\n\t */\n\tget fontName(): string {\n\t\treturn this._fontName;\n\t}\n\n\t/**\n\t * The size of this style's font.\n\t *\n\t * @type {number}\n\t */\n\tget fontSize(): number {\n\t\treturn this._fontSize;\n\t}\n\n\t/**\n\t * The horizontal scaling of this style's font.\n\t *\n\t * @type {number}\n\t */\n\tget fontScaleX(): number {\n\t\treturn this._fontScaleX;\n\t}\n\n\t/**\n\t * The vertical scaling of this style's font.\n\t *\n\t * @type {number}\n\t */\n\tget fontScaleY(): number {\n\t\treturn this._fontScaleY;\n\t}\n\n\t/**\n\t * The letter spacing scaling of this style's font.\n\t *\n\t * @type {number}\n\t */\n\tget letterSpacing(): number {\n\t\treturn this._letterSpacing;\n\t}\n\n\t/**\n\t * The default Z-rotation of this style.\n\t *\n\t * @type {number}\n\t */\n\tget rotationZ(): number {\n\t\treturn this._rotationZ;\n\t}\n\n\t/**\n\t * The color of this style's font.\n\t *\n\t * @type {!libjass.parts.Color}\n\t */\n\tget primaryColor(): Color {\n\t\treturn this._primaryColor;\n\t}\n\n\t/**\n\t * The alternate color of this style's font, used in karaoke.\n\t *\n\t * @type {!libjass.parts.Color}\n\t */\n\tget secondaryColor(): Color {\n\t\treturn this._secondaryColor;\n\t}\n\n\t/**\n\t * The color of this style's outline.\n\t *\n\t * @type {!libjass.parts.Color}\n\t */\n\tget outlineColor(): Color {\n\t\treturn this._outlineColor;\n\t}\n\n\t/**\n\t * The color of this style's shadow.\n\t *\n\t * @type {!libjass.parts.Color}\n\t */\n\tget shadowColor(): Color {\n\t\treturn this._shadowColor;\n\t}\n\n\t/**\n\t * The thickness of this style's outline.\n\t *\n\t * @type {number}\n\t */\n\tget outlineThickness(): number {\n\t\treturn this._outlineThickness;\n\t}\n\n\t/**\n\t * The border style of this style.\n\t *\n\t * @type {number}\n\t */\n\tget borderStyle(): BorderStyle {\n\t\treturn this._borderStyle;\n\t}\n\n\t/**\n\t * The depth of this style's shadow.\n\t *\n\t * @type {number}\n\t */\n\tget shadowDepth(): number {\n\t\treturn this._shadowDepth;\n\t}\n\n\t/**\n\t * The alignment of dialogues of this style.\n\t *\n\t * @type {number}\n\t */\n\tget alignment(): number {\n\t\treturn this._alignment;\n\t}\n\n\t/**\n\t * The left margin of dialogues of this style.\n\t *\n\t * @type {number}\n\t */\n\tget marginLeft(): number {\n\t\treturn this._marginLeft;\n\t}\n\n\t/**\n\t * The right margin of dialogues of this style.\n\t *\n\t * @type {number}\n\t */\n\tget marginRight(): number {\n\t\treturn this._marginRight;\n\t}\n\n\t/**\n\t * The vertical margin of dialogues of this style.\n\t *\n\t * @type {number}\n\t */\n\tget marginVertical(): number {\n\t\treturn this._marginVertical;\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Class inheritance shim.\n *\n * @param {!Function} derived\n * @param {!Function} base\n */\nexport function __extends(derived: any, base: any): void {\n\tfor (const property in base) {\n\t\tif (base.hasOwnProperty(property)) {\n\t\t\tderived[property] = base[property];\n\t\t}\n\t}\n\n\tfunction __() {\n\t\tthis.constructor = derived;\n\t}\n\n\t__.prototype = base.prototype;\n\n\tderived.prototype = new (<any>__)();\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Map implementation for browsers that don't support it. Only supports keys which are of Number or String type, or which have a property called \"id\".\n *\n * Keys and values are stored as properties of an object, with property names derived from the key type.\n *\n * @param {!Array.<!Array.<*>>=} iterable Only an array of elements (where each element is a 2-tuple of key and value) is supported.\n */\nclass SimpleMap<K, V> {\n\tprivate _keys: { [key: string]: K };\n\tprivate _values: { [key: string]: V };\n\tprivate _size: number;\n\n\tconstructor(iterable?: [K, V][]) {\n\t\tthis.clear();\n\n\t\tif (iterable === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!Array.isArray(iterable)) {\n\t\t\tthrow new Error(\"Non-array iterables are not supported by the SimpleMap constructor.\");\n\t\t}\n\n\t\tfor (let element of iterable) {\n\t\t\tthis.set(element[0], element[1]);\n\t\t}\n\t}\n\n\t/**\n\t * @param {K} key\n\t * @return {V}\n\t */\n\tget(key: K): V {\n\t\tconst property = this._keyToProperty(key);\n\n\t\tif (property === null) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this._values[property];\n\t}\n\n\t/**\n\t * @param {K} key\n\t * @return {boolean}\n\t */\n\thas(key: K): boolean {\n\t\tconst property = this._keyToProperty(key);\n\n\t\tif (property === null) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn property in this._keys;\n\t}\n\n\t/**\n\t * @param {K} key\n\t * @param {V} value\n\t * @return {libjass.Map.<K, V>} This map\n\t */\n\tset(key: K, value: V): Map<K, V> {\n\t\tconst property = this._keyToProperty(key);\n\n\t\tif (property === null) {\n\t\t\tthrow new Error(\"This Map implementation only supports Number and String keys, or keys with an id property.\");\n\t\t}\n\n\t\tif (!(property in this._keys)) {\n\t\t\tthis._size++;\n\t\t}\n\n\t\tthis._keys[property] = key;\n\t\tthis._values[property] = value;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * @param {K} key\n\t * @return {boolean} true if the key was present before being deleted, false otherwise\n\t */\n\tdelete(key: K): boolean {\n\t\tconst property = this._keyToProperty(key);\n\n\t\tif (property === null) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst result = property in this._keys;\n\n\t\tif (result) {\n\t\t\tdelete this._keys[property];\n\t\t\tdelete this._values[property];\n\t\t\tthis._size--;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t */\n\tclear(): void {\n\t\tthis._keys = Object.create(null);\n\t\tthis._values = Object.create(null);\n\t\tthis._size = 0;\n\t}\n\n\t/**\n\t * @param {function(V, K, libjass.Map.<K, V>)} callbackfn A function that is called with each key and value in the map.\n\t * @param {*} thisArg\n\t */\n\tforEach(callbackfn: (value: V, index: K, map: Map<K, V>) => void, thisArg?: any): void {\n\t\tfor (let property of Object.keys(this._keys)) {\n\t\t\tcallbackfn.call(thisArg, this._values[property], this._keys[property], this);\n\t\t}\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * Converts the given key into a property name for the internal map.\n\t *\n\t * @param {K} key\n\t * @return {string}\n\t */\n\tprivate _keyToProperty(key: K): string {\n\t\tif (typeof key === \"number\") {\n\t\t\treturn `#${ key }`;\n\t\t}\n\n\t\tif (typeof key === \"string\") {\n\t\t\treturn `'${ key }`;\n\t\t}\n\n\t\tif ((<any>key).id !== undefined) {\n\t\t\treturn `!${ (<any>key).id }`;\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\ndeclare const global: {\n\tMap?: typeof SimpleMap;\n};\n\nexport interface Map<K, V> {\n\t/**\n\t * @param {K} key\n\t * @return {V}\n\t */\n\tget(key: K): V;\n\n\t/**\n\t * @param {K} key\n\t * @return {boolean}\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * @param {K} key\n\t * @param {V} value\n\t * @return {libjass.Map.<K, V>} This map\n\t */\n\tset(key: K, value?: V): Map<K, V>;\n\n\t/**\n\t * @param {K} key\n\t * @return {boolean} true if the key was present before being deleted, false otherwise\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t */\n\tclear(): void;\n\n\t/**\n\t * @param {function(V, K, libjass.Map.<K, V>)} callbackfn A function that is called with each key and value in the map.\n\t * @param {*} thisArg\n\t */\n\tforEach(callbackfn: (value: V, index: K, map: Map<K, V>) => void, thisArg?: any): void;\n\n\t/**\n\t * @type {number}\n\t */\n\tsize: number;\n}\n\n/**\n * Set to the global implementation of Map if the environment has one, else set to {@link ./utility/map.SimpleMap}\n *\n * Set it to null to force {@link ./utility/map.SimpleMap} to be used even if a global Map is present.\n *\n * @type {function(new:Map, !Array.<!Array.<*>>=)}\n */\nexport var Map: {\n\tnew <K, V>(iterable?: [K, V][]): Map<K, V>;\n\tprototype: Map<any, any>;\n} = global.Map;\n\nif (Map === undefined || typeof Map.prototype.forEach !== \"function\" || (() => {\n\ttry {\n\t\treturn new Map([[1, \"foo\"], [2, \"bar\"]]).size !== 2;\n\t}\n\tcatch (ex) {\n\t\treturn true;\n\t}\n})()) {\n\tMap = SimpleMap;\n}\n\n/**\n * Sets the Map implementation used by libjass to the provided one. If null, {@link ./utility/map.SimpleMap} is used.\n *\n * @param {?function(new:Map, !Array.<!Array.<*>>=)} value\n */\nexport function setImplementation(value: typeof Map): void {\n\tif (value !== null) {\n\t\tMap = value;\n\t}\n\telse {\n\t\tMap = SimpleMap;\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Adds properties of the given mixins' prototypes to the given class's prototype.\n *\n * @param {!*} clazz\n * @param {!Array.<*>} mixins\n */\nexport function mixin(clazz: any, mixins: any[]): void {\n\tfor (let mixin of mixins) {\n\t\tfor (let name of Object.getOwnPropertyNames(mixin.prototype)) {\n\t\t\tclazz.prototype[name] = mixin.prototype[name];\n\t\t}\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndeclare const global: {\n\tPromise?: typeof SimplePromise;\n\tMutationObserver?: typeof MutationObserver;\n\tWebkitMutationObserver?: typeof MutationObserver;\n\tprocess?: {\n\t\tnextTick(callback: () => void): void;\n\t}\n};\n\n/**\n * Promise implementation for browsers that don't support it.\n *\n * @param {function(function(T), function(*))} resolver\n */\nclass SimplePromise<T> {\n\tprivate _state: SimplePromiseState = SimplePromiseState.PENDING;\n\n\tprivate _thens: { propagateFulfilling: (value: T) => void; propagateRejection: (reason: any) => void }[] = [];\n\tprivate _propagateIsPending: boolean = false;\n\n\tprivate _alreadyFulfilledValue: T = null;\n\tprivate _alreadyRejectedReason: any = null;\n\n\tconstructor(resolver: (resolve: (value: T | Promise<T>) => void, reject: (reason: any) => void) => void) {\n\t\ttry {\n\t\t\tresolver(value => this._resolve(value), reason => this._reject(reason));\n\t\t}\n\t\tcatch (ex) {\n\t\t\tthis._reject(ex);\n\t\t}\n\t}\n\n\t/**\n\t * @param {?function(T):(U|Promise.<U>)} fulfilledHandler\n\t * @param {?function(*):(U|Promise.<U>)} rejectedHandler\n\t * @return {!Promise.<U>}\n\t */\n\tthen<U>(fulfilledHandler?: (value: T) => U | Promise<U>, rejectedHandler?: (reason: any) => U | Promise<U>): Promise<U> {\n\t\tfulfilledHandler = (typeof fulfilledHandler === \"function\") ? fulfilledHandler : null;\n\t\trejectedHandler = (typeof rejectedHandler === \"function\") ? rejectedHandler : null;\n\n\t\tif (fulfilledHandler === null && rejectedHandler === null) {\n\t\t\treturn <any>this;\n\t\t}\n\n\t\tif (fulfilledHandler === null) {\n\t\t\tfulfilledHandler = value => <U><any>value;\n\t\t}\n\n\t\tif (rejectedHandler === null) {\n\t\t\trejectedHandler = (reason): U => { throw reason; };\n\t\t}\n\n\t\tconst result = new Promise<U>((resolve, reject) => {\n\t\t\tthis._thens.push({\n\t\t\t\tpropagateFulfilling: value => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresolve(fulfilledHandler(value));\n\t\t\t\t\t}\n\t\t\t\t\tcatch (ex) {\n\t\t\t\t\t\treject(ex);\n\t\t\t\t\t}\n\t\t\t\t}, propagateRejection: reason => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresolve(rejectedHandler(reason));\n\t\t\t\t\t}\n\t\t\t\t\tcatch (ex) {\n\t\t\t\t\t\treject(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tthis._propagateResolution();\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * @param {function(*):(T|Promise.<T>)} rejectedHandler\n\t * @return {!Promise.<T>}\n\t */\n\tcatch(rejectedHandler?: (reason: any) => T | Promise<T>): Promise<T> {\n\t\treturn this.then(null, rejectedHandler);\n\t}\n\n\t/**\n\t * @return {boolean}\n\t */\n\tisFulfilled(): boolean {\n\t\treturn this._state === SimplePromiseState.FULFILLED;\n\t}\n\n\t/**\n\t * @return {boolean}\n\t */\n\tisRejected(): boolean {\n\t\treturn this._state === SimplePromiseState.REJECTED;\n\t}\n\n\t/**\n\t * @return {boolean}\n\t */\n\tisPending(): boolean {\n\t\treturn this._state === SimplePromiseState.PENDING;\n\t}\n\n\t/**\n\t * @return {T}\n\t */\n\tvalue(): T {\n\t\tif (this._state !== SimplePromiseState.FULFILLED) {\n\t\t\tthrow new Error(\"This promise is not in FULFILLED state.\");\n\t\t}\n\n\t\treturn this._alreadyFulfilledValue;\n\t}\n\n\t/**\n\t * @return {*}\n\t */\n\treason(): any {\n\t\tif (this._state !== SimplePromiseState.REJECTED) {\n\t\t\tthrow new Error(\"This promise is not in FULFILLED state.\");\n\t\t}\n\n\t\treturn this._alreadyRejectedReason;\n\t}\n\n\t/**\n\t * @param {T|!Promise.<T>} value\n\t * @return {!Promise.<T>}\n\t */\n\tstatic resolve<T>(value: T | Promise<T>): Promise<T> {\n\t\tif (value instanceof SimplePromise) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn new Promise<T>(resolve => resolve(value));\n\t}\n\n\t/**\n\t * @param {!Array.<T|!Promise.<T>>} values\n\t * @return {!Promise.<!Array.<T>>}\n\t */\n\tstatic all<T>(values: (T | Promise<T>)[]): Promise<T[]> {\n\t\treturn new Promise<T[]>((resolve, reject) => {\n\t\t\tconst result: T[] = [];\n\n\t\t\tlet numUnresolved = values.length;\n\t\t\tif (numUnresolved === 0) {\n\t\t\t\tresolve(result);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvalues.forEach((value, index) => Promise.resolve(value).then(value => {\n\t\t\t\tresult[index] = value;\n\t\t\t\tnumUnresolved--;\n\n\t\t\t\tif (numUnresolved === 0) {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\t\t\t}), reject);\n\t\t});\n\t}\n\n\t/**\n\t * @param {T|!Promise.<T>} value\n\t */\n\tprivate _resolve(value: T | Promise<T>): void {\n\t\tlet alreadyCalled = false;\n\n\t\ttry {\n\t\t\tif (value === this) {\n\t\t\t\tthrow new TypeError(\"2.3.1\");\n\t\t\t}\n\n\t\t\tconst thenMethod = SimplePromise._getThenMethod<T>(value);\n\t\t\tif (thenMethod === null) {\n\t\t\t\tthis._fulfill(<T>value);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthenMethod.call(\n\t\t\t\t<Promise<T>>value,\n\t\t\t\t(value: T) => {\n\t\t\t\t\tif (alreadyCalled) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\talreadyCalled = true;\n\n\t\t\t\t\tthis._resolve(value);\n\t\t\t\t},\n\t\t\t\t(reason: any) => {\n\t\t\t\t\tif (alreadyCalled) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\talreadyCalled = true;\n\n\t\t\t\t\tthis._reject(reason);\n\t\t\t\t});\n\t\t}\n\t\tcatch (ex) {\n\t\t\tif (alreadyCalled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._reject(ex);\n\t\t}\n\t}\n\n\t/**\n\t * @param {T} value\n\t */\n\tprivate _fulfill(value: T): void {\n\t\tif (this._state !== SimplePromiseState.PENDING) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._state = SimplePromiseState.FULFILLED;\n\t\tthis._alreadyFulfilledValue = value;\n\n\t\tthis._propagateResolution();\n\t}\n\n\t/**\n\t * @param {*} reason\n\t */\n\tprivate _reject(reason: any): void {\n\t\tif (this._state !== SimplePromiseState.PENDING) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._state = SimplePromiseState.REJECTED;\n\t\tthis._alreadyRejectedReason = reason;\n\n\t\tthis._propagateResolution();\n\t}\n\n\t/**\n\t * @param {!*} obj\n\t * @return {?function(function(T):(T|!Promise.<T>), function(*):(T|!Promise.<T>)):!Promise.<T>}\n\t */\n\tprivate static _getThenMethod<T>(obj: any): (fulfilledHandler: (value: T) => T | Promise<T>, rejectedHandler: (reason: any) => T | Promise<T>) => Promise<T> {\n\t\tif (typeof obj !== \"object\" && typeof obj !== \"function\") {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (obj === null || obj === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst then: any = obj.then;\n\t\tif (typeof then !== \"function\") {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn then;\n\t}\n\n\t/**\n\t * Propagates the result of the current promise to all its children.\n\t */\n\tprivate _propagateResolution(): void {\n\t\tif (this._state === SimplePromiseState.PENDING) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._propagateIsPending) {\n\t\t\treturn;\n\t\t}\n\t\tthis._propagateIsPending = true;\n\n\t\tSimplePromise._nextTick(() => {\n\t\t\tthis._propagateIsPending = false;\n\n\t\t\tif (this._state === SimplePromiseState.FULFILLED) {\n\t\t\t\twhile (this._thens.length > 0) {\n\t\t\t\t\tconst nextThen = this._thens.shift();\n\t\t\t\t\tnextThen.propagateFulfilling(this._alreadyFulfilledValue);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this._state === SimplePromiseState.REJECTED) {\n\t\t\t\twhile (this._thens.length > 0) {\n\t\t\t\t\tconst nextThen = this._thens.shift();\n\t\t\t\t\tnextThen.propagateRejection(this._alreadyRejectedReason);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t// Based on https://github.com/petkaantonov/bluebird/blob/1b1467b95442c12378d0ea280ede61d640ab5510/src/schedule.js\n\tprivate static _nextTick: (callback: () => void) => void = (function () {\n\t\tconst MutationObserver = global.MutationObserver || global.WebkitMutationObserver;\n\t\tif (global.process !== undefined && typeof global.process.nextTick === \"function\") {\n\t\t\treturn (callback: () => void) => {\n\t\t\t\tglobal.process.nextTick(callback);\n\t\t\t};\n\t\t}\n\t\telse if (MutationObserver !== undefined) {\n\t\t\tconst pending: (() => void)[] = [];\n\t\t\tlet currentlyPending = false;\n\n\t\t\tconst div = document.createElement(\"div\");\n\n\t\t\tconst observer = new MutationObserver(() => {\n\t\t\t\tconst processing = pending.splice(0, pending.length);\n\n\t\t\t\tfor (let callback of processing) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\n\t\t\t\tcurrentlyPending = false;\n\n\t\t\t\tif (pending.length > 0) {\n\t\t\t\t\tdiv.classList.toggle(\"foo\");\n\t\t\t\t\tcurrentlyPending = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tobserver.observe(div, { attributes: true });\n\n\t\t\treturn (callback: () => void) => {\n\t\t\t\tpending.push(callback);\n\n\t\t\t\tif (!currentlyPending) {\n\t\t\t\t\tdiv.classList.toggle(\"foo\");\n\t\t\t\t\tcurrentlyPending = true;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn (callback: () => void) => setTimeout(callback, 0);\n\t\t}\n\t})();\n}\n\n/**\n * The state of the {@link ./utility/promise.SimplePromise}\n */\nenum SimplePromiseState {\n\tPENDING = 0,\n\tFULFILLED = 1,\n\tREJECTED = 2,\n}\n\nexport interface Promise<T> {\n\t/**\n\t * @param {?function(T):(U|Promise.<U>)} fulfilledHandler\n\t * @param {?function(*):(U|Promise.<U>)} rejectedHandler\n\t * @return {!Promise.<U>}\n\t */\n\tthen<U>(fulfilledHandler?: (value: T) => U | Promise<U>, rejectedHandler?: (reason: any) => U | Promise<U>): Promise<U>;\n\n\t/**\n\t * @param {function(*):(T|Promise.<T>)} rejectedHandler\n\t * @return {!Promise.<T>}\n\t */\n\tcatch(rejectedHandler?: (reason: any) => T | Promise<T>): Promise<T>\n}\n\n/**\n * Set to the global implementation of Promise if the environment has one, else set to {@link ./utility/promise.SimplePromise}\n *\n * Set it to null to force {@link ./utility/promise.SimplePromise} to be used even if a global Promise is present.\n *\n * @type {function(new:Promise)}\n */\nexport var Promise: {\n\tnew <T>(init: (resolve: (value?: T | Promise<T>) => void, reject: (reason?: any) => void) => void): Promise<T>;\n\tprototype: Promise<any>;\n\tresolve<T>(value: T | Promise<T>): Promise<T>;\n\tall<T>(values: (T | Promise<T>)[]): Promise<T[]>;\n} = global.Promise;\n\nif (Promise === undefined) {\n\tPromise = SimplePromise;\n}\n\n/**\n * Sets the Promise implementation used by libjass to the provided one. If null, {@link ./utility/promise.SimplePromise} is used.\n *\n * @param {?function(new:Promise)} value\n */\nexport function setImplementation(value: typeof Promise): void {\n\tif (value !== null) {\n\t\tPromise = value;\n\t}\n\telse {\n\t\tPromise = SimplePromise;\n\t}\n}\n\n/**\n * A deferred promise.\n */\nexport class DeferredPromise<T> {\n\tprivate _promise: Promise<T>;\n\tprivate _resolve: (value: T) => void;\n\tprivate _reject: (reason: any) => void;\n\n\tconstructor() {\n\t\tthis._promise = new Promise<T>((resolve, reject) => {\n\t\t\tthis._resolve = resolve;\n\t\t\tthis._reject = reject;\n\t\t});\n\t}\n\n\t/**\n\t * @type {!Promise.<T>}\n\t */\n\tget promise(): Promise<T> {\n\t\treturn this._promise;\n\t}\n\n\t/**\n\t * @param {T} value\n\t */\n\tresolve(value: T): void {\n\t\tthis._resolve(value);\n\t}\n\n\t/**\n\t * @param {*} reason\n\t */\n\treject(reason: any): void {\n\t\tthis._reject(reason);\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Set implementation for browsers that don't support it. Only supports Number and String elements.\n *\n * Elements are stored as properties of an object, with names derived from their type.\n *\n * @param {!Array.<T>=} iterable Only an array of values is supported.\n */\nclass SimpleSet<T> {\n\tprivate _elements: { [key: string]: T };\n\tprivate _size: number;\n\n\tconstructor(iterable?: T[]) {\n\t\tthis.clear();\n\n\t\tif (iterable === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!Array.isArray(iterable)) {\n\t\t\tthrow new Error(\"Non-array iterables are not supported by the SimpleSet constructor.\");\n\t\t}\n\n\t\tfor (let value of iterable) {\n\t\t\tthis.add(value);\n\t\t}\n\t}\n\n\t/**\n\t * @param {T} value\n\t * @return {libjass.Set.<T>} This set\n\t */\n\tadd(value: T): Set<T> {\n\t\tconst property = this._toProperty(value);\n\n\t\tif (property === null) {\n\t\t\tthrow new Error(\"This Set implementation only supports Number and String values.\");\n\t\t}\n\n\t\tif (!(property in this._elements)) {\n\t\t\tthis._size++;\n\t\t}\n\n\t\tthis._elements[property] = value;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t */\n\tclear(): void {\n\t\tthis._elements = Object.create(null);\n\t\tthis._size = 0;\n\t}\n\n\t/**\n\t * @param {T} value\n\t * @return {boolean}\n\t */\n\thas(value: T): boolean {\n\t\tconst property = this._toProperty(value);\n\n\t\tif (property === null) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn property in this._elements;\n\t}\n\n\t/**\n\t * @param {function(T, T, libjass.Set.<T>)} callbackfn A function that is called with each value in the set.\n\t * @param {*} thisArg\n\t */\n\tforEach(callbackfn: (value: T, index: T, set: Set<T>) => void, thisArg?: any): void {\n\t\tfor (let property of Object.keys(this._elements)) {\n\t\t\tconst element = this._elements[property];\n\t\t\tcallbackfn.call(thisArg, element, element, this);\n\t\t}\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * Converts the given value into a property name for the internal map.\n\t *\n\t * @param {T} value\n\t * @return {string}\n\t */\n\tprivate _toProperty(value: T): string {\n\t\tif (typeof value === \"number\") {\n\t\t\treturn `#${ value }`;\n\t\t}\n\n\t\tif (typeof value === \"string\") {\n\t\t\treturn `'${ value }`;\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\ndeclare const global: {\n\tSet?: typeof SimpleSet;\n};\n\nexport interface Set<T> {\n\t/**\n\t * @param {T} value\n\t * @return {libjass.Set.<T>} This set\n\t */\n\tadd(value: T): Set<T>;\n\n\t/**\n\t */\n\tclear(): void;\n\n\t/**\n\t * @param {T} value\n\t * @return {boolean}\n\t */\n\thas(value: T): boolean;\n\n\t/**\n\t * @param {function(T, T, libjass.Set.<T>)} callbackfn A function that is called with each value in the set.\n\t * @param {*} thisArg\n\t */\n\tforEach(callbackfn: (value: T, index: T, set: Set<T>) => void, thisArg?: any): void;\n\n\t/**\n\t * @type {number}\n\t */\n\tsize: number;\n}\n\n/**\n * Set to the global implementation of Set if the environment has one, else set to {@link ./utility/set.SimpleSet}\n *\n * Set it to null to force {@link ./utility/set.SimpleSet} to be used even if a global Set is present.\n *\n * @type {function(new:Set, !Array.<T>=)}\n */\nexport var Set: {\n\tnew <T>(iterable?: T[]): Set<T>;\n\tprototype: Set<any>;\n} = global.Set;\n\nif (Set === undefined || typeof Set.prototype.forEach !== \"function\" || (() => {\n\ttry {\n\t\treturn new Set([1, 2]).size !== 2;\n\t}\n\tcatch (ex) {\n\t\treturn true;\n\t}\n})()) {\n\tSet = SimpleSet;\n}\n\n/**\n * Sets the Set implementation used by libjass to the provided one. If null, {@link ./utility/set.SimpleSet} is used.\n *\n * @param {?function(new:Set, !Array.<T>=)} value\n */\nexport function setImplementation(value: typeof Set): void {\n\tif (value !== null) {\n\t\tSet = value;\n\t}\n\telse {\n\t\tSet = SimpleSet;\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Map } from \"../utility/map\";\n\nimport { Promise, DeferredPromise } from \"../utility/promise\";\n\nimport { WorkerCommands } from \"./commands\";\n\nimport { getWorkerCommandHandler, serialize, deserialize, registerWorkerCommand } from \"./misc\";\n\n/**\n * Represents a communication channel between the host and the web worker. An instance of this class is created by calling {@link libjass.webworker.createWorker}\n */\nexport interface WorkerChannel {\n\t/**\n\t * Sends a request to the other side to execute the given command with the given parameters.\n\t *\n\t * @param {number} command\n\t * @param {*} parameters\n\t * @return {!Promise.<*>} A promise that will get resolved when the other side computes the result\n\t */\n\trequest(command: WorkerCommands, parameters: any): Promise<any>;\n}\n\n/**\n * The signature of a handler registered to handle a particular command in {@link libjass.webworker.WorkerCommands}\n */\nexport interface WorkerCommandHandler {\n\t(parameters: any): Promise<any>;\n}\n\n/**\n * The interface implemented by a communication channel to the other side.\n */\ninterface WorkerCommunication {\n\t/**\n\t * @param {\"message\"} type\n\t * @param {function(!MessageEvent): *} listener\n\t * @param {?boolean} useCapture\n\t */\n\taddEventListener(type: \"message\", listener: (ev: MessageEvent) => any, useCapture?: boolean): void;\n\n\t/**\n\t * @param {string} type\n\t * @param {!EventListener} listener\n\t * @param {?boolean} useCapture\n\t */\n\taddEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\n\n\t/**\n\t * @param {*} message\n\t */\n\tpostMessage(message: any): void;\n}\n\n/**\n * The interface implemented by a request sent to the other side of the communication channel.\n */\ninterface WorkerRequestMessage {\n\t/**\n\t * An internal identifier for this request. Used to connect responses to their corresponding requests.\n\t *\n\t * @type {number}\n\t */\n\trequestId: number;\n\n\t/**\n\t * The command type of this request.\n\t *\n\t * @type {number}\n\t */\n\tcommand: WorkerCommands;\n\n\t/**\n\t * Any parameters serialized with this request.\n\t *\n\t * @type {*}\n\t */\n\tparameters: any;\n}\n\n/**\n * The interface implemented by a response received from the other side of the communication channel.\n */\ninterface WorkerResponseMessage {\n\t/**\n\t * An internal identifier for this response. Used to connect responses to their corresponding requests.\n\t *\n\t * @type {number}\n\t */\n\trequestId: number;\n\n\t/**\n\t * Set if the computation of this response resulted in an error.\n\t *\n\t * @type {*}\n\t */\n\terror: any;\n\n\t/**\n\t * The result of computing this response.\n\t *\n\t * @type {*}\n\t */\n\tresult: any;\n}\n\n/**\n * Internal implementation of libjass.webworker.WorkerChannel\n *\n * @param {!*} comm The object used to talk to the other side of the channel. When created by the main thread, this is the Worker object.\n * When created by the web worker, this is its global object.\n */\nexport class WorkerChannelImpl implements WorkerChannel {\n\tprivate static _lastRequestId: number = -1;\n\n\tprivate _pendingRequests = new Map<number, DeferredPromise<any>>();\n\n\tconstructor(private _comm: WorkerCommunication) {\n\t\tthis._comm.addEventListener(\"message\", ev => this._onMessage(<string>ev.data), false);\n\t}\n\n\t/**\n\t * @param {number} command\n\t * @param {*} parameters\n\t * @return {!Promise.<*>}\n\t */\n\trequest(command: WorkerCommands, parameters: any): Promise<any> {\n\t\tconst deferred = new DeferredPromise<any>();\n\t\tconst requestId = ++WorkerChannelImpl._lastRequestId;\n\t\tthis._pendingRequests.set(requestId, deferred);\n\n\t\tconst requestMessage: WorkerRequestMessage = { requestId, command, parameters };\n\t\tthis._comm.postMessage(serialize(requestMessage));\n\n\t\treturn deferred.promise;\n\t}\n\n\t/**\n\t * @param {number} requestId\n\t */\n\tcancelRequest(requestId: number): void {\n\t\tconst deferred = this._pendingRequests.get(requestId);\n\t\tif (deferred === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._pendingRequests.delete(requestId);\n\t\tdeferred.reject(new Error(\"Cancelled.\"));\n\t}\n\n\t/**\n\t * @param {!WorkerResponseMessage} message\n\t */\n\tprivate _respond(message: WorkerResponseMessage): void {\n\t\tlet { requestId, error, result } = message;\n\t\tif (error instanceof Error) {\n\t\t\terror = { message: error.message, stack: error.stack };\n\t\t}\n\t\tthis._comm.postMessage(serialize({ command: WorkerCommands.Response, requestId, error, result }));\n\t}\n\n\t/**\n\t * @param {string} rawMessage\n\t */\n\tprivate _onMessage(rawMessage: string): void {\n\t\tconst message = <{ command: WorkerCommands }>deserialize(rawMessage);\n\n\t\tif (message.command === WorkerCommands.Response) {\n\t\t\tconst responseMessage = <WorkerResponseMessage><any>message;\n\n\t\t\tconst deferred = this._pendingRequests.get(responseMessage.requestId);\n\t\t\tif (deferred !== undefined) {\n\t\t\t\tthis._pendingRequests.delete(responseMessage.requestId);\n\t\t\t\tif (responseMessage.error === null) {\n\t\t\t\t\tdeferred.resolve(responseMessage.result);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdeferred.reject(responseMessage.error);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst requestMessage = <WorkerRequestMessage>message;\n\t\t\tconst requestId = requestMessage.requestId;\n\n\t\t\tconst commandCallback = getWorkerCommandHandler(requestMessage.command);\n\t\t\tif (commandCallback === undefined) {\n\t\t\t\tthis._respond({ requestId, error: new Error(`No handler registered for command ${ requestMessage.command }`), result: null });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcommandCallback(requestMessage.parameters).then<WorkerResponseMessage>(\n\t\t\t\tresult => ({ requestId, error: null, result }),\n\t\t\t\terror => ({ requestId, error, result: null })\n\t\t\t).then(responseMessage => this._respond(responseMessage));\n\t\t}\n\t}\n}\n\nregisterWorkerCommand(WorkerCommands.Ping, parameters => new Promise(resolve => resolve()));\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The commands that can be sent to or from a web worker.\n */\nexport enum WorkerCommands {\n\tResponse = 0,\n\tParse = 1,\n\tPing = 2,\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Map } from \"../utility/map\";\n\nimport { Promise, DeferredPromise } from \"../utility/promise\";\n\nimport { WorkerChannel, WorkerChannelImpl } from \"./channel\";\nexport { WorkerChannel } from \"./channel\";\n\nexport { WorkerCommands } from \"./commands\";\n\ndeclare const exports: any;\n\n/**\n * Indicates whether web workers are supposed in this environment or not.\n *\n * @type {boolean}\n */\nexport const supported = typeof Worker !== \"undefined\";\n\nconst _scriptNode = (typeof document !== \"undefined\" && document.currentScript !== undefined) ? document.currentScript : null;\n\n/**\n * Create a new web worker and returns a {@link libjass.webworker.WorkerChannel} to it.\n *\n * @param {string=} scriptPath The path to libjass.js to be loaded in the web worker. If the browser supports document.currentScript, the parameter is optional and, if not provided,\n * the path will be determined from the src attribute of the <script> element that contains the currently running copy of libjass.js\n * @return {!libjass.webworker.WorkerChannel} A communication channel to the new web worker.\n */\nexport function createWorker(scriptPath: string = _scriptNode.src): WorkerChannel {\n\treturn new WorkerChannelImpl(new Worker(scriptPath));\n}\n\ndeclare const global: any;\n\nif (typeof WorkerGlobalScope !== \"undefined\" && global instanceof WorkerGlobalScope) {\n\t// This is a web worker. Set up a channel to talk back to the main thread.\n\tnew WorkerChannelImpl(global);\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Map } from \"../utility/map\";\n\nimport { WorkerCommands } from \"./commands\";\nimport { WorkerCommandHandler } from \"./channel\";\n\nconst workerCommands = new Map<WorkerCommands, WorkerCommandHandler>();\n\nconst classPrototypes = new Map<number, any>();\n\n/**\n * Registers a handler for the given worker command.\n *\n * @param {number} command The command that this handler will handle. One of the {@link libjass.webworker.WorkerCommands} constants.\n * @param {function(*, function(*, *))} handler The handler. A function of the form (parameters: *, response: function(error: *, result: *): void): void\n */\nexport function registerWorkerCommand(command: WorkerCommands, handler: WorkerCommandHandler): void {\n\tworkerCommands.set(command, handler);\n}\n\n/**\n * Gets the handler for the given worker command.\n *\n * @param {number} command\n * @return {?function(*, function(*, *))}\n */\nexport function getWorkerCommandHandler(command: WorkerCommands): WorkerCommandHandler {\n\treturn workerCommands.get(command);\n}\n\n/**\n * Registers a prototype as a deserializable type.\n *\n * @param {!*} prototype\n */\nexport function registerClassPrototype(prototype: any): void {\n\tprototype._classTag = classPrototypes.size;\n\tclassPrototypes.set(prototype._classTag, prototype);\n}\n\n/**\n * @param {*} obj\n * @return {string}\n */\nexport function serialize(obj: any): string {\n\treturn JSON.stringify(obj, (/* ujs:unreferenced */ key: string, value: any) => {\n\t\tif (value && value._classTag !== undefined) {\n\t\t\tvalue._classTag = value._classTag;\n\t\t}\n\n\t\treturn value;\n\t});\n}\n\n/**\n * @param {string} str\n * @return {*}\n */\nexport function deserialize(str: string): any {\n\treturn JSON.parse(str, (/* ujs:unreferenced */ key: string, value: any) => {\n\t\tif (value && value._classTag !== undefined) {\n\t\t\tconst hydratedValue = Object.create(classPrototypes.get(value._classTag));\n\t\t\tfor (let key of Object.keys(value)) {\n\t\t\t\tif (key !== \"_classTag\") {\n\t\t\t\t\thydratedValue[key] = value[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvalue = hydratedValue;\n\t\t}\n\n\t\treturn value;\n\t});\n}\n"]}